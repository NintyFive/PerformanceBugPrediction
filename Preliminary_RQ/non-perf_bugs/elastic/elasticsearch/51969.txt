{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/51969","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51969/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51969/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/51969/events","html_url":"https://github.com/elastic/elasticsearch/issues/51969","id":560711809,"node_id":"MDU6SXNzdWU1NjA3MTE4MDk=","number":51969,"title":"ReplicaShardAllocatorSyncIdIT.testPreferCopyCanPerformNoopRecovery failing on CI","user":{"login":"gwbrown","id":1522844,"node_id":"MDQ6VXNlcjE1MjI4NDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1522844?v=4","gravatar_id":"","url":"https://api.github.com/users/gwbrown","html_url":"https://github.com/gwbrown","followers_url":"https://api.github.com/users/gwbrown/followers","following_url":"https://api.github.com/users/gwbrown/following{/other_user}","gists_url":"https://api.github.com/users/gwbrown/gists{/gist_id}","starred_url":"https://api.github.com/users/gwbrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gwbrown/subscriptions","organizations_url":"https://api.github.com/users/gwbrown/orgs","repos_url":"https://api.github.com/users/gwbrown/repos","events_url":"https://api.github.com/users/gwbrown/events{/privacy}","received_events_url":"https://api.github.com/users/gwbrown/received_events","type":"User","site_admin":false},"labels":[{"id":152510590,"node_id":"MDU6TGFiZWwxNTI1MTA1OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Recovery","name":":Distributed/Recovery","color":"0e8a16","default":false,"description":"Anything around constructing a new shard, either from a local or a remote source."},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-02-06T00:40:15Z","updated_at":"2020-02-06T00:54:04Z","closed_at":"2020-02-06T00:54:03Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Per build-stats, it looks like this started failing 2020-02-04 11:22 UTC-7. Looks like it's only happened in `master` and on PR builds so far.\r\n\r\n[Jenkins build](https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+pull-request-1/15329/)\r\n[Build scan](https://gradle-enterprise.elastic.co/s/knd2gbrgjyl4i/tests/kyv2y2z3r4v7m-vtoza7w6tychq?open-stacktraces=WzBd)\r\n\r\nReproduce line:\r\n```\r\n./gradlew ':server:integTest' --tests \"org.elasticsearch.gateway.ReplicaShardAllocatorSyncIdIT.testPreferCopyCanPerformNoopRecovery\" -Dtests.seed=731367CCBAF0772D -Dtests.security.manager=true -Dtests.locale=hu-HU -Dtests.timezone=Indian/Antananarivo -Dcompiler.java=13\r\n```\r\n\r\nStack trace:\r\n```\r\njava.lang.AssertionError\r\n: \r\n(No message provided)\r\nClose stacktrace\r\nat __randomizedtesting.SeedInfo.seed([731367CCBAF0772D:EC2C4E3AC6293AC0]:0)\r\nat org.junit.Assert.fail(Assert.java:86)\r\nat org.junit.Assert.assertTrue(Assert.java:41)\r\nat org.junit.Assert.assertFalse(Assert.java:64)\r\nat org.junit.Assert.assertFalse(Assert.java:74)\r\nat org.elasticsearch.gateway.ReplicaShardAllocatorSyncIdIT$SyncedFlushEngine.syncFlush(ReplicaShardAllocatorSyncIdIT.java:91)\r\nat org.elasticsearch.gateway.ReplicaShardAllocatorSyncIdIT.syncFlush(ReplicaShardAllocatorSyncIdIT.java:124)\r\nat org.elasticsearch.gateway.ReplicaShardAllocatorSyncIdIT.testPreferCopyCanPerformNoopRecovery(ReplicaShardAllocatorSyncIdIT.java:152)\r\nat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\nat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\nat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\nat java.lang.reflect.Method.invoke(Method.java:566)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1754)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:942)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:978)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:992)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\nat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\nat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\nat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\nat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:370)\r\nat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:819)\r\nat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:470)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:951)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:836)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:887)\r\nat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:898)\r\nat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\nat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\nat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\nat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\nat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\nat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\nat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\nat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:370)\r\nat com.carrotsearch.randomizedtesting.ThreadLeakControl.lambda$forkTimeoutingTask$0(ThreadLeakControl.java:826)\r\nat java.lang.Thread.run(Thread.java:834)\r\n```","closed_by":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"performed_via_github_app":null}