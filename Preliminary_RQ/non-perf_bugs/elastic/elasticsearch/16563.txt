{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/16563","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16563/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16563/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16563/events","html_url":"https://github.com/elastic/elasticsearch/issues/16563","id":132558363,"node_id":"MDU6SXNzdWUxMzI1NTgzNjM=","number":16563,"title":"Conflicting doc values in mappings causes shard initialization failures","user":{"login":"KeithTr","id":16723794,"node_id":"MDQ6VXNlcjE2NzIzNzk0","avatar_url":"https://avatars2.githubusercontent.com/u/16723794?v=4","gravatar_id":"","url":"https://api.github.com/users/KeithTr","html_url":"https://github.com/KeithTr","followers_url":"https://api.github.com/users/KeithTr/followers","following_url":"https://api.github.com/users/KeithTr/following{/other_user}","gists_url":"https://api.github.com/users/KeithTr/gists{/gist_id}","starred_url":"https://api.github.com/users/KeithTr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KeithTr/subscriptions","organizations_url":"https://api.github.com/users/KeithTr/orgs","repos_url":"https://api.github.com/users/KeithTr/repos","events_url":"https://api.github.com/users/KeithTr/events{/privacy}","received_events_url":"https://api.github.com/users/KeithTr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-09T22:45:48Z","updated_at":"2016-02-10T22:43:13Z","closed_at":"2016-02-10T22:43:13Z","author_association":"NONE","active_lock_reason":null,"body":"I found a way to create conflicting mappings using doc values in Elasticsearch 2.2.0.\n\nSteps to reproduce:\n\n```\n# Create index with doc values enabled\ncurl -XPUT localhost:9200/index -d '{\n    \"mappings\": {\n        \"type1\": {\n            \"properties\": {\n                \"field_name\": {\n                    \"type\": \"string\",\n                    \"index\": \"not_analyzed\",\n                    \"doc_values\": true\n                }\n            }\n        }\n    }\n}'\n\n# Add type with doc values disabled\n# These must be done as separate requests, otherwise ES recognizes that they are conflicting\ncurl -XPUT localhost:9200/index/_mapping/type2 -d '{\n    \"properties\": {\n        \"field_name\": {\n            \"type\": \"string\",\n            \"index\": \"not_analyzed\",\n            \"doc_values\": false\n        }\n    }\n}'\n```\n\nGetting the mappings returns conflicting doc values for this index: one field has doc values disabled, the other has doc values enabled.\n\n```\n{\n   \"index\": {\n      \"mappings\": {\n         \"type2\": {\n            \"properties\": {\n               \"field_name\": {\n                  \"type\": \"string\",\n                  \"index\": \"not_analyzed\",\n                  \"doc_values\": false\n               }\n            }\n         },\n         \"type1\": {\n            \"properties\": {\n               \"field_name\": {\n                  \"type\": \"string\",\n                  \"index\": \"not_analyzed\"\n               }\n            }\n         }\n      }\n   }\n}\n```\n\nThis does not cause problems for the cluster until the nodes are restarted. When the nodes try to initialize the index with conflicting mappings it _can_ cause nodes to enter an endless loop of trying (and failing) to allocate shards:\n\n```\n[2016-02-09 16:04:56,313][WARN ][indices.cluster          ] [Fantasia] [index] failed to add mapping [type1], source [{\"type1\":{\"properties\":{\"field_name\":{\"type\":\"string\",\"index\":\"not_analyzed\"}}}}]\njava.lang.IllegalArgumentException: Mapper for [field_name] conflicts with existing mapping in other types:\n[mapper [field_name] has different [doc_values] values, cannot change from disabled to enabled]\n    at org.elasticsearch.index.mapper.FieldTypeLookup.checkCompatibility(FieldTypeLookup.java:170)\n    at org.elasticsearch.index.mapper.MapperService.checkMappersCompatibility(MapperService.java:402)\n    at org.elasticsearch.index.mapper.MapperService.checkMappersCompatibility(MapperService.java:411)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:314)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:272)\n    at org.elasticsearch.indices.cluster.IndicesClusterStateService.processMapping(IndicesClusterStateService.java:388)\n    at org.elasticsearch.indices.cluster.IndicesClusterStateService.applyMappings(IndicesClusterStateService.java:348)\n    at org.elasticsearch.indices.cluster.IndicesClusterStateService.clusterChanged(IndicesClusterStateService.java:164)\n    at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:600)\n    at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:762)\n    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)\n    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n[2016-02-09 16:04:56,740][WARN ][indices.cluster          ] [Fantasia] [[index][4]] marking and sending shard failed due to [failed to update mappings]\njava.lang.IllegalArgumentException: Mapper for [field_name] conflicts with existing mapping in other types:\n[mapper [field_name] has different [doc_values] values, cannot change from disabled to enabled]\n    at org.elasticsearch.index.mapper.FieldTypeLookup.checkCompatibility(FieldTypeLookup.java:170)\n    at org.elasticsearch.index.mapper.MapperService.checkMappersCompatibility(MapperService.java:402)\n    at org.elasticsearch.index.mapper.MapperService.checkMappersCompatibility(MapperService.java:411)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:314)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:272)\n    at org.elasticsearch.indices.cluster.IndicesClusterStateService.processMapping(IndicesClusterStateService.java:388)\n    at org.elasticsearch.indices.cluster.IndicesClusterStateService.applyMappings(IndicesClusterStateService.java:348)\n    at org.elasticsearch.indices.cluster.IndicesClusterStateService.clusterChanged(IndicesClusterStateService.java:164)\n    at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:600)\n    at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:762)\n    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)\n    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n[2016-02-09 16:04:56,743][WARN ][cluster.action.shard     ] [Fantasia] [index][4] received shard failed for [index][4], node[tf4WmuoCQHKoHctABxTNwg], [P], v[89], s[INITIALIZING], a[id=zgBVat8RTKaWToeKvEQ9tg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-02-09T22:04:54.620Z], details[failed to update mappings, failure IllegalArgumentException[Mapper for [field_name] conflicts with existing mapping in other types:\n[mapper [field_name] has different [doc_values] values, cannot change from disabled to enabled]]]], indexUUID [Nn0u7aW-RNiSyba5s1YrsQ], message [failed to update mappings], failure [IllegalArgumentException[Mapper for [field_name] conflicts with existing mapping in other types:\n[mapper [field_name] has different [doc_values] values, cannot change from disabled to enabled]]]\njava.lang.IllegalArgumentException: Mapper for [field_name] conflicts with existing mapping in other types:\n[mapper [field_name] has different [doc_values] values, cannot change from disabled to enabled]\n    at org.elasticsearch.index.mapper.FieldTypeLookup.checkCompatibility(FieldTypeLookup.java:170)\n    at org.elasticsearch.index.mapper.MapperService.checkMappersCompatibility(MapperService.java:402)\n    at org.elasticsearch.index.mapper.MapperService.checkMappersCompatibility(MapperService.java:411)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:314)\n    at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:272)\n    at org.elasticsearch.indices.cluster.IndicesClusterStateService.processMapping(IndicesClusterStateService.java:388)\n    at org.elasticsearch.indices.cluster.IndicesClusterStateService.applyMappings(IndicesClusterStateService.java:348)\n    at org.elasticsearch.indices.cluster.IndicesClusterStateService.clusterChanged(IndicesClusterStateService.java:164)\n    at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:600)\n    at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:762)\n    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)\n    at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n[2016-02-09 16:04:56,745][WARN ][indices.cluster          ] [Fantasia] [[index][3]] marking and sending shard failed due to [master [{Fantasia}{tf4WmuoCQHKoHctABxTNwg}{127.0.0.1}{127.0.0.1:9300}] marked shard as started, but shard has not been created, mark shard as failed]\n[2016-02-09 16:04:56,746][WARN ][cluster.action.shard     ] [Fantasia] [index][3] received shard failed for [index][3], node[tf4WmuoCQHKoHctABxTNwg], [P], v[140], s[STARTED], a[id=LW-dtt99Sq6fDsfAMy7qBw], indexUUID [Nn0u7aW-RNiSyba5s1YrsQ], message [master [{Fantasia}{tf4WmuoCQHKoHctABxTNwg}{127.0.0.1}{127.0.0.1:9300}] marked shard as started, but shard has not been created, mark shard as failed], failure [Unknown]\n[2016-02-09 16:04:56,746][WARN ][indices.cluster          ] [Fantasia] [[index][1]] marking and sending shard failed due to [master [{Fantasia}{tf4WmuoCQHKoHctABxTNwg}{127.0.0.1}{127.0.0.1:9300}] marked shard as started, but shard has not been created, mark shard as failed]\n[2016-02-09 16:04:56,746][WARN ][cluster.action.shard     ] [Fantasia] [index][1] received shard failed for [index][1], node[tf4WmuoCQHKoHctABxTNwg], [P], v[134], s[STARTED], a[id=xuQ5AlXZR9SoR-5zeb161Q], indexUUID [Nn0u7aW-RNiSyba5s1YrsQ], message [master [{Fantasia}{tf4WmuoCQHKoHctABxTNwg}{127.0.0.1}{127.0.0.1:9300}] marked shard as started, but shard has not been created, mark shard as failed], failure [Unknown]\n[2016-02-09 16:04:56,747][WARN ][cluster.action.shard     ] [Fantasia] [index][4] received shard failed for [index][4], node[tf4WmuoCQHKoHctABxTNwg], [P], v[89], s[INITIALIZING], a[id=zgBVat8RTKaWToeKvEQ9tg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-02-09T22:04:54.620Z], details[failed to update mappings, failure IllegalArgumentException[Mapper for [field_name] conflicts with existing mapping in other types:\n[mapper [field_name] has different [doc_values] values, cannot change from disabled to enabled]]]], indexUUID [Nn0u7aW-RNiSyba5s1YrsQ], message [master {Fantasia}{tf4WmuoCQHKoHctABxTNwg}{127.0.0.1}{127.0.0.1:9300} marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]\n[2016-02-09 16:04:56,747][WARN ][cluster.action.shard     ] [Fantasia] [index][0] received shard failed for [index][0], node[tf4WmuoCQHKoHctABxTNwg], [P], v[117], s[INITIALIZING], a[id=L2V8OQcFSZmi8X55QereqQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-02-09T22:04:54.620Z], details[failed to update mappings, failure IllegalArgumentException[Mapper for [field_name] conflicts with existing mapping in other types:\n[mapper [field_name] has different [doc_values] values, cannot change from disabled to enabled]]]], indexUUID [Nn0u7aW-RNiSyba5s1YrsQ], message [master {Fantasia}{tf4WmuoCQHKoHctABxTNwg}{127.0.0.1}{127.0.0.1:9300} marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]\n```\n\nThe above failure to allocate shards is not guaranteed, but I have always been able to get it to happen by restarting the node several times.\n","closed_by":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"performed_via_github_app":null}