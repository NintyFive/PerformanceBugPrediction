[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281031045","html_url":"https://github.com/elastic/elasticsearch/issues/23256#issuecomment-281031045","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23256","id":281031045,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTAzMTA0NQ==","user":{"login":"m9aertner","id":6495291,"node_id":"MDQ6VXNlcjY0OTUyOTE=","avatar_url":"https://avatars0.githubusercontent.com/u/6495291?v=4","gravatar_id":"","url":"https://api.github.com/users/m9aertner","html_url":"https://github.com/m9aertner","followers_url":"https://api.github.com/users/m9aertner/followers","following_url":"https://api.github.com/users/m9aertner/following{/other_user}","gists_url":"https://api.github.com/users/m9aertner/gists{/gist_id}","starred_url":"https://api.github.com/users/m9aertner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/m9aertner/subscriptions","organizations_url":"https://api.github.com/users/m9aertner/orgs","repos_url":"https://api.github.com/users/m9aertner/repos","events_url":"https://api.github.com/users/m9aertner/events{/privacy}","received_events_url":"https://api.github.com/users/m9aertner/received_events","type":"User","site_admin":false},"created_at":"2017-02-20T09:40:18Z","updated_at":"2017-02-20T09:40:18Z","author_association":"CONTRIBUTOR","body":"Works:\r\n\r\n```\r\ncurl -XPUT 'http://search-xxx.us-east-1.es.amazonaws.com/myindex/_bulk' -d '\r\n{\"index\": {\"_type\": \"myType\",\"_id\": \"1\"}}\r\n{\"foo\":\"bar\"}\r\n'\r\n```\r\n\r\nDoes not work, but should:\r\n\r\n```\r\ncurl -XPUT 'http://search-xxx.us-east-1.es.amazonaws.com/myindex/_bulk' -d '\r\n{\"index\": {\"_index\": \"myindex\",\"_type\": \"myType\",\"_id\": \"1\"}}\r\n{\"foo\":\"bar\"}\r\n'\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/288016524","html_url":"https://github.com/elastic/elasticsearch/issues/23256#issuecomment-288016524","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23256","id":288016524,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODAxNjUyNA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2017-03-21T09:05:03Z","updated_at":"2017-03-21T09:05:03Z","author_association":"MEMBER","body":"I am not sure we should do this. \"Elasticsearch will reject requests that have an explicit index specified in the request body\", meaning no matter what the value is. Why can't you update the bulk request to not contain the index name as it is the same as what you have in the URL? I am not getting the reasons you mentioned, backwards compatibility and consistency across domains, maybe you can elaborate on those.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/288079758","html_url":"https://github.com/elastic/elasticsearch/issues/23256#issuecomment-288079758","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23256","id":288079758,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODA3OTc1OA==","user":{"login":"m9aertner","id":6495291,"node_id":"MDQ6VXNlcjY0OTUyOTE=","avatar_url":"https://avatars0.githubusercontent.com/u/6495291?v=4","gravatar_id":"","url":"https://api.github.com/users/m9aertner","html_url":"https://github.com/m9aertner","followers_url":"https://api.github.com/users/m9aertner/followers","following_url":"https://api.github.com/users/m9aertner/following{/other_user}","gists_url":"https://api.github.com/users/m9aertner/gists{/gist_id}","starred_url":"https://api.github.com/users/m9aertner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/m9aertner/subscriptions","organizations_url":"https://api.github.com/users/m9aertner/orgs","repos_url":"https://api.github.com/users/m9aertner/repos","events_url":"https://api.github.com/users/m9aertner/events{/privacy}","received_events_url":"https://api.github.com/users/m9aertner/received_events","type":"User","site_admin":false},"created_at":"2017-03-21T13:36:04Z","updated_at":"2017-03-21T13:36:04Z","author_association":"CONTRIBUTOR","body":"Thanks for considering this minor change request.\r\n\r\nConsider the case where there's a separation of concerns, in larger organizations: *what* gets sent to the index, and *where* it gets sent, i.e. development versus deployment.\r\n\r\nThe deployer configures *where* the data gets sent to. She configures a *URL* that may or may not contain an index. Maybe it's smart to have multiple applications share one cluster, with one configuration item across all applications, namely the URL with *no index*. Or, they decide to force a specific index for that specific app, so they put in an index and set the safety flag (in order to guard against erroneous/malicious cross-sending apps).\r\n\r\nThe developer, on the other side, implements *what* gets sent. To support both cases, he puts the index into the data, which is fine. He should not need to know which decision was taken by the deployer and/or if the cluster was configured with the safety bit on or off.\r\n\r\nWith my suggested improvement (i.e. some leniency for apparently non-conflicting data) the developer just includes the index name *always*. There is no need to leave it out. This is one configuration point less for the developer. Currently, the developer needs to prepare for both cases, adding a bit of configuration for the deployer to set (in addition to that URL). Less is better.\r\n\r\n\r\nSo my key concerns are \"don't need to know\" and \"de-coupling\". I mentioned backwards compatibility because the deployer can't change the domain config w/o having to change the app. Conversely, I mentioned \"consistency\" because one can't deploy the same app against two domains with a difference in that setting.\r\n\r\n\r\nSure, it's a minor point. And we've changed our App code and will align our domains to have the same setting, but I still find this limitation unnecessarily restrictive. It would probably be a rather small ES code- and doc change. ( Time to clone ES and look for myself! )\r\n\r\n\r\nAgain, thanks for your time and the amazing ES system!\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/377371934","html_url":"https://github.com/elastic/elasticsearch/issues/23256#issuecomment-377371934","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23256","id":377371934,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NzM3MTkzNA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2018-03-29T21:04:27Z","updated_at":"2018-03-29T21:04:27Z","author_association":"CONTRIBUTOR","body":"While we're all for applications being decoupled from the particulars of their Elasticsearch installation not having control of how the bulk is performed seems like a fairly difficult thing to work around. Not in this particular case so much as for other requests like searches. If this had come up years ago we probably would have considered it \"normal\" and implemented it but because it didn't I also think that this is a fairly rare thing to have to do. Because of both of those things, and because this feels like it ought to be fairly easy to fix on the client side, we're not going to implement this.","performed_via_github_app":null}]