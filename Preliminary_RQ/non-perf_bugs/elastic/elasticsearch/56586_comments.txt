[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/627554551","html_url":"https://github.com/elastic/elasticsearch/issues/56586#issuecomment-627554551","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56586","id":627554551,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNzU1NDU1MQ==","user":{"login":"albertzaharovits","id":4568420,"node_id":"MDQ6VXNlcjQ1Njg0MjA=","avatar_url":"https://avatars2.githubusercontent.com/u/4568420?v=4","gravatar_id":"","url":"https://api.github.com/users/albertzaharovits","html_url":"https://github.com/albertzaharovits","followers_url":"https://api.github.com/users/albertzaharovits/followers","following_url":"https://api.github.com/users/albertzaharovits/following{/other_user}","gists_url":"https://api.github.com/users/albertzaharovits/gists{/gist_id}","starred_url":"https://api.github.com/users/albertzaharovits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertzaharovits/subscriptions","organizations_url":"https://api.github.com/users/albertzaharovits/orgs","repos_url":"https://api.github.com/users/albertzaharovits/repos","events_url":"https://api.github.com/users/albertzaharovits/events{/privacy}","received_events_url":"https://api.github.com/users/albertzaharovits/received_events","type":"User","site_admin":false},"created_at":"2020-05-12T19:46:16Z","updated_at":"2020-05-12T19:47:31Z","author_association":"CONTRIBUTOR","body":"@aninda052 Thank you for raising this to our attention.\r\n\r\nI've identified two issues from your description:\r\n1) There is a documentation problem with the [`analyzer`](https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html#analyze-api-query-params) request parameter. It can only take a `String` value, but not an object. Hence the correctly formatted request from the above must be:\r\n```\r\ncurl -X GET \"localhost:9200/_analyze?pretty&error_trace=true\" -H 'Content-Type: application/json' -d'\r\n{\r\n  \"tokenizer\": {\r\n    \"type\": \"ngram\",\r\n    \"min_gram\": 3,\r\n    \"max_gram\": 5,\r\n    \"token_chars\": [\r\n        \"letter\",\r\n        \"digit\"\r\n    ]\r\n  },\r\n  \"filter\": [\r\n    \"lowercase\"\r\n  ],\r\n  \"text\" : \"Quick Brown Foxes!\"\r\n}\r\n'\r\n```\r\n2) There is an obscure ngram slack parameter for analyze requests without an index, which triggers exceptions such as:\r\n```\r\n\"[The difference between max_gram and min_gram in NGram Tokenizer must be less than or equal to: [1] but was [5]. This limit can be set by changing the [index.max_ngram_diff] index level setting.]; nested: IllegalArgumentException[The difference between max_gram and min_gram in NGram Tokenizer must be less than or equal to: [1] but was [5]. This limit can be set by changing the [index.max_ngram_diff] index level setting.];at org.elasticsearch.ElasticsearchException.guessRootCauses(ElasticsearchException.java:644)\r\nat org.elasticsearch.ElasticsearchException.generateFailureXContent(ElasticsearchException.java:572)\r\nat org.elasticsearch.rest.BytesRestResponse.build(BytesRestResponse.java:138)\r\nat org.elasticsearch.rest.BytesRestResponse.<init>(BytesRestResponse.java:96)\r\nat org.elasticsearch.rest.BytesRestResponse.<init>(BytesRestResponse.java:91)\r\nat org.elasticsearch.rest.action.RestActionListener.onFailure(RestActionListener.java:58)\r\nat org.elasticsearch.action.support.TransportAction$1.onFailure(TransportAction.java:79)\r\nat org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction$1.handleException(TransportSingleShardAction.java:197)\r\nat org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleException(TransportService.java:1130)\r\nat org.elasticsearch.transport.TransportService$DirectResponseChannel.processException(TransportService.java:1239)\r\nat org.elasticsearch.transport.TransportService$DirectResponseChannel.sendResponse(TransportService.java:1213)\r\nat org.elasticsearch.transport.TaskTransportChannel.sendResponse(TaskTransportChannel.java:60)\r\nat org.elasticsearch.action.support.ChannelActionListener.onFailure(ChannelActionListener.java:56)\r\nat org.elasticsearch.action.ActionRunnable.onFailure(ActionRunnable.java:88)\r\nat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.onFailure(ThreadContext.java:680)\r\nat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:39)\r\nat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\r\nat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)\r\nat java.base/java.lang.Thread.run(Thread.java:832)\\nCaused by: java.lang.IllegalArgumentException: The difference between max_gram and min_gram in NGram Tokenizer must be less than or equal to: [1] but was [5]. This limit can be set by changing the [index.max_ngram_diff] index level setting.\r\nat org.elasticsearch.analysis.common.NGramTokenizerFactory.<init>(NGramTokenizerFactory.java:119)\r\nat org.elasticsearch.index.analysis.AnalysisRegistry.getComponentFactory(AnalysisRegistry.java:131)\r\nat org.elasticsearch.index.analysis.AnalysisRegistry.buildCustomAnalyzer(AnalysisRegistry.java:229)\r\nat org.elasticsearch.action.admin.indices.analyze.TransportAnalyzeAction.buildCustomAnalyzer(TransportAnalyzeAction.java:200)\r\nat org.elasticsearch.action.admin.indices.analyze.TransportAnalyzeAction.analyze(TransportAnalyzeAction.java:131)\r\nat org.elasticsearch.action.admin.indices.analyze.TransportAnalyzeAction.shardOperation(TransportAnalyzeAction.java:121)\r\nat org.elasticsearch.action.admin.indices.analyze.TransportAnalyzeAction.shardOperation(TransportAnalyzeAction.java:73)\r\nat org.elasticsearch.action.support.single.shard.TransportSingleShardAction.lambda$asyncShardOperation$0(TransportSingleShardAction.java:110)\r\nat org.elasticsearch.action.ActionRunnable.lambda$supply$0(ActionRunnable.java:58)\r\nat org.elasticsearch.action.ActionRunnable$2.doRun(ActionRunnable.java:73)\r\nat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:692)\r\nat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n```\r\nCan someone from @elastic/es-search investigate further, please?\r\n ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/627633930","html_url":"https://github.com/elastic/elasticsearch/issues/56586#issuecomment-627633930","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56586","id":627633930,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNzYzMzkzMA==","user":{"login":"jtibshirani","id":7461306,"node_id":"MDQ6VXNlcjc0NjEzMDY=","avatar_url":"https://avatars3.githubusercontent.com/u/7461306?v=4","gravatar_id":"","url":"https://api.github.com/users/jtibshirani","html_url":"https://github.com/jtibshirani","followers_url":"https://api.github.com/users/jtibshirani/followers","following_url":"https://api.github.com/users/jtibshirani/following{/other_user}","gists_url":"https://api.github.com/users/jtibshirani/gists{/gist_id}","starred_url":"https://api.github.com/users/jtibshirani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtibshirani/subscriptions","organizations_url":"https://api.github.com/users/jtibshirani/orgs","repos_url":"https://api.github.com/users/jtibshirani/repos","events_url":"https://api.github.com/users/jtibshirani/events{/privacy}","received_events_url":"https://api.github.com/users/jtibshirani/received_events","type":"User","site_admin":false},"created_at":"2020-05-12T22:32:05Z","updated_at":"2020-05-12T22:32:05Z","author_association":"MEMBER","body":"I opened #56650 to address the docs issue that @albertzaharovits found.\r\n\r\nAs for the ngram diff issue, here's a suggested workaround:\r\n* Create a temporary test index with the setting `index.max_ngram_diff` increased to a larger number.\r\n* Run the analyze API against that index, as in `GET /my-test-index/_analyze ...`.\r\n\r\nTo me this is a reasonable limitation of the analyze API, and doesn't seem like a bug. I don't think we would want to add the ability to pass index settings when testing out a transient custom analysis chain.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/627822333","html_url":"https://github.com/elastic/elasticsearch/issues/56586#issuecomment-627822333","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56586","id":627822333,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNzgyMjMzMw==","user":{"login":"aninda052","id":16169147,"node_id":"MDQ6VXNlcjE2MTY5MTQ3","avatar_url":"https://avatars1.githubusercontent.com/u/16169147?v=4","gravatar_id":"","url":"https://api.github.com/users/aninda052","html_url":"https://github.com/aninda052","followers_url":"https://api.github.com/users/aninda052/followers","following_url":"https://api.github.com/users/aninda052/following{/other_user}","gists_url":"https://api.github.com/users/aninda052/gists{/gist_id}","starred_url":"https://api.github.com/users/aninda052/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aninda052/subscriptions","organizations_url":"https://api.github.com/users/aninda052/orgs","repos_url":"https://api.github.com/users/aninda052/repos","events_url":"https://api.github.com/users/aninda052/events{/privacy}","received_events_url":"https://api.github.com/users/aninda052/received_events","type":"User","site_admin":false},"created_at":"2020-05-13T08:07:28Z","updated_at":"2020-05-13T08:07:28Z","author_association":"NONE","body":"thanks for the suggesting @jtibshirani  :) ","performed_via_github_app":null}]