[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281287973","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281287973","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281287973,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTI4Nzk3Mw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T09:20:42Z","updated_at":"2017-02-21T09:20:42Z","author_association":"CONTRIBUTOR","body":"Thanks for reporting this bug.\r\n\r\nHow many nodes do you have in your cluster and how many replicas has this index?\r\n\r\nCould you try to find the stack trace of this exception in the Elasticsearch logs?\r\n\r\nCould you try to reproduce this bug again after adding a line that contains `-ea` to your `config/jvm.options` and restarting. This will tell the JVM to enable assertions and potentially help have more information about where invariants get violated.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281298721","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281298721","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281298721,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTI5ODcyMQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T10:04:42Z","updated_at":"2017-02-21T10:04:42Z","author_association":"CONTRIBUTOR","body":"OK, I just reviewed conditions under which this exception may happen and it looks like the only option is that there is an orphan child document at the end of a segment. This is bad since it should never happen given how Elasticsearch enforces the block structure when nested mappings are used.\r\n\r\nCould you check whether your index is corrupt by running the following command:\r\n\r\n```\r\nfor index_dir in data/*/nodes/*/indices/*/*/index; do java -ea -cp lib/lucene-core-6.4.1.jar org.apache.lucene.index.CheckIndex -fast $index_dir; done\r\n```\r\n\r\nYou may need to update the paths and replace `data` with your data directory and `lib` with your lib directory depending on how you installed Elasticsearch. This command will verify the checksums of all your index files and report in case there are mismatches. If it reports errors then it would mean your index is corrupt as its content does not match what was written, and otherwise it would mean there likely a bug in how Elasticsearch builds nested blocks.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281336627","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281336627","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281336627,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTMzNjYyNw==","user":{"login":"neoform","id":3719298,"node_id":"MDQ6VXNlcjM3MTkyOTg=","avatar_url":"https://avatars3.githubusercontent.com/u/3719298?v=4","gravatar_id":"","url":"https://api.github.com/users/neoform","html_url":"https://github.com/neoform","followers_url":"https://api.github.com/users/neoform/followers","following_url":"https://api.github.com/users/neoform/following{/other_user}","gists_url":"https://api.github.com/users/neoform/gists{/gist_id}","starred_url":"https://api.github.com/users/neoform/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neoform/subscriptions","organizations_url":"https://api.github.com/users/neoform/orgs","repos_url":"https://api.github.com/users/neoform/repos","events_url":"https://api.github.com/users/neoform/events{/privacy}","received_events_url":"https://api.github.com/users/neoform/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T12:54:29Z","updated_at":"2017-02-21T12:54:29Z","author_association":"NONE","body":"```\r\nian@sling:~# curl -XGET http://localhost:9200/_cat/shards?v\r\nindex   shard prirep state       docs store ip        node\r\nproduct 0     p      STARTED 11048788 4.2gb 127.0.0.1 ddjlYjR\r\n\r\nian@sling:~# curl -XGET http://localhost:9200/_cat/nodes?v\r\nip        heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name\r\n127.0.0.1           21          98   0    0.00    0.03     0.05 mdi       *      ddjlYjR\r\n\r\nian@sling:~# curl -XGET http://localhost:9200/_cat/allocation?v\r\nshards disk.indices disk.used disk.avail disk.total disk.percent host      ip        node\r\n     1        4.2gb    88.4gb    333.7gb    422.1gb           20 127.0.0.1 127.0.0.1 ddjlYjR\r\n\r\nian@sling:~# curl -XGET http://localhost:9200/_cat/health?v\r\nepoch      timestamp cluster       status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent\r\n1487681377 07:49:37  elasticsearch green           1         1      1   1    0    0        0             0                  -                100.0%\r\n```\r\n\r\n**From the error logs**:\r\n\r\n```\r\n[2017-02-21T07:53:57,509][DEBUG][o.e.a.s.TransportSearchAction] [ddjlYjR] [product][0], node[ddjlYjROS8e3YTe4HT730A], [P], s[STARTED], a[id=WpOjQnjLSQGl0aHEkd0sSA]: Failed to execute [SearchRequest{searchType=QUERY_AND_FETCH, indices=[product], indicesOptions=IndicesOptions[id=38, ignore_unavailable=false, allow_no_indices=true, expand_wildcards_open=true, expand_wildcards_closed=false, allow_alisases_to_multiple_indices=true, forbid_closed_indices=true], types=[product], routing='null', preference='null', requestCache=null, scroll=null, source={\r\n  \"from\" : 0,\r\n  \"size\" : 40,\r\n  \"timeout\" : \"6s\",\r\n  \"query\" : {\r\n    \"function_score\" : {\r\n      \"query\" : {\r\n        \"bool\" : {\r\n          \"filter\" : [\r\n            {\r\n              \"nested\" : {\r\n                \"query\" : {\r\n                  \"bool\" : {\r\n                    \"must\" : [\r\n                      {\r\n                        \"multi_match\" : {\r\n                          \"query\" : \"television, audio, phone, dvd, tv, iphone\",\r\n                          \"fields\" : [\r\n                            \"product.brand.keywords_external^1.0\",\r\n                            \"product.brand.keywords_internal^1.0\",\r\n                            \"product.brand.name^1.0\",\r\n                            \"product.description^4.0\",\r\n                            \"product.name^10.0\"\r\n                          ],\r\n                          \"type\" : \"best_fields\",\r\n                          \"operator\" : \"OR\",\r\n                          \"slop\" : 0,\r\n                          \"prefix_length\" : 0,\r\n                          \"max_expansions\" : 50,\r\n                          \"minimum_should_match\" : \"0\",\r\n                          \"lenient\" : false,\r\n                          \"zero_terms_query\" : \"NONE\",\r\n                          \"boost\" : 1.0\r\n                        }\r\n                      }\r\n                    ],\r\n                    \"filter\" : [\r\n                      {\r\n                        \"term\" : {\r\n                          \"product.status_id\" : {\r\n                            \"value\" : 1,\r\n                            \"boost\" : 1.0\r\n                          }\r\n                        }\r\n                      },\r\n                      {\r\n                        \"nested\" : {\r\n                          \"query\" : {\r\n                            \"bool\" : {\r\n                              \"filter\" : [\r\n                                {\r\n                                  \"terms\" : {\r\n                                    \"product.category.id\" : [\r\n                                      870\r\n                                    ],\r\n                                    \"boost\" : 1.0\r\n                                  }\r\n                                }\r\n                              ],\r\n                              \"disable_coord\" : false,\r\n                              \"adjust_pure_negative\" : true,\r\n                              \"boost\" : 1.0\r\n                            }\r\n                          },\r\n                          \"path\" : \"product.category\",\r\n                          \"ignore_unmapped\" : false,\r\n                          \"score_mode\" : \"avg\",\r\n                          \"boost\" : 1.0\r\n                        }\r\n                      },\r\n                      {\r\n                        \"nested\" : {\r\n                          \"query\" : {\r\n                            \"bool\" : {\r\n                              \"filter\" : [\r\n                                {\r\n                                  \"terms\" : {\r\n                                    \"product.brand.id\" : [\r\n                                      22861\r\n                                    ],\r\n                                    \"boost\" : 1.0\r\n                                  }\r\n                                }\r\n                              ],\r\n                              \"disable_coord\" : false,\r\n                              \"adjust_pure_negative\" : true,\r\n                              \"boost\" : 1.0\r\n                            }\r\n                          },\r\n                          \"path\" : \"product.brand\",\r\n                          \"ignore_unmapped\" : false,\r\n                          \"score_mode\" : \"avg\",\r\n                          \"boost\" : 1.0\r\n                        }\r\n                      }\r\n                    ],\r\n                    \"disable_coord\" : false,\r\n                    \"adjust_pure_negative\" : true,\r\n                    \"boost\" : 1.0\r\n                  }\r\n                },\r\n                \"path\" : \"product\",\r\n                \"ignore_unmapped\" : false,\r\n                \"score_mode\" : \"avg\",\r\n                \"boost\" : 1.0\r\n              }\r\n            }\r\n          ],\r\n          \"disable_coord\" : false,\r\n          \"adjust_pure_negative\" : true,\r\n          \"boost\" : 1.0\r\n        }\r\n      },\r\n      \"functions\" : [\r\n        {\r\n          \"filter\" : {\r\n            \"match_all\" : {\r\n              \"boost\" : 1.0\r\n            }\r\n          },\r\n          \"field_value_factor\" : {\r\n            \"field\" : \"product_count\",\r\n            \"factor\" : 50.0,\r\n            \"modifier\" : \"log1p\"\r\n          }\r\n        },\r\n        {\r\n          \"filter\" : {\r\n            \"match_all\" : {\r\n              \"boost\" : 1.0\r\n            }\r\n          },\r\n          \"field_value_factor\" : {\r\n            \"field\" : \"rank_weight\",\r\n            \"factor\" : 1.0,\r\n            \"missing\" : 1.0,\r\n            \"modifier\" : \"reciprocal\"\r\n          }\r\n        }\r\n      ],\r\n      \"score_mode\" : \"multiply\",\r\n      \"max_boost\" : 3.4028235E38,\r\n      \"boost\" : 1.0\r\n    }\r\n  },\r\n  \"_source\" : {\r\n    \"includes\" : [\r\n      \"mpn\",\r\n      \"cheapest_product_id\",\r\n      \"price\",\r\n      \"price_discount_percent\",\r\n      \"price_discount_amount\",\r\n      \"product_count\",\r\n      \"rank_weight\",\r\n      \"product.id\",\r\n      \"product.price\",\r\n      \"product.status_id\"\r\n    ],\r\n    \"excludes\" : [ ]\r\n  },\r\n  \"aggregations\" : {\r\n    \"price\" : {\r\n      \"filter\" : {\r\n        \"bool\" : {\r\n          \"filter\" : [\r\n            {\r\n              \"nested\" : {\r\n                \"query\" : {\r\n                  \"bool\" : {\r\n                    \"must\" : [\r\n                      {\r\n                        \"multi_match\" : {\r\n                          \"query\" : \"television, audio, phone, dvd, tv, iphone\",\r\n                          \"fields\" : [\r\n                            \"product.brand.keywords_external^1.0\",\r\n                            \"product.brand.keywords_internal^1.0\",\r\n                            \"product.brand.name^1.0\",\r\n                            \"product.description^4.0\",\r\n                            \"product.name^10.0\"\r\n                          ],\r\n                          \"type\" : \"best_fields\",\r\n                          \"operator\" : \"OR\",\r\n                          \"slop\" : 0,\r\n                          \"prefix_length\" : 0,\r\n                          \"max_expansions\" : 50,\r\n                          \"minimum_should_match\" : \"0\",\r\n                          \"lenient\" : false,\r\n                          \"zero_terms_query\" : \"NONE\",\r\n                          \"boost\" : 1.0\r\n                        }\r\n                      }\r\n                    ],\r\n                    \"filter\" : [\r\n                      {\r\n                        \"term\" : {\r\n                          \"product.status_id\" : {\r\n                            \"value\" : 1,\r\n                            \"boost\" : 1.0\r\n                          }\r\n                        }\r\n                      },\r\n                      {\r\n                        \"nested\" : {\r\n                          \"query\" : {\r\n                            \"bool\" : {\r\n                              \"filter\" : [\r\n                                {\r\n                                  \"terms\" : {\r\n                                    \"product.category.id\" : [\r\n                                      870\r\n                                    ],\r\n                                    \"boost\" : 1.0\r\n                                  }\r\n                                }\r\n                              ],\r\n                              \"disable_coord\" : false,\r\n                              \"adjust_pure_negative\" : true,\r\n                              \"boost\" : 1.0\r\n                            }\r\n                          },\r\n                          \"path\" : \"product.category\",\r\n                          \"ignore_unmapped\" : false,\r\n                          \"score_mode\" : \"avg\",\r\n                          \"boost\" : 1.0\r\n                        }\r\n                      },\r\n                      {\r\n                        \"nested\" : {\r\n                          \"query\" : {\r\n                            \"bool\" : {\r\n                              \"filter\" : [\r\n                                {\r\n                                  \"terms\" : {\r\n                                    \"product.brand.id\" : [\r\n                                      22861\r\n                                    ],\r\n                                    \"boost\" : 1.0\r\n                                  }\r\n                                }\r\n                              ],\r\n                              \"disable_coord\" : false,\r\n                              \"adjust_pure_negative\" : true,\r\n                              \"boost\" : 1.0\r\n                            }\r\n                          },\r\n                          \"path\" : \"product.brand\",\r\n                          \"ignore_unmapped\" : false,\r\n                          \"score_mode\" : \"avg\",\r\n                          \"boost\" : 1.0\r\n                        }\r\n                      }\r\n                    ],\r\n                    \"disable_coord\" : false,\r\n                    \"adjust_pure_negative\" : true,\r\n                    \"boost\" : 1.0\r\n                  }\r\n                },\r\n                \"path\" : \"product\",\r\n                \"ignore_unmapped\" : false,\r\n                \"score_mode\" : \"avg\",\r\n                \"boost\" : 1.0\r\n              }\r\n            }\r\n          ],\r\n          \"disable_coord\" : false,\r\n          \"adjust_pure_negative\" : true,\r\n          \"boost\" : 1.0\r\n        }\r\n      },\r\n      \"aggregations\" : {\r\n        \"priceMin\" : {\r\n          \"min\" : {\r\n            \"field\" : \"price\"\r\n          }\r\n        },\r\n        \"priceMax\" : {\r\n          \"max\" : {\r\n            \"field\" : \"price\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"brands\" : {\r\n      \"nested\" : {\r\n        \"path\" : \"product.brand\"\r\n      }\r\norg.elasticsearch.transport.RemoteTransportException: [ddjlYjR][127.0.0.1:9300][indices:data/read/search[phase/query+fetch]]\r\nCaused by: org.elasticsearch.search.query.QueryPhaseExecutionException: Query Failed [Failed to execute main query]\r\n\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:405) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:106) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:246) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.SearchService.executeFetchPhase(SearchService.java:360) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.action.search.SearchTransportService$9.messageReceived(SearchTransportService.java:322) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.action.search.SearchTransportService$9.messageReceived(SearchTransportService.java:319) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.TransportService$7.doRun(TransportService.java:610) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:596) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]\r\nCaused by: java.lang.IllegalStateException: Child query must not match same docs with parent filter. Combine them as must clauses (+) to find a problem doc. docId=4423794, class org.apache.lucene.search.ConjunctionScorer\r\n\tat org.apache.lucene.search.join.ToParentBlockJoinQuery$BlockJoinScorer.checkOrthogonal(ToParentBlockJoinQuery.java:403) ~[lucene-join-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:44:23]\r\n\tat org.apache.lucene.search.join.ToParentBlockJoinQuery$BlockJoinScorer.access$400(ToParentBlockJoinQuery.java:206) ~[lucene-join-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:44:23]\r\n\tat org.apache.lucene.search.join.ToParentBlockJoinQuery$BlockJoinScorer$1.nextDoc(ToParentBlockJoinQuery.java:286) ~[lucene-join-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:44:23]\r\n\tat org.apache.lucene.search.join.ToParentBlockJoinQuery$BlockJoinScorer$1.advance(ToParentBlockJoinQuery.java:382) ~[lucene-join-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:44:23]\r\n\tat org.elasticsearch.common.lucene.Lucene$3.get(Lucene.java:785) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.bucket.filter.FilterAggregator$1.collect(FilterAggregator.java:63) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectExistingBucket(BucketsAggregator.java:80) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectBucket(BucketsAggregator.java:72) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.bucket.nested.NestedAggregator$1.collect(NestedAggregator.java:89) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.LeafBucketCollector$2.collect(LeafBucketCollector.java:67) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.LeafBucketCollector.collect(LeafBucketCollector.java:82) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.apache.lucene.search.MultiCollector$MultiLeafCollector.collect(MultiCollector.java:174) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.TimeLimitingCollector$1.collect(TimeLimitingCollector.java:158) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:221) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:172) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.BulkScorer.score(BulkScorer.java:39) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:669) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:473) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:379) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:106) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:246) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.SearchService.executeFetchPhase(SearchService.java:360) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.action.search.SearchTransportService$9.messageReceived(SearchTransportService.java:322) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.action.search.SearchTransportService$9.messageReceived(SearchTransportService.java:319) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.TransportService$7.doRun(TransportService.java:610) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:596) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[?:1.8.0_121]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[?:1.8.0_121]\r\n\tat java.lang.Thread.run(Thread.java:745) ~[?:1.8.0_121]\r\n[2017-02-21T07:53:57,522][DEBUG][o.e.a.s.TransportSearchAction] [ddjlYjR] All shards failed for phase: [query_fetch]\r\norg.elasticsearch.transport.RemoteTransportException: [ddjlYjR][127.0.0.1:9300][indices:data/read/search[phase/query+fetch]]\r\nCaused by: org.elasticsearch.search.query.QueryPhaseExecutionException: Query Failed [Failed to execute main query]\r\n\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:405) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:106) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:246) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.SearchService.executeFetchPhase(SearchService.java:360) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.action.search.SearchTransportService$9.messageReceived(SearchTransportService.java:322) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.action.search.SearchTransportService$9.messageReceived(SearchTransportService.java:319) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.TransportService$7.doRun(TransportService.java:610) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:596) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]\r\nCaused by: java.lang.IllegalStateException: Child query must not match same docs with parent filter. Combine them as must clauses (+) to find a problem doc. docId=4423794, class org.apache.lucene.search.ConjunctionScorer\r\n\tat org.apache.lucene.search.join.ToParentBlockJoinQuery$BlockJoinScorer.checkOrthogonal(ToParentBlockJoinQuery.java:403) ~[lucene-join-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:44:23]\r\n\tat org.apache.lucene.search.join.ToParentBlockJoinQuery$BlockJoinScorer.access$400(ToParentBlockJoinQuery.java:206) ~[lucene-join-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:44:23]\r\n\tat org.apache.lucene.search.join.ToParentBlockJoinQuery$BlockJoinScorer$1.nextDoc(ToParentBlockJoinQuery.java:286) ~[lucene-join-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:44:23]\r\n\tat org.apache.lucene.search.join.ToParentBlockJoinQuery$BlockJoinScorer$1.advance(ToParentBlockJoinQuery.java:382) ~[lucene-join-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:44:23]\r\n\tat org.elasticsearch.common.lucene.Lucene$3.get(Lucene.java:785) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.bucket.filter.FilterAggregator$1.collect(FilterAggregator.java:63) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectExistingBucket(BucketsAggregator.java:80) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectBucket(BucketsAggregator.java:72) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.bucket.nested.NestedAggregator$1.collect(NestedAggregator.java:89) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.LeafBucketCollector$2.collect(LeafBucketCollector.java:67) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.LeafBucketCollector.collect(LeafBucketCollector.java:82) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.apache.lucene.search.MultiCollector$MultiLeafCollector.collect(MultiCollector.java:174) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.TimeLimitingCollector$1.collect(TimeLimitingCollector.java:158) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:221) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:172) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.BulkScorer.score(BulkScorer.java:39) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:669) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:473) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:379) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:106) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:246) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.SearchService.executeFetchPhase(SearchService.java:360) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.action.search.SearchTransportService$9.messageReceived(SearchTransportService.java:322) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.action.search.SearchTransportService$9.messageReceived(SearchTransportService.java:319) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.TransportService$7.doRun(TransportService.java:610) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:596) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[?:1.8.0_121]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[?:1.8.0_121]\r\n\tat java.lang.Thread.run(Thread.java:745) ~[?:1.8.0_121]\r\n[2017-02-21T07:53:57,525][WARN ][r.suppressed             ] path: /product/product/_search, params: {size=40, index=product, from=0, type=product, timeout=6s}\r\norg.elasticsearch.action.search.SearchPhaseExecutionException: all shards failed\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.onFirstPhaseResult(AbstractSearchAsyncAction.java:208) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction.access$100(AbstractSearchAsyncAction.java:52) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.action.search.AbstractSearchAsyncAction$1.onFailure(AbstractSearchAsyncAction.java:143) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.action.ActionListenerResponseHandler.handleException(ActionListenerResponseHandler.java:51) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleException(TransportService.java:1024) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.TransportService$DirectResponseChannel.processException(TransportService.java:1126) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.TransportService$DirectResponseChannel.sendResponse(TransportService.java:1104) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.TransportService$7.onFailure(TransportService.java:621) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.onFailure(ThreadContext.java:581) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:39) [elasticsearch-5.2.1.jar:5.2.1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_121]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_121]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]\r\nCaused by: org.elasticsearch.transport.RemoteTransportException: [ddjlYjR][127.0.0.1:9300][indices:data/read/search[phase/query+fetch]]\r\nCaused by: org.elasticsearch.search.query.QueryPhaseExecutionException: Query Failed [Failed to execute main query]\r\n\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:405) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:106) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:246) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.SearchService.executeFetchPhase(SearchService.java:360) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.action.search.SearchTransportService$9.messageReceived(SearchTransportService.java:322) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.action.search.SearchTransportService$9.messageReceived(SearchTransportService.java:319) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.TransportService$7.doRun(TransportService.java:610) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:596) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\t... 3 more\r\nCaused by: java.lang.IllegalStateException: Child query must not match same docs with parent filter. Combine them as must clauses (+) to find a problem doc. docId=4423794, class org.apache.lucene.search.ConjunctionScorer\r\n\tat org.apache.lucene.search.join.ToParentBlockJoinQuery$BlockJoinScorer.checkOrthogonal(ToParentBlockJoinQuery.java:403) ~[lucene-join-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:44:23]\r\n\tat org.apache.lucene.search.join.ToParentBlockJoinQuery$BlockJoinScorer.access$400(ToParentBlockJoinQuery.java:206) ~[lucene-join-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:44:23]\r\n\tat org.apache.lucene.search.join.ToParentBlockJoinQuery$BlockJoinScorer$1.nextDoc(ToParentBlockJoinQuery.java:286) ~[lucene-join-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:44:23]\r\n\tat org.apache.lucene.search.join.ToParentBlockJoinQuery$BlockJoinScorer$1.advance(ToParentBlockJoinQuery.java:382) ~[lucene-join-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:44:23]\r\n\tat org.elasticsearch.common.lucene.Lucene$3.get(Lucene.java:785) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.bucket.filter.FilterAggregator$1.collect(FilterAggregator.java:63) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectExistingBucket(BucketsAggregator.java:80) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.bucket.BucketsAggregator.collectBucket(BucketsAggregator.java:72) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.bucket.nested.NestedAggregator$1.collect(NestedAggregator.java:89) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.LeafBucketCollector$2.collect(LeafBucketCollector.java:67) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.aggregations.LeafBucketCollector.collect(LeafBucketCollector.java:82) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.apache.lucene.search.MultiCollector$MultiLeafCollector.collect(MultiCollector.java:174) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.TimeLimitingCollector$1.collect(TimeLimitingCollector.java:158) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:221) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:172) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.BulkScorer.score(BulkScorer.java:39) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:669) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:473) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:379) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:106) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:246) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.search.SearchService.executeFetchPhase(SearchService.java:360) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.action.search.SearchTransportService$9.messageReceived(SearchTransportService.java:322) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.action.search.SearchTransportService$9.messageReceived(SearchTransportService.java:319) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.transport.TransportService$7.doRun(TransportService.java:610) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:596) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n\t... 3 more\r\n```\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281336905","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281336905","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281336905,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTMzNjkwNQ==","user":{"login":"neoform","id":3719298,"node_id":"MDQ6VXNlcjM3MTkyOTg=","avatar_url":"https://avatars3.githubusercontent.com/u/3719298?v=4","gravatar_id":"","url":"https://api.github.com/users/neoform","html_url":"https://github.com/neoform","followers_url":"https://api.github.com/users/neoform/followers","following_url":"https://api.github.com/users/neoform/following{/other_user}","gists_url":"https://api.github.com/users/neoform/gists{/gist_id}","starred_url":"https://api.github.com/users/neoform/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neoform/subscriptions","organizations_url":"https://api.github.com/users/neoform/orgs","repos_url":"https://api.github.com/users/neoform/repos","events_url":"https://api.github.com/users/neoform/events{/privacy}","received_events_url":"https://api.github.com/users/neoform/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T12:55:45Z","updated_at":"2017-02-21T12:55:45Z","author_association":"NONE","body":"I'm assuming I'll need to install something else for that integrity check command.\r\n\r\n```\r\nroot@sling:~# for index_dir in data/*/nodes/*/indices/*/*/index; do java -ea -cp lib/lucene-core-6.4.1.jar org.apache.lucene.index.CheckIndex -fast $index_dir; done\r\nError: Could not find or load main class org.apache.lucene.index.CheckIndex\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281339795","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281339795","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281339795,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTMzOTc5NQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T13:08:56Z","updated_at":"2017-02-21T13:08:56Z","author_association":"CONTRIBUTOR","body":"Does the `lib/lucene-core-6.4.1.jar` file exist?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281340542","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281340542","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281340542,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTM0MDU0Mg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T13:12:36Z","updated_at":"2017-02-21T13:12:36Z","author_association":"CONTRIBUTOR","body":"Ok so at least there is an interesting information in those stack traces: I expected the issue was caused by the query but it is actually caused by the aggregation.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281343206","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281343206","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281343206,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTM0MzIwNg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T13:24:46Z","updated_at":"2017-02-21T13:24:46Z","author_association":"CONTRIBUTOR","body":"Thanks, I found the problem. This is due to how you are using a `filter` aggregation with a query that matches top-level documents below a `nested` aggregation that matches nested documents. We should improve validation in this area but in the mean time if you can explain to me what you want your aggregation to do, I can help you fix it.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281346994","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281346994","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281346994,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTM0Njk5NA==","user":{"login":"nfrm","id":5231449,"node_id":"MDQ6VXNlcjUyMzE0NDk=","avatar_url":"https://avatars3.githubusercontent.com/u/5231449?v=4","gravatar_id":"","url":"https://api.github.com/users/nfrm","html_url":"https://github.com/nfrm","followers_url":"https://api.github.com/users/nfrm/followers","following_url":"https://api.github.com/users/nfrm/following{/other_user}","gists_url":"https://api.github.com/users/nfrm/gists{/gist_id}","starred_url":"https://api.github.com/users/nfrm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nfrm/subscriptions","organizations_url":"https://api.github.com/users/nfrm/orgs","repos_url":"https://api.github.com/users/nfrm/repos","events_url":"https://api.github.com/users/nfrm/events{/privacy}","received_events_url":"https://api.github.com/users/nfrm/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T13:40:41Z","updated_at":"2017-02-21T13:40:41Z","author_association":"NONE","body":"Sorry, I just noticed I had given you the stack trace for the 'full' query. My original bug was for a slimmed down version of the query that contained fewer aggregations.\r\n\r\nHere's the first query's stack trace (the one in my first post):\r\n\r\n```\r\n[2017-02-21T08:39:30,017][ERROR][o.e.b.ElasticsearchUncaughtExceptionHandler] [] fatal error in thread [elasticsearch[ddjlYjR][search][T#11]], exiting\r\njava.lang.AssertionError: null\r\n        at org.apache.lucene.search.join.ToParentBlockJoinQuery$BlockJoinScorer$1.nextDoc(ToParentBlockJoinQuery.java:289) ~[lucene-join-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:44:23]\r\n        at org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:219) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n        at org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:172) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n        at org.apache.lucene.search.BulkScorer.score(BulkScorer.java:39) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n        at org.apache.lucene.search.LRUQueryCache.cacheIntoRoaringDocIdSet(LRUQueryCache.java:530) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n        at org.apache.lucene.search.LRUQueryCache.cacheImpl(LRUQueryCache.java:506) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n        at org.apache.lucene.search.LRUQueryCache$CachingWrapperWeight.cache(LRUQueryCache.java:708) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n        at org.apache.lucene.search.LRUQueryCache$CachingWrapperWeight.scorer(LRUQueryCache.java:743) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n        at org.elasticsearch.indices.IndicesQueryCache$CachingWeightWrapper.scorer(IndicesQueryCache.java:155) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.elasticsearch.search.aggregations.bucket.filter.FilterAggregator.getLeafCollector(FilterAggregator.java:59) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.elasticsearch.search.aggregations.AggregatorBase.getLeafCollector(AggregatorBase.java:149) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.elasticsearch.search.aggregations.AggregatorBase.getLeafCollector(AggregatorBase.java:148) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.elasticsearch.search.aggregations.BucketCollector$2.getLeafCollector(BucketCollector.java:75) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.elasticsearch.search.aggregations.BucketCollector$2.getLeafCollector(BucketCollector.java:69) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.apache.lucene.search.MultiCollector.getLeafCollector(MultiCollector.java:121) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n        at org.apache.lucene.search.TimeLimitingCollector.getLeafCollector(TimeLimitingCollector.java:144) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n        at org.apache.lucene.search.FilterCollector.getLeafCollector(FilterCollector.java:40) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n        at org.elasticsearch.search.query.CancellableCollector.getLeafCollector(CancellableCollector.java:61) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:660) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:473) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\n        at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:379) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:106) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:246) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.elasticsearch.search.SearchService.executeFetchPhase(SearchService.java:360) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.elasticsearch.action.search.SearchTransportService$9.messageReceived(SearchTransportService.java:322) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.elasticsearch.action.search.SearchTransportService$9.messageReceived(SearchTransportService.java:319) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.elasticsearch.transport.TransportService$7.doRun(TransportService.java:610) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:596) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) ~[elasticsearch-5.2.1.jar:5.2.1]\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[?:1.8.0_121]\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[?:1.8.0_121]\r\n        at java.lang.Thread.run(Thread.java:745) [?:1.8.0_121]\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281347281","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281347281","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281347281,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTM0NzI4MQ==","user":{"login":"nfrm","id":5231449,"node_id":"MDQ6VXNlcjUyMzE0NDk=","avatar_url":"https://avatars3.githubusercontent.com/u/5231449?v=4","gravatar_id":"","url":"https://api.github.com/users/nfrm","html_url":"https://github.com/nfrm","followers_url":"https://api.github.com/users/nfrm/followers","following_url":"https://api.github.com/users/nfrm/following{/other_user}","gists_url":"https://api.github.com/users/nfrm/gists{/gist_id}","starred_url":"https://api.github.com/users/nfrm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nfrm/subscriptions","organizations_url":"https://api.github.com/users/nfrm/orgs","repos_url":"https://api.github.com/users/nfrm/repos","events_url":"https://api.github.com/users/nfrm/events{/privacy}","received_events_url":"https://api.github.com/users/nfrm/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T13:41:55Z","updated_at":"2017-02-21T13:41:55Z","author_association":"NONE","body":"If it would help debug this, I'm ok with giving you a full copy of my index (zip the ES data dir), since this is not production data (and it's not sensitive data).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281351350","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281351350","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281351350,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTM1MTM1MA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T13:58:53Z","updated_at":"2017-02-21T13:58:53Z","author_association":"CONTRIBUTOR","body":"I think I can help without looking at the data, the issue is with the `nested` and`filter` aggregations: you have a `nested` aggregation that switches the scope to `products.brands` while the filter matches root documents. I suspect what you actually want to do is to make the `nested` aggregation a sub-aggregation of the `filter` aggregation rather than the other way around. Something like this (not tested):\r\n\r\n```\r\nGET _search\r\n{\r\n  \"timeout\": \"6s\",\r\n  \"index\": \"product\",\r\n  \"type\": \"product\",\r\n  \"from\": 0,\r\n  \"size\": 40,\r\n  \"body\": {\r\n    \"_source\": [\r\n      \"mpn\",\r\n      \"cheapest_product_id\",\r\n      \"price\",\r\n      \"price_discount_percent\",\r\n      \"price_discount_amount\",\r\n      \"product_count\",\r\n      \"rank_weight\",\r\n      \"product.id\",\r\n      \"product.price\",\r\n      \"product.status_id\"\r\n    ],\r\n    \"query\": {\r\n      \"function_score\": {\r\n        \"query\": {\r\n          \"bool\": {\r\n            \"filter\": [\r\n              {\r\n                \"nested\": {\r\n                  \"path\": \"product\",\r\n                  \"query\": {\r\n                    \"bool\": {\r\n                      \"filter\": [\r\n                        {\r\n                          \"term\": {\r\n                            \"product.status_id\": 1\r\n                          }\r\n                        },\r\n                        {\r\n                          \"nested\": {\r\n                            \"path\": \"product.category\",\r\n                            \"query\": {\r\n                              \"bool\": {\r\n                                \"filter\": [\r\n                                  {\r\n                                    \"terms\": {\r\n                                      \"product.category.id\": [\r\n                                        870\r\n                                      ]\r\n                                    }\r\n                                  }\r\n                                ]\r\n                              }\r\n                            }\r\n                          }\r\n                        },\r\n                        {\r\n                          \"nested\": {\r\n                            \"path\": \"product.brand\",\r\n                            \"query\": {\r\n                              \"bool\": {\r\n                                \"filter\": [\r\n                                  {\r\n                                    \"terms\": {\r\n                                      \"product.brand.id\": [\r\n                                        23083\r\n                                      ]\r\n                                    }\r\n                                  }\r\n                                ]\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      ],\r\n                      \"must\": [\r\n                        {\r\n                          \"multi_match\": {\r\n                            \"query\": \"television, audio, phone, dvd, tv\",\r\n                            \"fields\": [\r\n                              \"product.name^10\",\r\n                              \"product.description^4\",\r\n                              \"product.brand.name\",\r\n                              \"product.brand.keywords_internal\",\r\n                              \"product.brand.keywords_external\"\r\n                            ],\r\n                            \"minimum_should_match\": 0\r\n                          }\r\n                        }\r\n                      ]\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"functions\": [\r\n          {\r\n            \"field_value_factor\": {\r\n              \"field\": \"product_count\",\r\n              \"factor\": 50,\r\n              \"modifier\": \"log1p\"\r\n            }\r\n          },\r\n          {\r\n            \"field_value_factor\": {\r\n              \"field\": \"rank_weight\",\r\n              \"modifier\": \"reciprocal\",\r\n              \"missing\": 1\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    \"aggs\": {\r\n      \"brands\": {\r\n        \"filter\": {\r\n          \"bool\": {\r\n            \"filter\": [\r\n              {\r\n                \"nested\": {\r\n                  \"path\": \"product\",\r\n                  \"query\": {\r\n                    \"bool\": {\r\n                      \"filter\": [\r\n                        {\r\n                          \"term\": {\r\n                            \"product.status_id\": 1\r\n                          }\r\n                        },\r\n                        {\r\n                          \"nested\": {\r\n                            \"path\": \"product.category\",\r\n                            \"query\": {\r\n                              \"bool\": {\r\n                                \"filter\": [\r\n                                  {\r\n                                    \"terms\": {\r\n                                      \"product.category.id\": [\r\n                                        870\r\n                                      ]\r\n                                    }\r\n                                  }\r\n                                ]\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      ],\r\n                      \"must\": [\r\n                        {\r\n                          \"multi_match\": {\r\n                            \"query\": \"television, audio, phone, dvd, tv\",\r\n                            \"fields\": [\r\n                              \"product.name^10\",\r\n                              \"product.description^4\",\r\n                              \"product.brand.name\",\r\n                              \"product.brand.keywords_internal\",\r\n                              \"product.brand.keywords_external\"\r\n                            ],\r\n                            \"minimum_should_match\": 0\r\n                          }\r\n                        }\r\n                      ]\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"aggs\": {\r\n          \"brands\": {\r\n            \"nested\": {\r\n              \"path\": \"product.brand\"\r\n            },\r\n            \"aggs\": {\r\n              \"brands\": {\r\n                \"terms\": {\r\n                  \"field\": \"product.brand.id\",\r\n                  \"size\": 30\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281353574","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281353574","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281353574,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTM1MzU3NA==","user":{"login":"nfrm","id":5231449,"node_id":"MDQ6VXNlcjUyMzE0NDk=","avatar_url":"https://avatars3.githubusercontent.com/u/5231449?v=4","gravatar_id":"","url":"https://api.github.com/users/nfrm","html_url":"https://github.com/nfrm","followers_url":"https://api.github.com/users/nfrm/followers","following_url":"https://api.github.com/users/nfrm/following{/other_user}","gists_url":"https://api.github.com/users/nfrm/gists{/gist_id}","starred_url":"https://api.github.com/users/nfrm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nfrm/subscriptions","organizations_url":"https://api.github.com/users/nfrm/orgs","repos_url":"https://api.github.com/users/nfrm/repos","events_url":"https://api.github.com/users/nfrm/events{/privacy}","received_events_url":"https://api.github.com/users/nfrm/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T14:07:38Z","updated_at":"2017-02-21T14:07:38Z","author_association":"NONE","body":"I believe I had tried that originally and either got the same results, or got incorrect results, which is why I think I switched it.\r\n\r\nMy goal with the aggregate is to repeat the same query, minus the brand filter, that way I can get a list of all brands that would otherwise apply to the results had I not limited to a specific one in the main query.\r\n\r\nI'll give that a try. Though I'm still at a loss as to why this query works 2-3 times then fails forever after that (until ES is restarted). I'm guessing it has to do what you were saying above about orphaned docs?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281356054","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281356054","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281356054,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTM1NjA1NA==","user":{"login":"nfrm","id":5231449,"node_id":"MDQ6VXNlcjUyMzE0NDk=","avatar_url":"https://avatars3.githubusercontent.com/u/5231449?v=4","gravatar_id":"","url":"https://api.github.com/users/nfrm","html_url":"https://github.com/nfrm","followers_url":"https://api.github.com/users/nfrm/followers","following_url":"https://api.github.com/users/nfrm/following{/other_user}","gists_url":"https://api.github.com/users/nfrm/gists{/gist_id}","starred_url":"https://api.github.com/users/nfrm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nfrm/subscriptions","organizations_url":"https://api.github.com/users/nfrm/orgs","repos_url":"https://api.github.com/users/nfrm/repos","events_url":"https://api.github.com/users/nfrm/events{/privacy}","received_events_url":"https://api.github.com/users/nfrm/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T14:17:03Z","updated_at":"2017-02-21T14:18:00Z","author_association":"NONE","body":"Yeah, when I was doing that query, the bucket counts weren't the correct counts (eg, the result count if I were to replace the brand id in the main query with the one shown in the brands aggregation). The only way I was able to get the correct values was with the first query I posted above. :(\r\n\r\nThat said, the version you just showed doesn't break my instance of ES, so maybe that's a plus? ;)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281357513","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281357513","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281357513,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTM1NzUxMw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T14:22:12Z","updated_at":"2017-02-21T14:22:12Z","author_association":"CONTRIBUTOR","body":"> Though I'm still at a loss as to why this query works 2-3 times then fails forever after that (until ES is restarted). I'm guessing it has to do what you were saying above about orphaned docs?\r\n\r\nThis is due to caching. On the first runs, the filter aggregation only evaluates the filter against documents that match the query. However after it has been used multiple times, Elasticsearch thinks the filter is worth caching, and the caching process evaluates the filter against the whole index, which highlights this issue.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281358295","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281358295","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281358295,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTM1ODI5NQ==","user":{"login":"nfrm","id":5231449,"node_id":"MDQ6VXNlcjUyMzE0NDk=","avatar_url":"https://avatars3.githubusercontent.com/u/5231449?v=4","gravatar_id":"","url":"https://api.github.com/users/nfrm","html_url":"https://github.com/nfrm","followers_url":"https://api.github.com/users/nfrm/followers","following_url":"https://api.github.com/users/nfrm/following{/other_user}","gists_url":"https://api.github.com/users/nfrm/gists{/gist_id}","starred_url":"https://api.github.com/users/nfrm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nfrm/subscriptions","organizations_url":"https://api.github.com/users/nfrm/orgs","repos_url":"https://api.github.com/users/nfrm/repos","events_url":"https://api.github.com/users/nfrm/events{/privacy}","received_events_url":"https://api.github.com/users/nfrm/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T14:25:01Z","updated_at":"2017-02-21T14:25:01Z","author_association":"NONE","body":"This makes sense, I figured it was something like that, but wasn't 100% sure. So is the bug with my query, or with ES (both?).\r\n\r\nI can try to figure out a different way to get the results I want, I just need to be sure the problem is on my end.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281359318","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281359318","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281359318,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTM1OTMxOA==","user":{"login":"nfrm","id":5231449,"node_id":"MDQ6VXNlcjUyMzE0NDk=","avatar_url":"https://avatars3.githubusercontent.com/u/5231449?v=4","gravatar_id":"","url":"https://api.github.com/users/nfrm","html_url":"https://github.com/nfrm","followers_url":"https://api.github.com/users/nfrm/followers","following_url":"https://api.github.com/users/nfrm/following{/other_user}","gists_url":"https://api.github.com/users/nfrm/gists{/gist_id}","starred_url":"https://api.github.com/users/nfrm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nfrm/subscriptions","organizations_url":"https://api.github.com/users/nfrm/orgs","repos_url":"https://api.github.com/users/nfrm/repos","events_url":"https://api.github.com/users/nfrm/events{/privacy}","received_events_url":"https://api.github.com/users/nfrm/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T14:28:37Z","updated_at":"2017-02-21T14:28:37Z","author_association":"NONE","body":"Actually, I just realized that you were right with your suggested query, it was just missing one detail, I wanted that agg to be global scope..\r\n\r\nThis gives me what I want:\r\n\r\n```javascript\r\n{\r\n    \"timeout\": \"6s\",\r\n    \"index\": \"product\",\r\n    \"type\": \"product\",\r\n    \"from\": 0,\r\n    \"size\": 40,\r\n    \"body\": {\r\n        \"_source\": [\r\n            \"mpn\",\r\n            \"cheapest_product_id\",\r\n            \"price\",\r\n            \"price_discount_percent\",\r\n            \"price_discount_amount\",\r\n            \"product_count\",\r\n            \"rank_weight\",\r\n            \"product.id\",\r\n            \"product.price\",\r\n            \"product.status_id\"\r\n        ],\r\n        \"query\": {\r\n            \"function_score\": {\r\n                \"query\": {\r\n                    \"bool\": {\r\n                        \"filter\": [\r\n                            {\r\n                                \"nested\": {\r\n                                    \"path\": \"product\",\r\n                                    \"query\": {\r\n                                        \"bool\": {\r\n                                            \"filter\": [\r\n                                                {\r\n                                                    \"term\": {\r\n                                                        \"product.status_id\": 1\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    \"nested\": {\r\n                                                        \"path\": \"product.category\",\r\n                                                        \"query\": {\r\n                                                            \"bool\": {\r\n                                                                \"filter\": [\r\n                                                                    {\r\n                                                                        \"terms\": {\r\n                                                                            \"product.category.id\": [\r\n                                                                                870\r\n                                                                            ]\r\n                                                                        }\r\n                                                                    }\r\n                                                                ]\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    \"nested\": {\r\n                                                        \"path\": \"product.brand\",\r\n                                                        \"query\": {\r\n                                                            \"bool\": {\r\n                                                                \"filter\": [\r\n                                                                    {\r\n                                                                        \"terms\": {\r\n                                                                            \"product.brand.id\": [\r\n                                                                                22861\r\n                                                                            ]\r\n                                                                        }\r\n                                                                    }\r\n                                                                ]\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            ],\r\n                                            \"must\": [\r\n                                                {\r\n                                                    \"multi_match\": {\r\n                                                        \"query\": \"television, audio, phone, dvd, tv, iphone\",\r\n                                                        \"fields\": [\r\n                                                            \"product.name^10\",\r\n                                                            \"product.description^4\",\r\n                                                            \"product.brand.name\",\r\n                                                            \"product.brand.keywords_internal\",\r\n                                                            \"product.brand.keywords_external\"\r\n                                                        ],\r\n                                                        \"minimum_should_match\": 0\r\n                                                    }\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                \"functions\": [\r\n                    {\r\n                        \"field_value_factor\": {\r\n                            \"field\": \"product_count\",\r\n                            \"factor\": 50,\r\n                            \"modifier\": \"log1p\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"field_value_factor\": {\r\n                            \"field\": \"rank_weight\",\r\n                            \"modifier\": \"reciprocal\",\r\n                            \"missing\": 1\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"aggs\": {\r\n            \"price\": {\r\n                \"filter\": {\r\n                    \"bool\": {\r\n                        \"filter\": [\r\n                            {\r\n                                \"nested\": {\r\n                                    \"path\": \"product\",\r\n                                    \"query\": {\r\n                                        \"bool\": {\r\n                                            \"filter\": [\r\n                                                {\r\n                                                    \"term\": {\r\n                                                        \"product.status_id\": 1\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    \"nested\": {\r\n                                                        \"path\": \"product.category\",\r\n                                                        \"query\": {\r\n                                                            \"bool\": {\r\n                                                                \"filter\": [\r\n                                                                    {\r\n                                                                        \"terms\": {\r\n                                                                            \"product.category.id\": [\r\n                                                                                870\r\n                                                                            ]\r\n                                                                        }\r\n                                                                    }\r\n                                                                ]\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    \"nested\": {\r\n                                                        \"path\": \"product.brand\",\r\n                                                        \"query\": {\r\n                                                            \"bool\": {\r\n                                                                \"filter\": [\r\n                                                                    {\r\n                                                                        \"terms\": {\r\n                                                                            \"product.brand.id\": [\r\n                                                                                22861\r\n                                                                            ]\r\n                                                                        }\r\n                                                                    }\r\n                                                                ]\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            ],\r\n                                            \"must\": [\r\n                                                {\r\n                                                    \"multi_match\": {\r\n                                                        \"query\": \"television, audio, phone, dvd, tv, iphone\",\r\n                                                        \"fields\": [\r\n                                                            \"product.name^10\",\r\n                                                            \"product.description^4\",\r\n                                                            \"product.brand.name\",\r\n                                                            \"product.brand.keywords_internal\",\r\n                                                            \"product.brand.keywords_external\"\r\n                                                        ],\r\n                                                        \"minimum_should_match\": 0\r\n                                                    }\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                \"aggs\": {\r\n                    \"priceMin\": {\r\n                        \"min\": {\r\n                            \"field\": \"price\"\r\n                        }\r\n                    },\r\n                    \"priceMax\": {\r\n                        \"max\": {\r\n                            \"field\": \"price\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            \"brands\": {\r\n                \"global\": {},\r\n                \"aggs\": {\r\n                    \"brands\": {\r\n                        \"filter\": {\r\n                            \"bool\": {\r\n                                \"filter\": [\r\n                                    {\r\n                                        \"nested\": {\r\n                                            \"path\": \"product\",\r\n                                            \"query\": {\r\n                                                \"bool\": {\r\n                                                    \"filter\": [\r\n                                                        {\r\n                                                            \"term\": {\r\n                                                                \"product.status_id\": 1\r\n                                                            }\r\n                                                        },\r\n                                                        {\r\n                                                            \"nested\": {\r\n                                                                \"path\": \"product.category\",\r\n                                                                \"query\": {\r\n                                                                    \"bool\": {\r\n                                                                        \"filter\": [\r\n                                                                            {\r\n                                                                                \"terms\": {\r\n                                                                                    \"product.category.id\": [\r\n                                                                                        870\r\n                                                                                    ]\r\n                                                                                }\r\n                                                                            }\r\n                                                                        ]\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    ],\r\n                                                    \"must\": [\r\n                                                        {\r\n                                                            \"multi_match\": {\r\n                                                                \"query\": \"television, audio, phone, dvd, tv, iphone\",\r\n                                                                \"fields\": [\r\n                                                                    \"product.name^10\",\r\n                                                                    \"product.description^4\",\r\n                                                                    \"product.brand.name\",\r\n                                                                    \"product.brand.keywords_internal\",\r\n                                                                    \"product.brand.keywords_external\"\r\n                                                                ],\r\n                                                                \"minimum_should_match\": 0\r\n                                                            }\r\n                                                        }\r\n                                                    ]\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        },\r\n                        \"aggs\": {\r\n                            \"brands\": {\r\n                                \"nested\": {\r\n                                    \"path\": \"product.brand\"\r\n                                },\r\n                                \"aggs\": {\r\n                                    \"brands\": {\r\n                                        \"terms\": {\r\n                                            \"field\": \"product.brand.id\",\r\n                                            \"size\": 30\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/281359951","html_url":"https://github.com/elastic/elasticsearch/issues/23280#issuecomment-281359951","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23280","id":281359951,"node_id":"MDEyOklzc3VlQ29tbWVudDI4MTM1OTk1MQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2017-02-21T14:30:52Z","updated_at":"2017-02-21T14:30:52Z","author_association":"CONTRIBUTOR","body":"> So is the bug with my query, or with ES (both?).\r\n\r\nBoth I would say. I opened #23290 in order to try to detect invalid queries at parsing time rather than relying on search-time validation, which gives cryptic error messages. I will close this issue now if you don't mind.","performed_via_github_app":null}]