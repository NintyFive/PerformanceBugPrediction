{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/21121","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21121/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21121/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21121/events","html_url":"https://github.com/elastic/elasticsearch/issues/21121","id":185252553,"node_id":"MDU6SXNzdWUxODUyNTI1NTM=","number":21121,"title":"5.0.0-rc Painless support for working with dates","user":{"login":"niemyjski","id":1020579,"node_id":"MDQ6VXNlcjEwMjA1Nzk=","avatar_url":"https://avatars3.githubusercontent.com/u/1020579?v=4","gravatar_id":"","url":"https://api.github.com/users/niemyjski","html_url":"https://github.com/niemyjski","followers_url":"https://api.github.com/users/niemyjski/followers","following_url":"https://api.github.com/users/niemyjski/following{/other_user}","gists_url":"https://api.github.com/users/niemyjski/gists{/gist_id}","starred_url":"https://api.github.com/users/niemyjski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niemyjski/subscriptions","organizations_url":"https://api.github.com/users/niemyjski/orgs","repos_url":"https://api.github.com/users/niemyjski/repos","events_url":"https://api.github.com/users/niemyjski/events{/privacy}","received_events_url":"https://api.github.com/users/niemyjski/received_events","type":"User","site_admin":false},"labels":[{"id":146834791,"node_id":"MDU6TGFiZWwxNDY4MzQ3OTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Scripting","name":":Core/Infra/Scripting","color":"0e8a16","default":false,"description":"Scripting abstractions, Painless, and Mustache"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":31,"created_at":"2016-10-25T22:37:57Z","updated_at":"2018-02-14T13:22:54Z","closed_at":"2017-11-29T06:49:17Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I'm upgrading from groovy to painless and it's not so painless so far. I wanted to post this here as I think this would be a pretty common scenario and I'm having trouble with dates (gotta love dates)\n\n``` json\nPUT /test-stacks-v1\n{\n  \"aliases\": {\n    \"test-stacks\": {}\n  },\n  \"mappings\": {\n    \"stacks\": {\n      \"_all\": {\n        \"enabled\": false\n      },\n      \"dynamic\": false,\n      \"properties\": {\n        \"id\": {\n          \"type\": \"keyword\"\n        },\n        \"first_occurrence\": {\n          \"type\": \"date\"\n        },\n        \"last_occurrence\": {\n          \"type\": \"date\"\n        },\n        \"total_occurrences\": {\n          \"type\": \"float\"\n        }\n      }\n    }\n  }\n}\n\nPUT /test-stacks/stacks/1ecd0826e447a44e78877ab1\n{\n  \"id\": \"1ecd0826e447a44e78877ab1\",\n  \"total_occurrences\": 0,\n  \"first_occurrence\": \"0001-01-01T00:00:00\",\n  \"last_occurrence\": \"0001-01-01T00:00:00\"\n}\n\nPOST /test-stacks/stacks/1ecd0826e447a44e78877ab1/_update?retry_on_conflict=3\n{\n  \"script\": { \n    \"params\": {\n      \"minOccurrenceDateUtc\": \"2016-10-25T22:04:19.3272056Z\",\n      \"maxOccurrenceDateUtc\": \"2016-10-25T22:04:19.3272056Z\",\n      \"count\": 1\n    },\n    \"inline\": \"if (ctx._source.total_occurrences == 0 || ctx._source.first_occurrence > params.minOccurrenceDateUtc) { ctx._source.first_occurrence = params.minOccurrenceDateUtc; } if (ctx._source.last_occurrence < params.maxOccurrenceDateUtc) { ctx._source.last_occurrence = params.maxOccurrenceDateUtc; } ctx._source.total_occurrences += params.count;\"\n  }\n}\n```\n\nThe last script update returns\n\n``` json```\n{\n  \"error\": {\n    \"root_cause\": [\n      {\n        \"type\": \"remote_transport_exception\",\n        \"reason\": \"[8mJiEA3][local[1]][indices:data/write/update[s]]\"\n      }\n    ],\n    \"type\": \"illegal_argument_exception\",\n    \"reason\": \"failed to execute script\",\n    \"caused_by\": {\n      \"type\": \"script_exception\",\n      \"reason\": \"runtime error\",\n      \"caused_by\": {\n        \"type\": \"class_cast_exception\",\n        \"reason\": \"Cannot apply [<] operation to types [java.lang.String] and [java.lang.String].\"\n      },\n      \"script_stack\": [\n        \"if (ctx._source.last_occurrence < params.maxOccurrenceDateUtc) { \",\n        \"                                        ^---- HERE\"\n      ],\n      \"script\": \"if (ctx._source.total_occurrences == 0 || ctx._source.first_occurrence > params.minOccurrenceDateUtc) { ctx._source.first_occurrence = params.minOccurrenceDateUtc; } if (ctx._source.last_occurrence < params.maxOccurrenceDateUtc) { ctx._source.last_occurrence = params.maxOccurrenceDateUtc; } ctx._source.total_occurrences += params.count;\",\n      \"lang\": \"painless\"\n    }\n  },\n  \"status\": 400\n}\n```\n\nThe original groovy script worked flawlessly in 1.7.5 (including linebreaks)\n\n``` cs\n            var request = new UpdateRequest<Stack, Stack>(GetIndexById(stackId), ElasticType.Type, stackId) {\n                RetryOnConflict = 3,\n                Script = @\"if (ctx._source.total_occurrences == 0 || ctx._source.first_occurrence > minOccurrenceDateUtc) {\n                            ctx._source.first_occurrence = minOccurrenceDateUtc;\n                            }\n                            if (ctx._source.last_occurrence < maxOccurrenceDateUtc) {\n                            ctx._source.last_occurrence = maxOccurrenceDateUtc;\n                            }\n                            ctx._source.total_occurrences += count;\",\n                Params = new Dictionary<string, object>(3) {\n                    { \"minOccurrenceDateUtc\", minOccurrenceDateUtc },\n                    { \"maxOccurrenceDateUtc\", maxOccurrenceDateUtc },\n                    { \"count\", count }\n                }\n            };\n```\n\nIs there anything special I need to do to cast a field (which is mapped as a date) and stored as a string to a date reliably? \n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}