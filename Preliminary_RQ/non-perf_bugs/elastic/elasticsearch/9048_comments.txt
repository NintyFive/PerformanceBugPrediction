[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/68043732","html_url":"https://github.com/elastic/elasticsearch/issues/9048#issuecomment-68043732","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9048","id":68043732,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MDQzNzMy","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-12-24T10:38:24Z","updated_at":"2014-12-24T10:38:24Z","author_association":"CONTRIBUTOR","body":"All I want for Christmas is BigDate? :)\n\nAs you say, this is an esoteric use case.  Probably not a good idea to mix up our existing `date` type with these dates, otherwise somebody is sure to try to produce a date histogram starting at 1s after the Big Bang, with an interval of 30 minutes...\n\nAt first I thought of having a `year` field type, but that probably wouldn't cover all of your use cases.  It really is some kind of BigDate, isn't it?  Any ideas about how you would implement this?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/68057968","html_url":"https://github.com/elastic/elasticsearch/issues/9048#issuecomment-68057968","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9048","id":68057968,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MDU3OTY4","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2014-12-24T15:18:24Z","updated_at":"2014-12-24T15:18:24Z","author_association":"CONTRIBUTOR","body":"> At first I thought of having a year field type, but that probably wouldn't cover all of your use cases. It really is some kind of BigDate, isn't it? Any ideas about how you would implement this?\n\nProbably BigDate is a good thing to call it, yeah.\n\nSo some points:\n- Most date parsing in Java fails on those dates.  You kind of have to do your own year handling.  So whatever we build would need hand rolled year parsing at least.  From there it could delegate to something else to get everything else.\n- Looks like signed longs for _milliseconds_ can go +/- 292 million years.  Signed longs for _seconds_ would do +/- 292 billion years which really should comfortably hold everything we expect to talk about having ever happened in the past.\n- These values all have impressive error bars on them.  Looks like the Big Bang's error values are  +/- 37 million years which is pretty impressively precise in the grand scheme of things, but not so precise on the scale of seconds.\n- Many of these values have a known total ordering.  Big Bang before hyperinflation.  In fact we're reasonably sure they occurred so close together than second precision _isn't_ good enough.\n\nSo we have this dichotomy - second precision would mostly be overkill from an error bars standpoint but not good from a total ordering standpoint.  For that reason I think something like just stuffing it in a BigDecimal holding seconds is probably a good choice.  It looks like its implemented as an arbitrary precision mantissa and a scale which seems like a reasonably efficient way to handle my dichotomy.  I haven't checked how that'd play with Lucene or doc values or anything\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/68058378","html_url":"https://github.com/elastic/elasticsearch/issues/9048#issuecomment-68058378","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9048","id":68058378,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MDU4Mzc4","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2014-12-24T15:25:59Z","updated_at":"2014-12-24T15:25:59Z","author_association":"CONTRIBUTOR","body":"> I haven't checked how that'd play with Lucene or doc values or anything\n\nI think there are two issues here: sorting and range queries. Sorting would be quite easy if you manage to find an encoding scheme for your dates so that the lexicographical order of your encoded dates matches the numeric order of your dates. (You don't actually need a plugin for that, you could just do the encoding on client-side into a string field.)\n\nFor range queries, we had a similar issue for ipv6 addresses and @mikemccand worked on a nice patch that automatically adds prefix terms so that range queries are fast: https://issues.apache.org/jira/browse/LUCENE-5879 but it raises a couple of design issues that have prevented it from being committed so far.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/68217205","html_url":"https://github.com/elastic/elasticsearch/issues/9048#issuecomment-68217205","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9048","id":68217205,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MjE3MjA1","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2014-12-28T19:44:26Z","updated_at":"2014-12-28T19:44:26Z","author_association":"CONTRIBUTOR","body":"At PANGAEA, where we also have dates going back to geological areas :) the best you can do is: Use Microweich Excel magic and encode dates as double: Full days since epoch. If you are close to epoch you have best precision,  but you can still go back billions of years. Thi s works fine for sorting, and if the double value Ã—86,400,000 is in long range you can still use real date formatters. Otherwise just see it as days/years or what you like by scaling.\n\nI don't think you need support for this in ES, just convert your dates on client.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/69317211","html_url":"https://github.com/elastic/elasticsearch/issues/9048#issuecomment-69317211","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9048","id":69317211,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MzE3MjEx","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-01-09T10:25:53Z","updated_at":"2015-01-09T10:25:53Z","author_association":"CONTRIBUTOR","body":"++ @uschindler !\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/69317379","html_url":"https://github.com/elastic/elasticsearch/issues/9048#issuecomment-69317379","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9048","id":69317379,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MzE3Mzc5","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-01-09T10:27:49Z","updated_at":"2015-01-09T10:27:49Z","author_association":"CONTRIBUTOR","body":"@nik9000 I'm curious whether this idea would address your needs?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/76511413","html_url":"https://github.com/elastic/elasticsearch/issues/9048#issuecomment-76511413","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9048","id":76511413,"node_id":"MDEyOklzc3VlQ29tbWVudDc2NTExNDEz","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-02-28T05:17:35Z","updated_at":"2015-02-28T05:17:35Z","author_association":"CONTRIBUTOR","body":"Assuming that this issue has been resolved. Feel free to reopen\n","performed_via_github_app":null}]