{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/13348","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13348/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13348/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13348/events","html_url":"https://github.com/elastic/elasticsearch/issues/13348","id":104917659,"node_id":"MDU6SXNzdWUxMDQ5MTc2NTk=","number":13348,"title":"MLT with IDs and Aliases mismatch","user":{"login":"truemped","id":63618,"node_id":"MDQ6VXNlcjYzNjE4","avatar_url":"https://avatars1.githubusercontent.com/u/63618?v=4","gravatar_id":"","url":"https://api.github.com/users/truemped","html_url":"https://github.com/truemped","followers_url":"https://api.github.com/users/truemped/followers","following_url":"https://api.github.com/users/truemped/following{/other_user}","gists_url":"https://api.github.com/users/truemped/gists{/gist_id}","starred_url":"https://api.github.com/users/truemped/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/truemped/subscriptions","organizations_url":"https://api.github.com/users/truemped/orgs","repos_url":"https://api.github.com/users/truemped/repos","events_url":"https://api.github.com/users/truemped/events{/privacy}","received_events_url":"https://api.github.com/users/truemped/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-09-04T15:52:04Z","updated_at":"2015-09-19T13:50:52Z","closed_at":"2015-09-06T13:11:50Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\n\nI have a question that could be a bug but I don't know if I am having the wrong expectation.\n\nSuppose I have the following setup:\n\n```\nIndexA\n    Doc1 {'text': 'lucene beta'}\n    Doc2 {'text': 'lucene release'}\nIndexB\n    Doc3 {'text': 'elasticsearch beta'}\n    Doc4 {'text': 'elasticsearch release'}\nAlias all -> IndexA, IndexB\n```\n\nWhen I query against the `all` alias like this:\n\n``` json\n{\"query\": {\"mlt\": {\"like_text\": \"lucene beta\", \"min_term_freq\": 1, \"min_doc_freq\": 2}}}\n```\n\nDocuments `Doc1`, `Doc2` and `Doc3` are returned. Fine. But when I use the `ids` parameter like this:\n\n``` json\n{\"query\": {\"mlt\": {\"ids\": [\"Doc1\"], \"min_term_freq\": 1, \"min_doc_freq\": 2}}}\n```\n\nonly `Doc2` is returned. The same happends when I am searching not with the `all` alias but with `test1,test2` as index.\n\nI then tried to reproduce the issue as a MLT Integration test here: https://github.com/truemped/elasticsearch/commit/ba810e28d0c04d30ae584aa343a633aa730f6d3b which passes. So at this level the query returns both `Doc2` and `Doc3`.\n\nFinally I created this Python script using the ES client that fails on `assert '3' in ids`:\n\n``` python\nfrom elasticsearch import Elasticsearch\n\ndocs = {'1': {'text': 'lucene beta'},\n        '2': {'text': 'lucene release'},\n        '3': {'text': 'elasticsearch beta'},\n        '4': {'text': 'elasticsearch release'}}\n\ne = Elasticsearch()\nindex_settings = {'settings': {'number_of_shards': 1, 'number_of_replicas': 0}}\n\ne.indices.delete('test1')\ne.indices.delete('test2')\n\ne.indices.create('test1', body=index_settings)\ne.indices.create('test2', body=index_settings)\ne.indices.put_alias(name='all', index='test1')\ne.indices.put_alias(name='all', index='test2')\n\ne.index('test1', 'test', docs['1'], '1')\ne.index('test1', 'test', docs['2'], '2')\ne.index('test2', 'test', docs['3'], '3')\ne.index('test2', 'test', docs['4'], '4')\n\ne.indices.refresh('test1')\ne.indices.refresh('test2')\n\nquery = {'query': {'mlt': {'like_text': 'lucene beta',\n                           'min_doc_freq': 1,\n                           'min_term_freq': 1}}}\n\nr = e.search('all', body=query)\nids = [hit['_id'] for hit in r['hits']['hits']]\n\nassert len(ids) == 3\nassert sorted(ids) == ['1', '2', '3']\n\ndel(query['query']['mlt']['like_text'])\nquery['query']['mlt']['ids'] = ['1']\n\nr = e.search('all', body=query)\nids = [hit['_id'] for hit in r['hits']['hits']]\n\nassert '3' in ids\nassert len(ids) == 2\nassert sorted(ids) == ['2', '3']\n```\n\nBug? Or bad expectations? Or a bad test?\n\nThanks for any feedback. Daniel\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}