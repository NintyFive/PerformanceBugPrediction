{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/377","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/377/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/377/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/377/events","html_url":"https://github.com/elastic/elasticsearch/issues/377","id":325380,"node_id":"MDU6SXNzdWUzMjUzODA=","number":377,"title":"River: A pluggable river (indexer like) support","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"labels":[{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":45098,"node_id":"MDU6TGFiZWw0NTA5OA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v0.11.0","name":"v0.11.0","color":"DDDDDD","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2010-09-20T21:03:50Z","updated_at":"2010-09-21T11:39:13Z","closed_at":"2010-09-21T04:04:08Z","author_association":"MEMBER","active_lock_reason":null,"body":"A river is a pluggable entity running within elasticsearch cluster pulling data (or being pushed with data) that is then indexed into the cluster.\n\nA river is composed of a unique name and a type. The type is the type of the river (out of the box, there is the `dummy` river that simply logs that its running). The name uniquely identifies the river within the cluster. For example, one can run an river called `my_river` with type `dummy`.\n\nRivers are singletons within the cluster. They get allocated automatically to one of the nodes and run. If that node fails, an river will be automatically allocated to another node.\n\nRiver allocation on nodes can be controlled on each node. The `node.river` can be set to `_none_` disabling any river allocation to it. The `node.river` can also include a comma separated list of either river names or types controlling the rivers allowed to run on it. For example: `my_river1,my_river2`, or `dummy,twitter`.\n\nRivers require both meta data (what type they are, and additional information) that forms the \"settings\" of the river, and possibly need to store runtime state (indexed up to data X, continue from it in case of failover). Everything is driven by working an internal index called `_river`.\n\nIn that index (`_river`), each `_type` in the index (mapping) corresponds to an river name (do not confuse it with the river type). The `_meta` document id is required and includes the settings of that river. It must include at least the river type. In order to delete a river, a simple delete of the mapping type (river name) can be done.\n\nWith the fact that the river(s) information is stored as an index, it is fully persistent, and allows for very frequent state storage (under one or more documents).\n\nSounds confusing, but its really simple, here is an example for creating the `dummy` river with the name `my_river`:\n\n```\ncurl -XPUT 'localhost:9200/_river/my_river/_meta' -d '{\n    \"type\" : \"dummy\"\n}'\n```\n\nAnd deleting the river is:\n\n```\ncurl -XDELETE 'localhost:9200/_river/my_river'    \n```\n","closed_by":null,"performed_via_github_app":null}