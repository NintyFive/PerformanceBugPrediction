{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/45851","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45851/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45851/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/45851/events","html_url":"https://github.com/elastic/elasticsearch/issues/45851","id":484048499,"node_id":"MDU6SXNzdWU0ODQwNDg0OTk=","number":45851,"title":"Default allocation of new shards create hotspots","user":{"login":"ragri8","id":31997527,"node_id":"MDQ6VXNlcjMxOTk3NTI3","avatar_url":"https://avatars0.githubusercontent.com/u/31997527?v=4","gravatar_id":"","url":"https://api.github.com/users/ragri8","html_url":"https://github.com/ragri8","followers_url":"https://api.github.com/users/ragri8/followers","following_url":"https://api.github.com/users/ragri8/following{/other_user}","gists_url":"https://api.github.com/users/ragri8/gists{/gist_id}","starred_url":"https://api.github.com/users/ragri8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ragri8/subscriptions","organizations_url":"https://api.github.com/users/ragri8/orgs","repos_url":"https://api.github.com/users/ragri8/repos","events_url":"https://api.github.com/users/ragri8/events{/privacy}","received_events_url":"https://api.github.com/users/ragri8/received_events","type":"User","site_admin":false},"labels":[{"id":837246479,"node_id":"MDU6TGFiZWw4MzcyNDY0Nzk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Allocation","name":":Distributed/Allocation","color":"0e8a16","default":false,"description":"All issues relating to the decision making around placing a shard (both master logic & on the nodes)"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-08-22T15:02:26Z","updated_at":"2019-08-26T19:44:18Z","closed_at":"2019-08-26T07:17:06Z","author_association":"NONE","active_lock_reason":null,"body":"We have a big issue of hotspot on our cluster.\r\n\r\n5 data nodes, 670 indexes, 1720 shards and 40 billion documents of log data, and growing fast. We're running elasticsearch version 7.3.0.\r\n\r\nWe have multiple daily indices created each day indexing 4000 documents per second or more together.\r\nOne of them is heavier than every others, indexing alone 3000 docs/sec. Because of this, we split it into 5 primary shards (and 1 replica each), each holding about 10-20Gb.\r\n\r\nBut right now, it's hard for the cluster to keep up the pace because instead of sending 2 shards per node, all 5 primary shards are sent to the same node and the replicas are then split between the 4 remaining, even sometime skipping one.\r\n\r\nThe number of shard per node is balanced for 4 of the nodes (400+/-1), but the last one has less (120) because he has a lot less space than the other nodes and keep hitting the low watermark (85%).\r\n\r\nThe problem couldn't only be caused by the cluster trying to rebalance the shards evenly. Yesterday morning because of the disk space watermark hit on the 5th node, not a single new shard has been assigned to it, but all 5 primary shards of the heavy index started on the 2nd node.\r\n\r\nAs a default configuration, elasticsearch **_should always try to send new shards of the same index evenly accross all the nodes_**. This would ensure more than anything a minimum share of network traffic, CPU and I/O, because the heaviest index would always be splitted, and such setting wouldn't prevent shards from different indexes to spread evenly too.\r\n\r\n\r\nI could still use `index.routing.allocation.total_shards_per_node` and setting it to something like 3, but doing so would also force older shards to move, potentially causing a reallocation storm that I want to prevent at all cost.\r\nThe balancing heuristic has already been modified with `cluster.routing.allocation.balance.shard` at 0.3 and `cluster.routing.allocation.balance.index` at 0.7. I fear that setting the balance index higher would result in the same reallocation storm.","closed_by":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"performed_via_github_app":null}