[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/228385335","html_url":"https://github.com/elastic/elasticsearch/issues/19064#issuecomment-228385335","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19064","id":228385335,"node_id":"MDEyOklzc3VlQ29tbWVudDIyODM4NTMzNQ==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2016-06-24T15:59:06Z","updated_at":"2016-06-24T15:59:06Z","author_association":"MEMBER","body":"Are you looking for something like the following?\n\n``` java\nclient.prepareGet(\"index\", \"type\", \"id\").setFetchSource(\"include\", \"exclude\").get()\n```\n\nI agree that it's not super obvious but I think this is what you are looking for.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/228385680","html_url":"https://github.com/elastic/elasticsearch/issues/19064#issuecomment-228385680","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19064","id":228385680,"node_id":"MDEyOklzc3VlQ29tbWVudDIyODM4NTY4MA==","user":{"login":"arciisine","id":1264175,"node_id":"MDQ6VXNlcjEyNjQxNzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1264175?v=4","gravatar_id":"","url":"https://api.github.com/users/arciisine","html_url":"https://github.com/arciisine","followers_url":"https://api.github.com/users/arciisine/followers","following_url":"https://api.github.com/users/arciisine/following{/other_user}","gists_url":"https://api.github.com/users/arciisine/gists{/gist_id}","starred_url":"https://api.github.com/users/arciisine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arciisine/subscriptions","organizations_url":"https://api.github.com/users/arciisine/orgs","repos_url":"https://api.github.com/users/arciisine/repos","events_url":"https://api.github.com/users/arciisine/events{/privacy}","received_events_url":"https://api.github.com/users/arciisine/received_events","type":"User","site_admin":false},"created_at":"2016-06-24T16:00:24Z","updated_at":"2016-06-24T16:00:40Z","author_association":"NONE","body":"I'm looking for\n\n``` java\nclient.prepareMultiGet(\"index\", null, ids).setFetchSource(\"include\", \"exclude\").get()\n```\n\nWhich is not supported by the Java API, but is supported by the Rest API\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/228386107","html_url":"https://github.com/elastic/elasticsearch/issues/19064#issuecomment-228386107","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19064","id":228386107,"node_id":"MDEyOklzc3VlQ29tbWVudDIyODM4NjEwNw==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2016-06-24T16:01:53Z","updated_at":"2016-06-24T16:02:13Z","author_association":"MEMBER","body":"This? \n\n``` java\nclient.prepareMultiGet().add(new MultiGetRequest.Item(\"index\", \"type\", \"id\").fetchSourceContext(new FetchSourceContext(\"include\", \"exclude\"))).get();\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/228389098","html_url":"https://github.com/elastic/elasticsearch/issues/19064#issuecomment-228389098","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19064","id":228389098,"node_id":"MDEyOklzc3VlQ29tbWVudDIyODM4OTA5OA==","user":{"login":"arciisine","id":1264175,"node_id":"MDQ6VXNlcjEyNjQxNzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1264175?v=4","gravatar_id":"","url":"https://api.github.com/users/arciisine","html_url":"https://github.com/arciisine","followers_url":"https://api.github.com/users/arciisine/followers","following_url":"https://api.github.com/users/arciisine/following{/other_user}","gists_url":"https://api.github.com/users/arciisine/gists{/gist_id}","starred_url":"https://api.github.com/users/arciisine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arciisine/subscriptions","organizations_url":"https://api.github.com/users/arciisine/orgs","repos_url":"https://api.github.com/users/arciisine/repos","events_url":"https://api.github.com/users/arciisine/events{/privacy}","received_events_url":"https://api.github.com/users/arciisine/received_events","type":"User","site_admin":false},"created_at":"2016-06-24T16:12:29Z","updated_at":"2016-06-24T16:12:56Z","author_association":"NONE","body":"Yeah, I found that, and ended up doing this:\n\n``` java\n        MultiGetRequestBuilder builder = ...\n        List<String> idsToFind = ...\n        String[] includes = ...\n        String[] excludes = ...\n\n        if (includes != null || excludes != null) {\n            for (String id : idsToFind) {\n                MultiGetRequest.Item item = new MultiGetRequest.Item(index, null, id)\n                if (includes != null) {\n                    item.fetchSourceContext().includes(includes)\n                }\n                if (excludes != null) {\n                    item.fetchSourceContext().excludes(excludes)\n                }\n                builder.add(item);\n            }\n        } else {\n            builder.add(index, null, idsToFind)\n        }\n```\n\nThis doesn't seem to match the high level source filtering indicated in the REST API, but it does work.  \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/228389733","html_url":"https://github.com/elastic/elasticsearch/issues/19064#issuecomment-228389733","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19064","id":228389733,"node_id":"MDEyOklzc3VlQ29tbWVudDIyODM4OTczMw==","user":{"login":"arciisine","id":1264175,"node_id":"MDQ6VXNlcjEyNjQxNzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1264175?v=4","gravatar_id":"","url":"https://api.github.com/users/arciisine","html_url":"https://github.com/arciisine","followers_url":"https://api.github.com/users/arciisine/followers","following_url":"https://api.github.com/users/arciisine/following{/other_user}","gists_url":"https://api.github.com/users/arciisine/gists{/gist_id}","starred_url":"https://api.github.com/users/arciisine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arciisine/subscriptions","organizations_url":"https://api.github.com/users/arciisine/orgs","repos_url":"https://api.github.com/users/arciisine/repos","events_url":"https://api.github.com/users/arciisine/events{/privacy}","received_events_url":"https://api.github.com/users/arciisine/received_events","type":"User","site_admin":false},"created_at":"2016-06-24T16:15:01Z","updated_at":"2016-06-24T16:18:57Z","author_association":"NONE","body":"I updated the bug to be specifically about the high level source/field management versus the inability to actually get filtering working. \n\nI'm not sure if there is a performance difference between adding it on a per item basis or adding it to the entire request.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/228394526","html_url":"https://github.com/elastic/elasticsearch/issues/19064#issuecomment-228394526","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19064","id":228394526,"node_id":"MDEyOklzc3VlQ29tbWVudDIyODM5NDUyNg==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2016-06-24T16:33:54Z","updated_at":"2016-06-24T16:33:54Z","author_association":"MEMBER","body":"Behind the scene we are doing the exact same thing:\n\n``` java\n    public MultiGetRequestBuilder add(String index, @Nullable String type, Iterable<String> ids) {\n        for (String id : ids) {\n            request.add(index, type, id);\n        }\n        return this;\n    }\n```\n\nAnd \n\n``` java\n    public MultiGetRequest add(String index, @Nullable String type, String id) {\n        items.add(new Item(index, type, id));\n        return this;\n    }\n```\n\nI don't know what will be the plan with the new REST Client but for the TransportClient (or NodeClient) I don't think we need to add this as we can always do it as you wrote, which ends up with the same data structure in memory.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/228395801","html_url":"https://github.com/elastic/elasticsearch/issues/19064#issuecomment-228395801","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19064","id":228395801,"node_id":"MDEyOklzc3VlQ29tbWVudDIyODM5NTgwMQ==","user":{"login":"arciisine","id":1264175,"node_id":"MDQ6VXNlcjEyNjQxNzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1264175?v=4","gravatar_id":"","url":"https://api.github.com/users/arciisine","html_url":"https://github.com/arciisine","followers_url":"https://api.github.com/users/arciisine/followers","following_url":"https://api.github.com/users/arciisine/following{/other_user}","gists_url":"https://api.github.com/users/arciisine/gists{/gist_id}","starred_url":"https://api.github.com/users/arciisine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arciisine/subscriptions","organizations_url":"https://api.github.com/users/arciisine/orgs","repos_url":"https://api.github.com/users/arciisine/repos","events_url":"https://api.github.com/users/arciisine/events{/privacy}","received_events_url":"https://api.github.com/users/arciisine/received_events","type":"User","site_admin":false},"created_at":"2016-06-24T16:38:46Z","updated_at":"2016-06-24T16:38:46Z","author_association":"NONE","body":"I'm less concerned about the Java API and more concerned about how the high level filtering works via the REST API.  I'm wondering if it can do something more efficient on the Elasticsearch side if I can declare a consistent set of include/exclude versus a per document configuration.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/229901824","html_url":"https://github.com/elastic/elasticsearch/issues/19064#issuecomment-229901824","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19064","id":229901824,"node_id":"MDEyOklzc3VlQ29tbWVudDIyOTkwMTgyNA==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-07-01T09:29:52Z","updated_at":"2016-07-01T09:29:52Z","author_association":"CONTRIBUTOR","body":"@arciisine I am confused, you want a default exclude/include for all GET requests on the REST API, right? I really wonder if we should do this since where would you stop if you start adding these APIs? I would rather keep these API clean and don't overload anything except of index and type?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/229930716","html_url":"https://github.com/elastic/elasticsearch/issues/19064#issuecomment-229930716","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19064","id":229930716,"node_id":"MDEyOklzc3VlQ29tbWVudDIyOTkzMDcxNg==","user":{"login":"arciisine","id":1264175,"node_id":"MDQ6VXNlcjEyNjQxNzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1264175?v=4","gravatar_id":"","url":"https://api.github.com/users/arciisine","html_url":"https://github.com/arciisine","followers_url":"https://api.github.com/users/arciisine/followers","following_url":"https://api.github.com/users/arciisine/following{/other_user}","gists_url":"https://api.github.com/users/arciisine/gists{/gist_id}","starred_url":"https://api.github.com/users/arciisine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arciisine/subscriptions","organizations_url":"https://api.github.com/users/arciisine/orgs","repos_url":"https://api.github.com/users/arciisine/repos","events_url":"https://api.github.com/users/arciisine/events{/privacy}","received_events_url":"https://api.github.com/users/arciisine/received_events","type":"User","site_admin":false},"created_at":"2016-07-01T12:09:38Z","updated_at":"2016-07-01T12:09:38Z","author_association":"NONE","body":"@s1monw This is primarily looking for parity with the REST api which does provide the high level include/exclude.  The reasoning behind the request is not one of convenience (though that does hold some merit), but one of potential performance.  I do not know how the REST API interprets the high level include/exclude.  If all it does is convert the high level include/exclude into item specific includes/excludes then there is nothing to gain (apart from ease of use). \n\nThe Java API docs seem to indicate that it subsumes everything from the REST API, and the REST API docs indicate:\n\n> You can also use the url parameters _source,_source_include & _source_exclude to specify defaults, which will be used when there are no per-document instructions.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/229940698","html_url":"https://github.com/elastic/elasticsearch/issues/19064#issuecomment-229940698","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19064","id":229940698,"node_id":"MDEyOklzc3VlQ29tbWVudDIyOTk0MDY5OA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-07-01T13:02:13Z","updated_at":"2016-07-01T13:02:13Z","author_association":"CONTRIBUTOR","body":"It is for convenience only, and won't benefit performance so i think we're good to close this one.\n","performed_via_github_app":null}]