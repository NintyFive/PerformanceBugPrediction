{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/37865","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37865/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37865/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37865/events","html_url":"https://github.com/elastic/elasticsearch/issues/37865","id":403174223,"node_id":"MDU6SXNzdWU0MDMxNzQyMjM=","number":37865,"title":"Force values to be same type as mapping field type","user":{"login":"KongoPL","id":6218152,"node_id":"MDQ6VXNlcjYyMTgxNTI=","avatar_url":"https://avatars0.githubusercontent.com/u/6218152?v=4","gravatar_id":"","url":"https://api.github.com/users/KongoPL","html_url":"https://github.com/KongoPL","followers_url":"https://api.github.com/users/KongoPL/followers","following_url":"https://api.github.com/users/KongoPL/following{/other_user}","gists_url":"https://api.github.com/users/KongoPL/gists{/gist_id}","starred_url":"https://api.github.com/users/KongoPL/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KongoPL/subscriptions","organizations_url":"https://api.github.com/users/KongoPL/orgs","repos_url":"https://api.github.com/users/KongoPL/repos","events_url":"https://api.github.com/users/KongoPL/events{/privacy}","received_events_url":"https://api.github.com/users/KongoPL/received_events","type":"User","site_admin":false},"labels":[{"id":146834791,"node_id":"MDU6TGFiZWwxNDY4MzQ3OTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Scripting","name":":Core/Infra/Scripting","color":"0e8a16","default":false,"description":"Scripting abstractions, Painless, and Mustache"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-01-25T14:15:24Z","updated_at":"2019-01-29T14:42:21Z","closed_at":"2019-01-29T14:42:21Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version** (`bin/elasticsearch --version`): Version: 6.4.2, Build: default/zip/04711c2/2018-09-26T13:34:09.098244Z, JVM: 11.0.2\r\n\r\n**Plugins installed**: all defaults\r\n\r\n**JVM version** (`java -version`):\r\njava version \"11.0.2\" 2019-01-15 LTS\r\nJava(TM) SE Runtime Environment 18.9 (build 11.0.2+9-LTS)\r\nJava HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.2+9-LTS, mixed mode)\r\n\r\n**OS version** (`uname -a` if on a Unix-like system): Windows 10 Home x64\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nI was messing with updating documents by query. I discovered that if we have numeric field in mapping (like long, float or int) and we inserted numeric value as string (\"123456\" instead of 123456) value is inserted as we give it (123456 or \"123456\" instead of 123456).\r\nThe point is that during writing simple painless script like `ctx._source.myField *= 2` value does not multiply (what happens if we inserted \"123456\" instead of 123456). In that case I have to cast value to certain type and then I'm able to do math operation (i.e. `ctx._source.myField = Long.parseLong(ctx._source.myField) * 2`).\r\n\r\nAlso, I saw that this value is really stored as string when we inserted it as \"123456\" (I had java error about casting problems from string to number. Also JSON response confirms it).\r\n\r\nIMHO if mapping says that field is numeric, it should cast value to numeric (\"123456\" -> 123456) during insert.\r\n\r\n**Steps to reproduce**:\r\n\r\n```\r\nPUT /xd/\r\n{\r\n    \"mappings\" : {\r\n        \"_doc\" : {\r\n            \"properties\" : {\r\n                \"field\" : { \"type\" : \"long\" }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nPOST /xd/_doc/numeric\r\n{\r\n    \"field\": 1234567890123\r\n}\r\n\r\nPOST /xd/_update_by_query\r\n{\r\n  \"script\": {\r\n    \"source\": \"ctx._source.field *= 2\",\r\n    \"lang\": \"painless\"\r\n  },\r\n  \"query\": {\r\n    \"term\": {\r\n      \"_id\": \"numeric\"\r\n    }\r\n  }\r\n}\r\n\r\n// Now value is 2469135780246 (OK)\r\n\r\nPOST /xd/_doc/string\r\n{\r\n    \"field\": \"1234567890123\"\r\n}\r\n\r\nPOST /xd/_update_by_query\r\n{\r\n  \"script\": {\r\n    \"source\": \"ctx._source.field *= 2\",\r\n    \"lang\": \"painless\"\r\n  },\r\n  \"query\": {\r\n    \"term\": {\r\n      \"_id\": \"string\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nLast one request returns error and ElasticSearch says this:\r\n```\r\n[2019-01-25T15:07:08,168][WARN ][r.suppressed             ] path: /xd/_update_by_query, params: {index=xd}\r\norg.elasticsearch.script.ScriptException: runtime error\r\n        at org.elasticsearch.painless.PainlessScript.convertToScriptException(PainlessScript.java:94) ~[?:?]\r\n        at org.elasticsearch.painless.PainlessScript$Script.execute(ctx._source.field *= 2:12) ~[?:?]\r\n        at org.elasticsearch.painless.ScriptImpl.run(ScriptImpl.java:105) ~[?:?]\r\n        at org.elasticsearch.index.reindex.AbstractAsyncBulkByScrollAction$ScriptApplier.apply(AbstractAsyncBulkByScrollAction.java:819) ~[reindex-6.4.2.jar:6.4.2]\r\n        at org.elasticsearch.index.reindex.AbstractAsyncBulkByScrollAction$ScriptApplier.apply(AbstractAsyncBulkByScrollAction.java:768) ~[reindex-6.4.2.jar:6.4.2]\r\n        at org.elasticsearch.index.reindex.AbstractAsyncBulkByScrollAction.buildBulk(AbstractAsyncBulkByScrollAction.java:216) [reindex-6.4.2.jar:6.4.2]\r\n        at org.elasticsearch.index.reindex.AbstractAsyncBulkByScrollAction.prepareBulkRequest(AbstractAsyncBulkByScrollAction.java:326) [reindex-6.4.2.jar:6.4.2]\r\n        at org.elasticsearch.index.reindex.AbstractAsyncBulkByScrollAction$1.doRun(AbstractAsyncBulkByScrollAction.java:289) [reindex-6.4.2.jar:6.4.2]\r\n        at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:723) [elasticsearch-6.4.2.jar:6.4.2]\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-6.4.2.jar:6.4.2]\r\n        at org.elasticsearch.index.reindex.WorkerBulkByScrollTaskState$RunOnce.doRun(WorkerBulkByScrollTaskState.java:321) [elasticsearch-6.4.2.jar:6.4.2]\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-6.4.2.jar:6.4.2]\r\n        at org.elasticsearch.index.reindex.WorkerBulkByScrollTaskState$DelayedPrepareBulkRequest$1.doRun(WorkerBulkByScrollTaskState.java:257) [elasticsearch-6.4.2.jar:6.4.2]\r\n        at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:723) [elasticsearch-6.4.2.jar:6.4.2]\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-6.4.2.jar:6.4.2]\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]\r\n        at java.lang.Thread.run(Thread.java:834) [?:?]\r\nCaused by: java.lang.ClassCastException: Cannot apply [*] operation to types [java.lang.String] and [java.lang.Integer].\r\n        at org.elasticsearch.painless.DefMath.mul(DefMath.java:228) ~[?:?]\r\n        at java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:710) ~[?:?]\r\n        at org.elasticsearch.painless.DefBootstrap$MIC.fallback(DefBootstrap.java:317) ~[?:?]\r\n        at org.elasticsearch.painless.PainlessScript$Script.execute(ctx._source.field *= 2:22) ~[?:?]\r\n        ... 16 more\r\n```\r\n\r\nHowever, this will work (cause I casted this value to long by myself):\r\n\r\n```\r\nPOST /xd/_update_by_query\r\n{\r\n  \"script\": {\r\n    \"source\": \"ctx._source.field = Long.parseLong(ctx._source.field) * 2\",\r\n    \"lang\": \"painless\"\r\n  },\r\n  \"query\": {\r\n    \"term\": {\r\n      \"_id\": \"string\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThanks for review and for answers!","closed_by":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"performed_via_github_app":null}