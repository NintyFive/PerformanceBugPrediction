{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/23076","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23076/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23076/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23076/events","html_url":"https://github.com/elastic/elasticsearch/issues/23076","id":206515691,"node_id":"MDU6SXNzdWUyMDY1MTU2OTE=","number":23076,"title":"TransportClientNodesService swallows exceptions, reports them at DEBUG log level, and maps all to NoNodesAvailableException","user":{"login":"dgoldenberg1234","id":17676310,"node_id":"MDQ6VXNlcjE3Njc2MzEw","avatar_url":"https://avatars1.githubusercontent.com/u/17676310?v=4","gravatar_id":"","url":"https://api.github.com/users/dgoldenberg1234","html_url":"https://github.com/dgoldenberg1234","followers_url":"https://api.github.com/users/dgoldenberg1234/followers","following_url":"https://api.github.com/users/dgoldenberg1234/following{/other_user}","gists_url":"https://api.github.com/users/dgoldenberg1234/gists{/gist_id}","starred_url":"https://api.github.com/users/dgoldenberg1234/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dgoldenberg1234/subscriptions","organizations_url":"https://api.github.com/users/dgoldenberg1234/orgs","repos_url":"https://api.github.com/users/dgoldenberg1234/repos","events_url":"https://api.github.com/users/dgoldenberg1234/events{/privacy}","received_events_url":"https://api.github.com/users/dgoldenberg1234/received_events","type":"User","site_admin":false},"labels":[{"id":146829143,"node_id":"MDU6TGFiZWwxNDY4MjkxNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/Transport%20API","name":":Core/Infra/Transport API","color":"0e8a16","default":false,"description":"Transport client API"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-02-09T14:13:16Z","updated_at":"2018-03-15T13:38:19Z","closed_at":"2018-03-15T13:38:19Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**:\r\n2.3.1\r\n\r\n**Plugins installed**: [Kibana]\r\n\r\n**JVM version**:\r\n1.8.0_112-b15\r\n\r\n**OS version**:\r\nRed Hat 6.7\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nDescribed in detail in my form post: https://discuss.elastic.co/t/nonodeavailableexception-none-of-the-configured-nodes-are-available-error-when-trying-to-push-data-to-elastic-from-a-spark-job/73904\r\n\r\nTransportClientNodesService swallows exceptions, reports them at DEBUG log level, and maps all to a generic NoNodesAvailableException, which makes it very hard to uncover the actual underlying problem.\r\n\r\nActual code in the service:\r\n\r\n    protected List<DiscoveryNode> validateNewNodes(Set<DiscoveryNode> nodes) {\r\n        for (Iterator<DiscoveryNode> it = nodes.iterator(); it.hasNext(); ) {\r\n            DiscoveryNode node = it.next();\r\n            if (!transportService.nodeConnected(node)) {\r\n                try {\r\n                    logger.trace(\"connecting to node [{}]\", node);\r\n                    transportService.connectToNode(node);\r\n                } catch (Throwable e) {\r\n                    it.remove();\r\n                    logger.debug(\"failed to connect to discovered node [\" + node + \"]\", e);\r\n                }\r\n            }\r\n        }\r\n\r\n        return Collections.unmodifiableList(new ArrayList<>(nodes));\r\n    }\r\n\r\nThe desired behavior would be to:\r\na. Log the original exception at the ERROR level into the log.\r\nb. Wrap the original exception into the NoNodeAvailableException or, better, rethrow the original exception, or something that does not lose the cause exception.\r\n\r\n**Steps to reproduce**:\r\n 1. Build a Spark uber-jar with Maven Shade plugin, without using the org.apache.maven.plugins.shade.resource.ServicesResourceTransformer transformer.\r\n 2. Deploy the Spark job and kick it off.\r\n 3. Observe that the code trying to connect to Elastic from the Spark job gets a generic NoNodeAvailableException, with no apparent way to tell what's wrong (the cluster is all GREEN).\r\n\r\n","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}