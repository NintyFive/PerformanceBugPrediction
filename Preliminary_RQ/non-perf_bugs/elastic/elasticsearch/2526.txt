{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/2526","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2526/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2526/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2526/events","html_url":"https://github.com/elastic/elasticsearch/issues/2526","id":9725526,"node_id":"MDU6SXNzdWU5NzI1NTI2","number":2526,"title":"Parse error for simple match_all query depending on order of properties in map","user":{"login":"augustl","id":375,"node_id":"MDQ6VXNlcjM3NQ==","avatar_url":"https://avatars1.githubusercontent.com/u/375?v=4","gravatar_id":"","url":"https://api.github.com/users/augustl","html_url":"https://github.com/augustl","followers_url":"https://api.github.com/users/augustl/followers","following_url":"https://api.github.com/users/augustl/following{/other_user}","gists_url":"https://api.github.com/users/augustl/gists{/gist_id}","starred_url":"https://api.github.com/users/augustl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/augustl/subscriptions","organizations_url":"https://api.github.com/users/augustl/orgs","repos_url":"https://api.github.com/users/augustl/repos","events_url":"https://api.github.com/users/augustl/events{/privacy}","received_events_url":"https://api.github.com/users/augustl/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2013-01-07T05:31:46Z","updated_at":"2013-10-30T10:06:58Z","closed_at":"2013-10-30T10:06:58Z","author_association":"NONE","active_lock_reason":null,"body":"Here's a small shell script that showcases the error:\n\n```\nindexurl=http://localhost:9200/bugtestindex\n\necho \"Resetting index\"\ncurl -XDELETE $indexurl\necho\necho \"Creating a document\";\ncurl -XPOST $indexurl/myindex/123abc -d '{\"foo\":\"foo\"}'\necho\necho\necho \"*** Result of query A\"\ncurl -d '{\"query\":{\"match_all\":{},\"size\":1}}' $indexurl/myindex/_search\necho\necho \"*** Result of query B\"\ncurl -d '{\"query\":{\"size\":1,\"match_all\":{}}}' $indexurl/myindex/_search\necho\necho \"Resetting index\"\ncurl -XDELETE $indexurl\n```\n\nThe output of the script is as follows:\n\n```\nResetting index\n{\"error\":\"IndexMissingException[[bugtestindex] missing]\",\"status\":404}\nCreating a document\n{\"ok\":true,\"_index\":\"bugtestindex\",\"_type\":\"myindex\",\"_id\":\"123abc\",\"_version\":1}\n\n*** Result of query A\n{\"took\":1,\"timed_out\":false,\"_shards\":{\"total\":5,\"successful\":5,\"failed\":0},\"hits\":{\"total\":0,\"max_score\":null,\"hits\":[]}}\n*** Result of query B\n{\"error\":\"SearchPhaseExecutionException[Failed to execute phase [query], total failure; shardFailures {[IJfl5R9CSveC7dd0EX7RZg][bugtestindex][3]: SearchParseException[[bugtestindex][3]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\\\"query\\\":{\\\"size\\\":1,\\\"match_all\\\":{}}}]]]; nested: QueryParsingException[[bugtestindex] [_na] query malformed, no field after start_object]; }{[IJfl5R9CSveC7dd0EX7RZg][bugtestindex][2]: SearchParseException[[bugtestindex][2]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\\\"query\\\":{\\\"size\\\":1,\\\"match_all\\\":{}}}]]]; nested: QueryParsingException[[bugtestindex] [_na] query malformed, no field after start_object]; }]\",\"status\":500}\nResetting index\n```\n\nThe error can be seen on the 2nd to last line in the output of the script.\n\nThe order of the properties in the map should not matter, as it is very hard to control this. In many languages, maps are unsorted, making iteration order unspecified when iterating for JSON serialization. This is also not a documented feature, so I think it's safe to classify this as a bug.\n","closed_by":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"performed_via_github_app":null}