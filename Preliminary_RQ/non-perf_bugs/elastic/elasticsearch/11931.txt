{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/11931","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11931/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11931/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11931/events","html_url":"https://github.com/elastic/elasticsearch/issues/11931","id":91935509,"node_id":"MDU6SXNzdWU5MTkzNTUwOQ==","number":11931,"title":"(::regression from ES 1.3.5 ) Elasticsearch 1.6.0 - \"unmapped_type\"/\"ignore_unmapped\" does not work for Sorting with nested filter","user":{"login":"navneet83","id":4686373,"node_id":"MDQ6VXNlcjQ2ODYzNzM=","avatar_url":"https://avatars0.githubusercontent.com/u/4686373?v=4","gravatar_id":"","url":"https://api.github.com/users/navneet83","html_url":"https://github.com/navneet83","followers_url":"https://api.github.com/users/navneet83/followers","following_url":"https://api.github.com/users/navneet83/following{/other_user}","gists_url":"https://api.github.com/users/navneet83/gists{/gist_id}","starred_url":"https://api.github.com/users/navneet83/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/navneet83/subscriptions","organizations_url":"https://api.github.com/users/navneet83/orgs","repos_url":"https://api.github.com/users/navneet83/repos","events_url":"https://api.github.com/users/navneet83/events{/privacy}","received_events_url":"https://api.github.com/users/navneet83/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-06-29T23:36:11Z","updated_at":"2015-06-30T11:25:58Z","closed_at":"2015-06-30T11:25:57Z","author_association":"MEMBER","active_lock_reason":null,"body":"\"unmapped_type\"/\"ignore_unmapped\" does not work when used with sorting with nested filter. This example will make it clear:\n\nCreate two indexes - **testindex1** and **testindex2**:\n\n``` json\ncurl -XPUT localhost:9200/testindex1 -d '{\"mappings\":{\"type1\":{\"properties\":{\"firstname\":{\"type\":\"string\"},\"servers\":{\"type\":\"nested\",\"properties\":{\"name\":{\"type\":\"string\"},\"location\":{\"type\":\"nested\",\"properties\":{\"name\":{\"type\":\"string\"}}}}}}}}}'\n\ncurl -XPUT localhost:9200/testindex2 -d '{\"mappings\":{\"type1\":{\"properties\":{\"firstname\":{\"type\":\"string\"},\"computers\":{\"type\":\"nested\",\"properties\":{\"name\":{\"type\":\"string\"},\"location\":{\"type\":\"nested\",\"properties\":{\"name\":{\"type\":\"string\"}}}}}}}}}'\n```\n\nThe only difference between these two indexes is - **testindex1** has \"server\" field and **textindex2** has \"computers\" field. \nNow let's insert test data in both the indexes:\n\n``` json\ncurl -XPUT localhost:9200/testindex1/type1/1 -d '{\"firstname\":\"servertom\",\"servers\":[{\"name\":\"server1\",\"location\":[{\"name\":\"location1\"},{\"name\":\"location2\"}]},{\"name\":\"server2\",\"location\":[{\"name\":\"location1\"}]}]}'\ncurl -XPUT localhost:9200/testindex1/type1/2 -d '{\"firstname\":\"serverjerry\",\"servers\":[{\"name\":\"server2\",\"location\":[{\"name\":\"location5\"}]}]}'\n```\n\n``` json\ncurl -XPUT localhost:9200/testindex2/type1/1 -d '{\"firstname\":\"computertom\",\"computers\":[{\"name\":\"computer1\",\"location\":[{\"name\":\"location1\"},{\"name\":\"location2\"}]},{\"name\":\"computer2\",\"location\":[{\"name\":\"location1\"}]}]}'\ncurl -XPUT localhost:9200/testindex2/type1/2 -d '{\"firstname\":\"computerjerry\",\"computers\":[{\"name\":\"computer2\",\"location\":[{\"name\":\"location5\"}]}]}'\n```\n\nCase 1 - Regular sort (without nested filter)  + \"unmapped_type\"/\"ignore_unmapped\" works fine. No issues here. This can be seen by following queries:\n\n``` json\ncurl -XPOST 'localhost:9200/testindex2/_search?pretty' -d '{\"fields\":[\"firstname\"],\"query\":{\"match_all\":{}},\"sort\":[{\"servers.location.name\":{\"order\":\"desc\",\"unmapped_type\":\"string\"}}]}'\ncurl -XPOST 'localhost:9200/testindex2/_search?pretty' -d '{\"fields\":[\"firstname\"],\"query\":{\"match_all\":{}},\"sort\":[{\"servers.location.name\":{\"order\":\"desc\",\"ignore_unmapped\": \"true\"}}]}'\n```\n\nBoth the queries above run on **\"testindex2\"** which does not have \"servers.location.name\" field.  Both the queries run fine as we have used - \"unmapped_type\"/\"ignore_unmapped\", however sort field has some integer value which is not expected:\n\n``` json\n{\n  \"took\" : 1,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 2,\n    \"max_score\" : null,\n    \"hits\" : [ {\n      \"_index\" : \"testindex2\",\n      \"_type\" : \"type1\",\n      \"_id\" : \"1\",\n      \"_score\" : null,\n      \"fields\" : {\n        \"firstname\" : [ \"tom\" ]\n      },\n      \"sort\" : [ -9223372036854775808 ]\n    }, {\n      \"_index\" : \"testindex2\",\n      \"_type\" : \"type1\",\n      \"_id\" : \"2\",\n      \"_score\" : null,\n      \"fields\" : {\n        \"firstname\" : [ \"tom\" ]\n      },\n      \"sort\" : [ -9223372036854775808 ]\n    } ]\n  }\n}\n```\n\nCase 2 - Nested filter sort on **testindex1** works fine as  **\"servers.location.name\"** field is present in this index:\n\n``` json\ncurl -XPOST 'localhost:9200/testindex1/_search?pretty' -d '{\"fields\":[\"firstname\",\"servers.location.name\"],\"query\":{\"match_all\":{}},\"sort\":[{\"servers.location.name\":{\"order\":\"desc\",\"unmapped_type\":\"string\",\"nested_filter\":{\"term\":{\"servers.location.name\":\"location5\"}},\"nested_path\":\"servers\"}}]}'\ncurl -XPOST 'localhost:9200/testindex1/_search?pretty' -d '{\"fields\":[\"firstname\",\"servers.location.name\"],\"query\":{\"match_all\":{}},\"sort\":[{\"servers.location.name\":{\"order\":\"desc\",\"ignore_unmapped\": \"true\",\"nested_filter\":{\"term\":{\"servers.location.name\":\"location5\"}},\"nested_path\":\"servers\"}}]}'\n```\n\nCase 3 - Nested filter sort on **testindex2** doesn't work even if \"unmapped_type\"/\"ignore_unmapped\" is used. Following examples throw error:\n\n``` json\ncurl -XPOST 'localhost:9200/testindex2/_search?pretty' -d '{\"fields\":[\"firstname\",\"servers.location.name\"],\"query\":{\"match_all\":{}},\"sort\":[{\"servers.location.name\":{\"order\":\"desc\",\"unmapped_type\":\"string\",\"nested_filter\":{\"term\":{\"servers.location.name\":\"location5\"}},\"nested_path\":\"servers\"}}]}'\ncurl -XPOST 'localhost:9200/testindex2/_search?pretty' -d '{\"fields\":[\"firstname\",\"servers.location.name\"],\"query\":{\"match_all\":{}},\"sort\":[{\"servers.location.name\":{\"order\":\"desc\",\"ignore_unmapped\": \"true\",\"nested_filter\":{\"term\":{\"servers.location.name\":\"location5\"}},\"nested_path\":\"servers\"}}]}'\n```\n\nSurprisingly, Issue with \"ignore_unmapped\" example in Case 3 is not observed in older version of elasticsearch - 1.1.0 and the query works fine. \n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}