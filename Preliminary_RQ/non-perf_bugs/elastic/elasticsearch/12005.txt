{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/12005","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12005/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12005/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12005/events","html_url":"https://github.com/elastic/elasticsearch/issues/12005","id":92727186,"node_id":"MDU6SXNzdWU5MjcyNzE4Ng==","number":12005,"title":"ip_range aggregation with mask of 0.0.0.0/0 gets treated as 0.0.0.0/32","user":{"login":"cameronkerrnz","id":938702,"node_id":"MDQ6VXNlcjkzODcwMg==","avatar_url":"https://avatars3.githubusercontent.com/u/938702?v=4","gravatar_id":"","url":"https://api.github.com/users/cameronkerrnz","html_url":"https://github.com/cameronkerrnz","followers_url":"https://api.github.com/users/cameronkerrnz/followers","following_url":"https://api.github.com/users/cameronkerrnz/following{/other_user}","gists_url":"https://api.github.com/users/cameronkerrnz/gists{/gist_id}","starred_url":"https://api.github.com/users/cameronkerrnz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cameronkerrnz/subscriptions","organizations_url":"https://api.github.com/users/cameronkerrnz/orgs","repos_url":"https://api.github.com/users/cameronkerrnz/repos","events_url":"https://api.github.com/users/cameronkerrnz/events{/privacy}","received_events_url":"https://api.github.com/users/cameronkerrnz/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":92913858,"node_id":"MDU6TGFiZWw5MjkxMzg1OA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/good%20first%20issue","name":"good first issue","color":"07569b","default":true,"description":"low hanging fruit"},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-07-02T20:25:49Z","updated_at":"2018-02-14T13:39:18Z","closed_at":"2015-07-27T10:13:23Z","author_association":"NONE","active_lock_reason":null,"body":"An ip_range aggregation with mask of 0.0.0.0/0 is not being treated correctly, the prefix-length of 0 is being taken as 'unset' and is being set as /32\n\nI am trying to get aggregated information on expanding scopes (some subnet in our network, our entire network, the internet...), so I want to use 0.0.0.0/0 ... a range of 0.0.0.0 to 255.255.255.255 does work (although is nit-pickingly incorrect as the range is exclusive and so the final address tested is 255.255.255.254, which might be surprising if you wanted information about broadcast packets.... but that is perhaps a separate bug report.\n\n``` json\n# Replace the template that logstash provides, so\n# we add an 'ip' multifield type to the 'clientip'\n# field.\n\nPUT /_template/logstash\n{\n  \"template\": \"logstash-*\",\n  \"settings\": {\n    \"index.refresh_interval\": \"5s\"\n  },\n  \"mappings\": {\n    \"_default_\": {\n      \"dynamic_templates\": [\n        {\n          \"message_field\": {\n            \"mapping\": {\n              \"index\": \"analyzed\",\n              \"omit_norms\": true,\n              \"type\": \"string\"\n            },\n            \"match_mapping_type\": \"string\",\n            \"match\": \"message\"\n          }\n        },\n        {\n          \"ip_field\": {\n            \"mapping\": {\n              \"index\": \"not_analyzed\",\n              \"omit_norms\": true,\n              \"type\": \"string\",\n              \"fields\": {\n                \"num\": {\n                  \"index\": \"not_analyzed\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"match_mapping_type\": \"string\",\n            \"match\": \"ip_*\"\n          }\n        },\n        {\n          \"string_fields\": {\n            \"mapping\": {\n              \"index\": \"analyzed\",\n              \"omit_norms\": true,\n              \"type\": \"string\",\n              \"fields\": {\n                \"raw\": {\n                  \"index\": \"not_analyzed\",\n                  \"ignore_above\": 256,\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"match_mapping_type\": \"string\",\n            \"match\": \"*\"\n          }\n        }\n      ],\n      \"properties\": {\n        \"clientip\": {\n          \"type\": \"string\",\n          \"fields\": {\n            \"num\": {\n              \"index\": \"not_analyzed\",\n              \"type\": \"ip\"\n            }\n          }\n        },\n        \"geoip\": {\n          \"dynamic\": true,\n          \"properties\": {\n            \"location\": {\n              \"type\": \"geo_point\"\n            }\n          },\n          \"type\": \"object\"\n        },\n        \"@version\": {\n          \"index\": \"not_analyzed\",\n          \"type\": \"string\"\n        }\n      },\n      \"_all\": {\n        \"enabled\": true,\n        \"omit_norms\": true\n      }\n    }\n  },\n  \"aliases\": {}\n}\n\n# First, delete the current data, as we need to adjust\n# the mapping\n\nDELETE /logstash-test\n\n# Now go ahead and index your logstash data...\n\nPUT /logstash-test/logs/1\n{\n  \"clientip\": \"12.34.0.1\",\n  \"ip_source\": \"12.34.0.1\",\n  \"message\": \"The very model of a modern major general\",\n  \"somestring\": \"shoestring\"\n}\n\nPUT /logstash-test/logs/2\n{\n  \"clientip\": \"23.45.2.3\",\n  \"ip_source\": \"23.45.2.3\",\n  \"message\": \"Everyone needs a nemesis\",\n  \"somestring\": \"stringthing\"\n}\n\n# Check what we got back\n#\n# I was expecting to see:\n#  - 'somestring' attribute should have a .raw subfield\n#  - 'message' should not\n#  - 'clientip' should have a .num subfield\n#  - 'ip_source' should have a .num subfield\n#\n# ... but I don't see the subfields (not sure why)\n\nGET /logstash-test/logs/1\nGET /logstash-test/logs/2\n\n# Check your mapping after you start indexing\n\nGET logstash-test/_mapping/logs\n\n# Do a search for it (remember it won't show up in\n# a search until the index has passed its refresh\n# interval)\n#\n# Remember to specify the subfield you need to work on\n\n# I couldn't find an example of Kibana using a 'count'\n# search-type, but it seems to use '\"size\": 0' instead.\n\n### BUG!!! an ip_range with mask of 0.0.0.0/0 is not\n# being treated correctly, the prefix-length of 0 is\n# being taken as 'unset' and is being set as /32\n\nGET logstash-test/_search\n{\n  \"size\": 0, \n  \"aggs\": {\n    \"ip_ranges\": {\n      \"ip_range\": {\n        \"field\": \"clientip.num\",\n        \"ranges\": [\n          {\n            \"mask\": \"12.0.0.0/8\"\n          },\n          {\n            \"mask\": \"0.0.0.0/1\"\n          },\n          {\n            \"from\": \"0.0.0.0\",\n            \"to\": \"255.255.255.255\"\n          },\n          {\n            \"mask\": \"0.0.0.0/0\"\n          }\n        ]\n      }\n    }\n  }\n}\n\n# There is no IP address value that can legitimately be\n# used as a \"null\" value for a CIDR prefix... \n# well, not in the IP address part; For IPv4, you could\n# use /33 or such as an \"null\" value I suppose, if \n# you didn't want the overhead of adding an extra bit\n# of information... so long as that implementation\n# detail wasn't exposed to users.\n```\n","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}