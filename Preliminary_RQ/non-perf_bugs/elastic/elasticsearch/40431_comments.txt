[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/476556581","html_url":"https://github.com/elastic/elasticsearch/issues/40431#issuecomment-476556581","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40431","id":476556581,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3NjU1NjU4MQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-03-26T10:09:39Z","updated_at":"2019-03-26T10:09:39Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/476716275","html_url":"https://github.com/elastic/elasticsearch/issues/40431#issuecomment-476716275","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40431","id":476716275,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3NjcxNjI3NQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-03-26T15:54:48Z","updated_at":"2019-03-26T15:54:48Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/476754101","html_url":"https://github.com/elastic/elasticsearch/issues/40431#issuecomment-476754101","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40431","id":476754101,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3Njc1NDEwMQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2019-03-26T17:14:37Z","updated_at":"2019-03-26T17:14:37Z","author_association":"MEMBER","body":">  I want to enforce primary_first (now deprecated) or explicit string based routing to ensure high cache/mmap hits\r\n\r\nI don't really understand why you'd give the same search preference to all your queries. What is the point of having replicas if you route all your queries to the primaries ? If some shards are slower the `adaptive_replica_selection` should handle this nicely without the need to add a new index setting. Also note that `adaptive_replica_selection` is a cluster setting that cannot be set per query and I don't think we should allow to change this value in the search preference. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/476798711","html_url":"https://github.com/elastic/elasticsearch/issues/40431#issuecomment-476798711","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40431","id":476798711,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3Njc5ODcxMQ==","user":{"login":"malpani","id":368133,"node_id":"MDQ6VXNlcjM2ODEzMw==","avatar_url":"https://avatars1.githubusercontent.com/u/368133?v=4","gravatar_id":"","url":"https://api.github.com/users/malpani","html_url":"https://github.com/malpani","followers_url":"https://api.github.com/users/malpani/followers","following_url":"https://api.github.com/users/malpani/following{/other_user}","gists_url":"https://api.github.com/users/malpani/gists{/gist_id}","starred_url":"https://api.github.com/users/malpani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malpani/subscriptions","organizations_url":"https://api.github.com/users/malpani/orgs","repos_url":"https://api.github.com/users/malpani/repos","events_url":"https://api.github.com/users/malpani/events{/privacy}","received_events_url":"https://api.github.com/users/malpani/received_events","type":"User","site_admin":false},"created_at":"2019-03-26T18:56:06Z","updated_at":"2019-03-26T19:13:43Z","author_association":"CONTRIBUTOR","body":"> I don't really understand why you'd give the same search preference to all your queries.\r\n\r\nThe use case is cold read only indices on instances with high disk to memory ratio (eg. 40 TB storage v/s 128 GB RAM). By `primary_first` i ensure better utilization - off heap mmaped files are not being swapped out, on heap caches are not staggered etc.\r\n\r\nI am trying to understand the opposite, in what scenarios will someone give different search preferences for the same index across different queries? \r\nie. Would it be better to give an option to fix this at index levels which is what this feature request aims at.\r\n\r\n> What is the point of having replicas if you route all your queries to the primaries ? \r\n\r\nBesides the performance, replica ensures search availability and durability, essentially this feature gives us passive replicas\r\n* Availability - For any transient failures when the node drops/goes OOM/network flip etc., the query will get retried on the next copy as decided by search preference (passive replica in my case)\r\n* Durability - The replica still protects from fault tolerance of permanent node failures (yes as these are read only i can restore from snapshot too but it would not meet the availability point) \r\n\r\n> Also note that adaptive_replica_selection is a cluster setting that cannot be set per query and I don't think we should allow to change this value in the search preference.\r\n\r\nYou are right, `adaptive_replica_selection` is cluster wide, as it needs to track historic response times etc. which would break if turned on just at query level. The refined idea for `adaptive_replica` would be the cluster wide setting turns on stats collection but `index.search_preference` can take on different modes and use those stats or even allow a plugin to come up with its own preference","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/476827148","html_url":"https://github.com/elastic/elasticsearch/issues/40431#issuecomment-476827148","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40431","id":476827148,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3NjgyNzE0OA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2019-03-26T20:07:55Z","updated_at":"2019-03-26T20:07:55Z","author_association":"MEMBER","body":"> The use case is cold read only indices on instances with high disk to memory ratio (eg. 40 TB storage v/s 128 GB RAM). By primary_first i ensure better utilization - off heap mmaped files are not being swapped out, on heap caches are not staggered etc.\r\n\r\nIf you have a high disk to memory ratio I doubt that different queries will hit the same page on disks. In fact with this setup I wonder if this would not have the inverse effect of slowing down queries since you'd have more IOs than if you spread the traffic on multiple cold nodes. \r\n\r\n> I am trying to understand the opposite, in what scenarios will someone give different search preferences for the same index across different queries?\r\nie. Would it be better to give an option to fix this at index levels which is what this feature request aims at.\r\n\r\nThe custom string value is often used with session id or user names, this way identical queries within a session have more chance to return the same result and/or be retrieved from the cache. The assumption here is that queries in a single session are related so the probability that they'll hit the same page/cache is higher. Kibana for instance uses the session id of the user to fill the search preference when they send queries to Elasticsearch.\r\n\r\n> Besides the performance, replica ensures search availability and durability, essentially this feature gives us passive replicas\r\n\r\nThis is based on the assumption that hitting the same replicas on different queries should be faster. I don't think this is true for cold nodes where there is a high disk to memory ratio. Have you tried the \r\n`adaptive_replica_selection` ? Sorry to repeat but this looks like the perfect candidate to route queries when you have nodes with different configurations and indices.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/476843006","html_url":"https://github.com/elastic/elasticsearch/issues/40431#issuecomment-476843006","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40431","id":476843006,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3Njg0MzAwNg==","user":{"login":"malpani","id":368133,"node_id":"MDQ6VXNlcjM2ODEzMw==","avatar_url":"https://avatars1.githubusercontent.com/u/368133?v=4","gravatar_id":"","url":"https://api.github.com/users/malpani","html_url":"https://github.com/malpani","followers_url":"https://api.github.com/users/malpani/followers","following_url":"https://api.github.com/users/malpani/following{/other_user}","gists_url":"https://api.github.com/users/malpani/gists{/gist_id}","starred_url":"https://api.github.com/users/malpani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malpani/subscriptions","organizations_url":"https://api.github.com/users/malpani/orgs","repos_url":"https://api.github.com/users/malpani/repos","events_url":"https://api.github.com/users/malpani/events{/privacy}","received_events_url":"https://api.github.com/users/malpani/received_events","type":"User","site_admin":false},"created_at":"2019-03-26T20:43:37Z","updated_at":"2019-03-26T20:44:42Z","author_association":"CONTRIBUTOR","body":"Thanks for the sessionId example. \r\n\r\n> I wonder if this would not have the inverse effect of slowing down queries since you'd have more IOs than if you spread the traffic on multiple cold nodes.\r\n\r\nGuess it depends on the number of cold nodes. To describe my setup in more detail \r\n* 10 hot nodes\r\n* 5 cold nodes\r\n* 5 shards per index rotating hourly. (application logs)\r\nNormally cold indices never get queries, unless there is an adhoc investigation. In steady state, i expect each cold node to contain 1 primary and passive replica per index. For such scenarios, i feel passive replica will ensure better gains.\r\n\r\nI do see your reasoning and this feature may not be helpful to many people v/s letting `adaptive_replica_selection`  figure out the preferences. I will also try `adaptive_replica_selection` once again. \r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/476849605","html_url":"https://github.com/elastic/elasticsearch/issues/40431#issuecomment-476849605","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40431","id":476849605,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3Njg0OTYwNQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2019-03-26T20:58:32Z","updated_at":"2019-03-26T20:58:32Z","author_association":"MEMBER","body":"You should also take a look at a new feature added in 6.6 called [`frozen indices`](https://www.elastic.co/guide/en/elasticsearch/reference/6.6/frozen-indices.html) which aims at reducing the cost of keeping this old indices that are queried very rarely. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/476863926","html_url":"https://github.com/elastic/elasticsearch/issues/40431#issuecomment-476863926","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40431","id":476863926,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3Njg2MzkyNg==","user":{"login":"malpani","id":368133,"node_id":"MDQ6VXNlcjM2ODEzMw==","avatar_url":"https://avatars1.githubusercontent.com/u/368133?v=4","gravatar_id":"","url":"https://api.github.com/users/malpani","html_url":"https://github.com/malpani","followers_url":"https://api.github.com/users/malpani/followers","following_url":"https://api.github.com/users/malpani/following{/other_user}","gists_url":"https://api.github.com/users/malpani/gists{/gist_id}","starred_url":"https://api.github.com/users/malpani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malpani/subscriptions","organizations_url":"https://api.github.com/users/malpani/orgs","repos_url":"https://api.github.com/users/malpani/repos","events_url":"https://api.github.com/users/malpani/events{/privacy}","received_events_url":"https://api.github.com/users/malpani/received_events","type":"User","site_admin":false},"created_at":"2019-03-26T21:41:06Z","updated_at":"2019-03-26T21:42:14Z","author_association":"CONTRIBUTOR","body":"How does `adaptive_replica_selection` work for frozen indices? Does it end up loading the searchers/transient memory on both primary and replica depending on who gets the request? Wondering if `primary_first` index level setting might be a good fit for search preference among frozen indices to avoid this duplication?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/478474437","html_url":"https://github.com/elastic/elasticsearch/issues/40431#issuecomment-478474437","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40431","id":478474437,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODQ3NDQzNw==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2019-04-01T07:54:15Z","updated_at":"2019-04-01T07:54:15Z","author_association":"MEMBER","body":"> Wondering if primary_first index level setting might be a good fit for search preference among frozen indices to avoid this duplication?\r\n\r\nFrozen indices are lazily loaded on a per request basis and the memory is released at the end of the request. As stated above you can control which replicas is responsible for the request with a custom search preference so I am going to close this issue. We can continue this discussion in the [forum](https://discuss.elastic.co/c/elasticsearch) if you want further questions.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/479167539","html_url":"https://github.com/elastic/elasticsearch/issues/40431#issuecomment-479167539","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/40431","id":479167539,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTE2NzUzOQ==","user":{"login":"malpani","id":368133,"node_id":"MDQ6VXNlcjM2ODEzMw==","avatar_url":"https://avatars1.githubusercontent.com/u/368133?v=4","gravatar_id":"","url":"https://api.github.com/users/malpani","html_url":"https://github.com/malpani","followers_url":"https://api.github.com/users/malpani/followers","following_url":"https://api.github.com/users/malpani/following{/other_user}","gists_url":"https://api.github.com/users/malpani/gists{/gist_id}","starred_url":"https://api.github.com/users/malpani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malpani/subscriptions","organizations_url":"https://api.github.com/users/malpani/orgs","repos_url":"https://api.github.com/users/malpani/repos","events_url":"https://api.github.com/users/malpani/events{/privacy}","received_events_url":"https://api.github.com/users/malpani/received_events","type":"User","site_admin":false},"created_at":"2019-04-02T19:44:01Z","updated_at":"2019-04-02T19:56:11Z","author_association":"CONTRIBUTOR","body":"@jimczi - While I am not able to convince you, here is the patch (against ES 6.2) I am using as it works better for my use case v/s adaptive_replica in case this direction might be of use to someone\r\n[perIndexSearchPrerenceOverridePatch.txt](https://github.com/elastic/elasticsearch/files/3035644/perIndexSearchPrerenceOverridePatch.txt)\r\n\r\nI am able to fix and override (any search dsl specified) strategies on a per index basis using \r\n`curl -H \"Content-Type: application/json\" -XPUT localhost:9200/cold_2017-12-23/_settings -d '{\"index.routing.search_preference\": \"_primary_first\"}'`\r\n","performed_via_github_app":null}]