{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/7515","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7515/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7515/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/7515/events","html_url":"https://github.com/elastic/elasticsearch/issues/7515","id":41518985,"node_id":"MDU6SXNzdWU0MTUxODk4NQ==","number":7515,"title":"Finding documents with empty string as value","user":{"login":"paulovictorv","id":2207574,"node_id":"MDQ6VXNlcjIyMDc1NzQ=","avatar_url":"https://avatars1.githubusercontent.com/u/2207574?v=4","gravatar_id":"","url":"https://api.github.com/users/paulovictorv","html_url":"https://github.com/paulovictorv","followers_url":"https://api.github.com/users/paulovictorv/followers","following_url":"https://api.github.com/users/paulovictorv/following{/other_user}","gists_url":"https://api.github.com/users/paulovictorv/gists{/gist_id}","starred_url":"https://api.github.com/users/paulovictorv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulovictorv/subscriptions","organizations_url":"https://api.github.com/users/paulovictorv/orgs","repos_url":"https://api.github.com/users/paulovictorv/repos","events_url":"https://api.github.com/users/paulovictorv/events{/privacy}","received_events_url":"https://api.github.com/users/paulovictorv/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2014-08-29T16:45:14Z","updated_at":"2020-09-25T07:56:43Z","closed_at":"2015-11-21T18:16:23Z","author_association":"NONE","active_lock_reason":null,"body":"Hello, \n\nI've been trying to find all documents that contains a field with an empty string value (`_textContent`) inside my index using the `missing` filter. But I think that this filter doesn't treat empty strings as a null value.\n\nIs this a bug, or the intended behavior for this filter? If it is like this by design, may I suggest adding an `empty` filter, if that's even possible?\n\nAs a plus, I'll post the mapping that I'm currently using, the document that contains the empty string field and the query that I'm trying to run:\n\nMapping:\n\n``` json\n{\n  \"documents\": {\n    \"mappings\": {\n      \"document\": {\n        \"properties\": {\n          \"_contratante\": {\n            \"type\": \"string\"\n          },\n          \"_dateFields\": {\n            \"type\": \"nested\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"index\": \"not_analyzed\"\n              },\n              \"value\": {\n                \"type\": \"date\",\n                \"format\": \"dateOptionalTime\"\n              }\n            }\n          },\n          \"_indexadoPor\": {\n            \"type\": \"string\"\n          },\n          \"_textContent\": {\n            \"type\": \"string\"\n          },\n          \"_textFields\": {\n            \"type\": \"nested\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"index\": \"not_analyzed\"\n              },\n              \"value\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_tipoDocumento\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nDocument:\n\n``` json\n{\n  \"_index\": \"documents\",\n  \"_type\": \"document\",\n  \"_id\": \"xxx\",\n  \"_version\": 1,\n  \"found\": true,\n  \"_source\": {\n    \"_id\": \"xxx\",\n    \"_contratante\": \"xxx\",\n    \"_tipoDocumento\": \"xxx\",\n    \"_indexadoPor\": \"xxx\",\n    \"_dateFields\": [\n      {\n        \"id\": \"538730ece4b0d13600208d7a:2\",\n        \"value\": 1404183600000\n      }\n    ],\n    \"_textFields\": [\n      {\n        \"id\": \"538730ece4b0d13600208d7a:0\",\n        \"value\": \"xxx\"\n      },\n      {\n        \"id\": \"538730ece4b0d13600208d7a:1\",\n        \"value\": \"xxx\"\n      },\n      {\n        \"id\": \"538730ece4b0d13600208d7a:3\",\n        \"value\": \"\"\n      },\n      {\n        \"id\": \"538730ece4b0d13600208d7a:4\",\n        \"value\": \"xxxx\"\n      }\n    ],\n    \"_textContent\": \"\"\n  }\n}\n```\n\nQuery:\n\n``` json\n{\n  \"query\": {\n    \"filtered\": {\n      \"filter\": {\n        \"missing\": {\n          \"field\": \"_textContent\"\n        }\n      }\n    }\n  }\n}\n```\n\nThanks a lot for the amazing tool developed here!\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}