[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/20435953","html_url":"https://github.com/elastic/elasticsearch/issues/3287#issuecomment-20435953","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3287","id":20435953,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNDM1OTUz","user":{"login":"harlanmilkove","id":1272986,"node_id":"MDQ6VXNlcjEyNzI5ODY=","avatar_url":"https://avatars0.githubusercontent.com/u/1272986?v=4","gravatar_id":"","url":"https://api.github.com/users/harlanmilkove","html_url":"https://github.com/harlanmilkove","followers_url":"https://api.github.com/users/harlanmilkove/followers","following_url":"https://api.github.com/users/harlanmilkove/following{/other_user}","gists_url":"https://api.github.com/users/harlanmilkove/gists{/gist_id}","starred_url":"https://api.github.com/users/harlanmilkove/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harlanmilkove/subscriptions","organizations_url":"https://api.github.com/users/harlanmilkove/orgs","repos_url":"https://api.github.com/users/harlanmilkove/repos","events_url":"https://api.github.com/users/harlanmilkove/events{/privacy}","received_events_url":"https://api.github.com/users/harlanmilkove/received_events","type":"User","site_admin":false},"created_at":"2013-07-03T18:33:46Z","updated_at":"2013-07-03T18:35:30Z","author_association":"NONE","body":"I think I've this experienced too. To summarize: if you limit your results to 200, the best result is not in the list. But if you expand the size of the result set to a limit of 1000 where does it show up?\n\nIn the results I've seen the document is bumped up to the top of the list. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/20436036","html_url":"https://github.com/elastic/elasticsearch/issues/3287#issuecomment-20436036","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3287","id":20436036,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNDM2MDM2","user":{"login":"benjamincohen1","id":2514639,"node_id":"MDQ6VXNlcjI1MTQ2Mzk=","avatar_url":"https://avatars2.githubusercontent.com/u/2514639?v=4","gravatar_id":"","url":"https://api.github.com/users/benjamincohen1","html_url":"https://github.com/benjamincohen1","followers_url":"https://api.github.com/users/benjamincohen1/followers","following_url":"https://api.github.com/users/benjamincohen1/following{/other_user}","gists_url":"https://api.github.com/users/benjamincohen1/gists{/gist_id}","starred_url":"https://api.github.com/users/benjamincohen1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benjamincohen1/subscriptions","organizations_url":"https://api.github.com/users/benjamincohen1/orgs","repos_url":"https://api.github.com/users/benjamincohen1/repos","events_url":"https://api.github.com/users/benjamincohen1/events{/privacy}","received_events_url":"https://api.github.com/users/benjamincohen1/received_events","type":"User","site_admin":false},"created_at":"2013-07-03T18:35:06Z","updated_at":"2013-07-03T18:35:06Z","author_association":"NONE","body":"Correct.  And in accordance with what you saw, it was the top of my list too.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/20436215","html_url":"https://github.com/elastic/elasticsearch/issues/3287#issuecomment-20436215","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3287","id":20436215,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNDM2MjE1","user":{"login":"harlanmilkove","id":1272986,"node_id":"MDQ6VXNlcjEyNzI5ODY=","avatar_url":"https://avatars0.githubusercontent.com/u/1272986?v=4","gravatar_id":"","url":"https://api.github.com/users/harlanmilkove","html_url":"https://github.com/harlanmilkove","followers_url":"https://api.github.com/users/harlanmilkove/followers","following_url":"https://api.github.com/users/harlanmilkove/following{/other_user}","gists_url":"https://api.github.com/users/harlanmilkove/gists{/gist_id}","starred_url":"https://api.github.com/users/harlanmilkove/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harlanmilkove/subscriptions","organizations_url":"https://api.github.com/users/harlanmilkove/orgs","repos_url":"https://api.github.com/users/harlanmilkove/repos","events_url":"https://api.github.com/users/harlanmilkove/events{/privacy}","received_events_url":"https://api.github.com/users/harlanmilkove/received_events","type":"User","site_admin":false},"created_at":"2013-07-03T18:37:28Z","updated_at":"2013-07-03T18:37:28Z","author_association":"NONE","body":"Ok, no clue why this isn't selecting the best thing from the entire list of possible results regardless of what the query limit is.  Obviously expanding the search result size is somewhat of a workaround based on statistics. This is definitely dirty.  It sounds like a bug to me.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/51754647","html_url":"https://github.com/elastic/elasticsearch/issues/3287#issuecomment-51754647","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3287","id":51754647,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNzU0NjQ3","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2014-08-11T08:41:52Z","updated_at":"2014-08-11T08:41:52Z","author_association":"CONTRIBUTOR","body":"> Shouldn't putting a size limit of N on the query return the best N results, not a seemingly random subset of them?\n\nCompletion of partially typed words is not the main objective of FuzzyLikeThis - ypu may want to look at the various suggester APIs to achieve your goal (see [1] and [2]).\n\nFuzzyLikeThis has a different goal in mind and it may not make sense to tweak it for your case - there are different algorithms for different use cases for the same reason there are different kinds of bike for different kinds of terrain: it's all about tuning for a particular objective.\n\nFuzzyLikeThis is tuned for the case where there are several (complete) words in your query, all of them potentially useful but not all of them are as interesting as each other, An example might be a search in a business directory for \"John Caruso and sons Inc\".  A match on the rare word \"Caruso\" would be highly valued but a match on the common \"Inc\" less so. We also want to match \"Carusso\" but a fuzzy match on \"sons\" that becomes \"sony\" is obviously bad.\nThe way we achieve this is we take a selection of the \"root\" terms (in this case probably all of them as there are only 5 words) and for each we generate a set of fuzzy-spelt variants. Each variant of the same root is scored using the same IDF (rareness) factor as the root form because we have to assume that the user knows what they are looking for. However if the root word doesn't exist we have no rareness score (e.g. likely in your \"broadw\" example) so then we score all the variants of the \"broadw\" root using an average of their IDFs. Levenshtein edit distance is always a factor applied along with IDF.  Another likely ranking factor is the length of the field in each doc if norms are enabled - Lucene will naturally favour short fields over longer ones.\nYou can use the \"explain\" api [3] to give a more detailed breakdown of the reasons for each match and that may be useful to add here if you think that the logic I outlined here is misbehaving in some way.\n\nWith these sorts of tuning issues it is often a challenge as fixing the ranking emphasis for one case can break many others. If you do chose to use the suggester APIs avoid sticking the house numbers at the front of the string as that will generate many duplicate chains of road names etc in the FST.\n\n[1] http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-suggesters.html\n[2] http://www.elasticsearch.org/blog/you-complete-me/\n[3] http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-explain.html\n","performed_via_github_app":null}]