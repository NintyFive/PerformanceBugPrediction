{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1872","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1872/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1872/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1872/events","html_url":"https://github.com/elastic/elasticsearch/issues/1872","id":4175324,"node_id":"MDU6SXNzdWU0MTc1MzI0","number":1872,"title":"Add ability to do one-way replication to hosts that won't be promoted","user":{"login":"avar","id":45301,"node_id":"MDQ6VXNlcjQ1MzAx","avatar_url":"https://avatars3.githubusercontent.com/u/45301?v=4","gravatar_id":"","url":"https://api.github.com/users/avar","html_url":"https://github.com/avar","followers_url":"https://api.github.com/users/avar/followers","following_url":"https://api.github.com/users/avar/following{/other_user}","gists_url":"https://api.github.com/users/avar/gists{/gist_id}","starred_url":"https://api.github.com/users/avar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avar/subscriptions","organizations_url":"https://api.github.com/users/avar/orgs","repos_url":"https://api.github.com/users/avar/repos","events_url":"https://api.github.com/users/avar/events{/privacy}","received_events_url":"https://api.github.com/users/avar/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2012-04-18T16:12:14Z","updated_at":"2014-08-01T16:41:23Z","closed_at":"2014-08-01T16:41:23Z","author_association":"NONE","active_lock_reason":null,"body":"If you had two datacenters for say log data and configured the shard allocation such that the logging data from datacenter A would never migrate to datacenter B you'd be completely safe when it comes to split-brains, since there'll never be a question of which group owns the data.\n\nThis'll allow you to do searches across datacenters, but all the searches will have to span two datacenters to get results, which depending on your query load might be a problem.\n\nYou could alleviate that by replicating shards that you only ever insert to in datacenter A from datacenter A to B,  but you now have the problem that if you have a split brain you'll have those replicas in datacenter B elect themselves as primary shards.\n\nThis could be fixed by allowing you to not only replicate data, but also declare that that data will _never_ become primary on nodes with some given attributes.\n\nThis allows you to emulate traditional RDBMS replication where the data has one canonical source, and a cutoff with the primary source won't result in the local receiver of the replicated data electing itself as the master. Then when your connection re-establishes you'll happily sync updates over.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}