{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/24019","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24019/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24019/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24019/events","html_url":"https://github.com/elastic/elasticsearch/issues/24019","id":220650047,"node_id":"MDU6SXNzdWUyMjA2NTAwNDc=","number":24019,"title":"Search against index or index/type yields different results with Index containing Single Type","user":{"login":"agastya71","id":1957442,"node_id":"MDQ6VXNlcjE5NTc0NDI=","avatar_url":"https://avatars2.githubusercontent.com/u/1957442?v=4","gravatar_id":"","url":"https://api.github.com/users/agastya71","html_url":"https://github.com/agastya71","followers_url":"https://api.github.com/users/agastya71/followers","following_url":"https://api.github.com/users/agastya71/following{/other_user}","gists_url":"https://api.github.com/users/agastya71/gists{/gist_id}","starred_url":"https://api.github.com/users/agastya71/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/agastya71/subscriptions","organizations_url":"https://api.github.com/users/agastya71/orgs","repos_url":"https://api.github.com/users/agastya71/repos","events_url":"https://api.github.com/users/agastya71/events{/privacy}","received_events_url":"https://api.github.com/users/agastya71/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-04-10T13:47:38Z","updated_at":"2017-04-10T14:28:59Z","closed_at":"2017-04-10T14:28:59Z","author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\n**Elasticsearch version**: 2.3.3\r\n\r\n**Plugins installed**: [kopf]\r\n\r\n**JVM version**:1.8.0_45\r\n\r\n**OS version**: Oracle Linux 7.0\r\n\r\n**Description of the problem including expected versus actual behavior**: Document's score is not calculated consistently and causes inconsistent results in Version 2.3.3, this behavior is not observed in ES 2.1.1.  This problem is exposed in a couple of different ways.  Executing a GET on the index/_search endpoint returns inconsistent results. Its cyclical (depending on the data),  every nth try might give the right result.   Another behavior that is noticed is, searching against an Index with a Single Type   with end point index/_search yields different results that with end point  index/type/_search. In theory this should not happen on indices with a single type. \r\n\r\n**Steps to reproduce**:  Cluster configuration : 3 ES nodes performing all 3 roles of master, data and client nodes).  Index with a Single shard  with replication of 2. Index content with a mapping containing a Multi-field definition, one of the fields in the multi-field having a Custom edge ngram analyzer, one with  field not analyzed and one with the default analyzer (field is of type text/String)\r\n 1. in an ES 2.3.3 instance, on a static index with Millions of Documents, execute  GET index/_search notice results if it changes with each subsequent execution. Also notice if the results cycle.\r\n 2. in the same ES 2.3.3 instance, execute a search  against end points index/_search and index/type/_search  Notice if there is a difference. \r\n 3.\r\n\r\n**Provide logs (if relevant)**:  link to forum post on same issue : \r\n\r\n1. https://discuss.elastic.co/t/difference-between-index-type--search-and-index--search-results/81314  \r\n2. https://discuss.elastic.co/t/multi-match-query-with-filter-condition-differences-between-es2-1-1-and-es-2-3-3/80732/4","closed_by":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"performed_via_github_app":null}