[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/441562437","html_url":"https://github.com/elastic/elasticsearch/issues/35888#issuecomment-441562437","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35888","id":441562437,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MTU2MjQzNw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-11-26T08:53:30Z","updated_at":"2018-11-26T08:53:30Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/441818346","html_url":"https://github.com/elastic/elasticsearch/issues/35888#issuecomment-441818346","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35888","id":441818346,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MTgxODM0Ng==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2018-11-26T22:09:18Z","updated_at":"2018-11-26T22:09:18Z","author_association":"CONTRIBUTOR","body":"I was able to replicate this difference in behavior between `6.4.2` and `6.5.1`. However the root cause of the issue isn't due to the circuit breaker (as it appears), but rather it is change to the validity of a boolean for a return value. \r\n\r\nA simpler example:\r\n\r\n```\r\nPOST test/_doc/1/_update\r\n{\r\n    \"script\" : {\r\n        \"source\": \"if('a' == 'a'){ return true}\",\r\n        \"lang\": \"painless\"\r\n    },\r\n    \"upsert\" : {\r\n        \"counter\" : 1\r\n    }\r\n}\r\n```\r\n\r\nOn the second POST (when the script executes) results in:\r\n\r\n```\r\n{\r\n  \"error\": {\r\n    \"root_cause\": [\r\n      {\r\n        \"type\": \"remote_transport_exception\",\r\n        \"reason\": \"[QPilpgj][127.0.0.1:9300][indices:data/write/update[s]]\"\r\n      }\r\n    ],\r\n    \"type\": \"illegal_argument_exception\",\r\n    \"reason\": \"failed to execute script\",\r\n    \"caused_by\": {\r\n      \"type\": \"script_exception\",\r\n      \"reason\": \"compile error\",\r\n      \"script_stack\": [\r\n        \"if('a' == 'a'){ return true}\",\r\n        \"                       ^---- HERE\"\r\n      ],\r\n      \"script\": \"if('a' == 'a'){ return true}\",\r\n      \"lang\": \"painless\",\r\n      \"caused_by\": {\r\n        \"type\": \"class_cast_exception\",\r\n        \"reason\": \"Cannot cast from [boolean] to [void].\"\r\n      }\r\n    }\r\n  },\r\n  \"status\": 400\r\n}\r\n```\r\n\r\nThe error does not occur on `6.4.2`. This failure is the root cause of \"Too many dynamic script compilations\" ... when bulk requests are processed it attempts to compile/fails, compile/fail, repeat.  There maybe a secondary issue here such that we shouldn't let bulk requests with script failures manifest like this. The real issue here is the change in no longer allowing return true.\r\n\r\nHowever, returning 'true' in this context is arguably incorrect and you can work around this issue with something like this (not tested):\r\n\r\n```\r\nif(ctx._source.timestamp.contains(params.event.get(\"timestamp\")) == false) {ctx._source.timestamp.add(params.event.get(\"timestamp\")}\r\n```\r\n\r\n\r\nFWIW, I can also reproduce with (no errors on `6.4.2`, but errors on `6.5.1`:\r\n```\r\nPOST test/_doc/1/_update\r\n{\r\n    \"script\" : {\r\n        \"source\": \"return true\",\r\n        \"lang\": \"painless\"\r\n    },\r\n    \"upsert\" : {\r\n        \"counter\" : 1\r\n    }\r\n}\r\n```\r\n\r\nPinging @elastic/infra for additional eyes on the change of behavior for Painless return values (in the update context)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/441869426","html_url":"https://github.com/elastic/elasticsearch/issues/35888#issuecomment-441869426","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35888","id":441869426,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MTg2OTQyNg==","user":{"login":"askkemp","id":24845188,"node_id":"MDQ6VXNlcjI0ODQ1MTg4","avatar_url":"https://avatars1.githubusercontent.com/u/24845188?v=4","gravatar_id":"","url":"https://api.github.com/users/askkemp","html_url":"https://github.com/askkemp","followers_url":"https://api.github.com/users/askkemp/followers","following_url":"https://api.github.com/users/askkemp/following{/other_user}","gists_url":"https://api.github.com/users/askkemp/gists{/gist_id}","starred_url":"https://api.github.com/users/askkemp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/askkemp/subscriptions","organizations_url":"https://api.github.com/users/askkemp/orgs","repos_url":"https://api.github.com/users/askkemp/repos","events_url":"https://api.github.com/users/askkemp/events{/privacy}","received_events_url":"https://api.github.com/users/askkemp/received_events","type":"User","site_admin":false},"created_at":"2018-11-27T02:00:04Z","updated_at":"2018-11-28T10:46:17Z","author_association":"NONE","body":"Thank you for clarification.\r\n\r\nThe reason I did \"return true\" because it was the only way I could figure out to not compile a unique script with each request. This script will be run 1000s of times per second for days at a time. And in my testing, I believe I was experiencing a memory leak in JVM because I'd run out of memory. I ran the \"return true\" method against 200 million lines without issue.\r\n\r\nAnyhow... would this be a proper work around?\r\n\r\n` script =>     'if(ctx._source.timestamp.contains(params.event.get(\"timestamp\"))) ctx.op = \"noop\"; else (ctx._source.timestamp.add(params.event.get(\"timestamp\")))'`\r\n\r\nBecause it seems that the below provided workaround creates a dynamic compile each time it is ran:\r\n\r\n`script => 'if(ctx._source.timestamp.contains(params.event.get(\"timestamp\") == false) {ctx._source.timestamp.add(params.event.get(\"timestamp\"))}'`\r\n\r\nI'm glad to ask the work around question under Discuss if it is not relevant to this issue.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/443536473","html_url":"https://github.com/elastic/elasticsearch/issues/35888#issuecomment-443536473","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35888","id":443536473,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0MzUzNjQ3Mw==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2018-12-02T19:52:07Z","updated_at":"2018-12-02T19:52:07Z","author_association":"CONTRIBUTOR","body":"@askkemp - the earlier (not tested) example doesn't compile and results in the same compile/fail issue as described above. I went back to your original example and tested the following to work:\r\n```\r\n script =>  \"if(ctx._source.timestamp.contains(params.event.get('timestamp')[0]) == false) {ctx._source.timestamp.add(params.event.get('timestamp')[0])}\"\r\n```\r\n> I'm glad to ask the work around question under Discuss if it is not relevant to this issue.\r\n\r\nYes, please move to Discuss the above does not work around the issue for you so we can keep this issue focused on the change of behavior w/r/t Painless return values. \r\n\r\nAlso, I will update the description of the issue. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/446612670","html_url":"https://github.com/elastic/elasticsearch/issues/35888#issuecomment-446612670","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35888","id":446612670,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NjYxMjY3MA==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-12-12T14:46:53Z","updated_at":"2018-12-12T14:46:53Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/446640139","html_url":"https://github.com/elastic/elasticsearch/issues/35888#issuecomment-446640139","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35888","id":446640139,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NjY0MDEzOQ==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2018-12-12T16:00:40Z","updated_at":"2018-12-12T16:03:13Z","author_association":"CONTRIBUTOR","body":"Update should never return a value as the value would not be used for anything.  Modifying the update context to have a void return type as part of the signature is the best practice for this behavior.  What needs to be looked into is why this script\r\n\r\n```script => 'if(ctx._source.timestamp.contains(params.event.get(\"timestamp\") == false) {ctx._source.timestamp.add(params.event.get(\"timestamp\"))}'```\r\n\r\nwouldn't be appropriately cached because this is the correct way to do this.\r\n\r\nAnother issue is also why we keep retrying to compile the script after failing to compile.  If a script fails the update needs to stop and return an error immediately.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/446698293","html_url":"https://github.com/elastic/elasticsearch/issues/35888#issuecomment-446698293","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35888","id":446698293,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NjY5ODI5Mw==","user":{"login":"jakelandis","id":976291,"node_id":"MDQ6VXNlcjk3NjI5MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976291?v=4","gravatar_id":"","url":"https://api.github.com/users/jakelandis","html_url":"https://github.com/jakelandis","followers_url":"https://api.github.com/users/jakelandis/followers","following_url":"https://api.github.com/users/jakelandis/following{/other_user}","gists_url":"https://api.github.com/users/jakelandis/gists{/gist_id}","starred_url":"https://api.github.com/users/jakelandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakelandis/subscriptions","organizations_url":"https://api.github.com/users/jakelandis/orgs","repos_url":"https://api.github.com/users/jakelandis/repos","events_url":"https://api.github.com/users/jakelandis/events{/privacy}","received_events_url":"https://api.github.com/users/jakelandis/received_events","type":"User","site_admin":false},"created_at":"2018-12-12T18:45:26Z","updated_at":"2018-12-12T18:45:26Z","author_association":"CONTRIBUTOR","body":"> Update should never return a value as the value would not be used for anything. \r\n\r\n++ I think this is the crux of the issue and the reason for the discuss label.\r\n\r\n>  What needs to be looked into is why this script ...\r\n\r\nThere is a typo in that referenced script, I provided a typo free version on [this comment](https://github.com/elastic/elasticsearch/issues/35888#issuecomment-443536473).\r\n\r\n> Another issue is also why we keep retrying to compile the script after failing to compile. If a script fails the update needs to stop and return an error immediately.\r\n\r\nFor a single update, it does indeed return immediately. For bulk updates, it processes the bulk requests and can trigger circuit breaker via one bulk request if there are enough updates with failed compilations in that bulk. \r\n\r\nThis issue can probably be closed. \r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/452733245","html_url":"https://github.com/elastic/elasticsearch/issues/35888#issuecomment-452733245","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35888","id":452733245,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjczMzI0NQ==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2019-01-09T15:18:50Z","updated_at":"2019-01-09T15:18:50Z","author_association":"CONTRIBUTOR","body":"Closing this issue as using return here does not make sense for the reasons listed in prior comments.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/460819245","html_url":"https://github.com/elastic/elasticsearch/issues/35888#issuecomment-460819245","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35888","id":460819245,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgxOTI0NQ==","user":{"login":"villasv","id":6609289,"node_id":"MDQ6VXNlcjY2MDkyODk=","avatar_url":"https://avatars1.githubusercontent.com/u/6609289?v=4","gravatar_id":"","url":"https://api.github.com/users/villasv","html_url":"https://github.com/villasv","followers_url":"https://api.github.com/users/villasv/followers","following_url":"https://api.github.com/users/villasv/following{/other_user}","gists_url":"https://api.github.com/users/villasv/gists{/gist_id}","starred_url":"https://api.github.com/users/villasv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/villasv/subscriptions","organizations_url":"https://api.github.com/users/villasv/orgs","repos_url":"https://api.github.com/users/villasv/repos","events_url":"https://api.github.com/users/villasv/events{/privacy}","received_events_url":"https://api.github.com/users/villasv/received_events","type":"User","site_admin":false},"created_at":"2019-02-05T21:55:34Z","updated_at":"2019-02-05T21:55:34Z","author_association":"NONE","body":"I have a question regarding returning from update context. If I want to short-circuit the script with a condition... why can't I do `if(condition) return;`? It fails to compile.\r\n\r\nIf I try anything else, I get the expected `Cannot cast ... to a primitive type [void].`","performed_via_github_app":null}]