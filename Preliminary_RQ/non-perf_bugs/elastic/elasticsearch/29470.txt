{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/29470","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29470/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29470/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29470/events","html_url":"https://github.com/elastic/elasticsearch/issues/29470","id":313283810,"node_id":"MDU6SXNzdWUzMTMyODM4MTA=","number":29470,"title":"Restricted cardinality","user":{"login":"alepuccetti","id":6577391,"node_id":"MDQ6VXNlcjY1NzczOTE=","avatar_url":"https://avatars1.githubusercontent.com/u/6577391?v=4","gravatar_id":"","url":"https://api.github.com/users/alepuccetti","html_url":"https://github.com/alepuccetti","followers_url":"https://api.github.com/users/alepuccetti/followers","following_url":"https://api.github.com/users/alepuccetti/following{/other_user}","gists_url":"https://api.github.com/users/alepuccetti/gists{/gist_id}","starred_url":"https://api.github.com/users/alepuccetti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alepuccetti/subscriptions","organizations_url":"https://api.github.com/users/alepuccetti/orgs","repos_url":"https://api.github.com/users/alepuccetti/repos","events_url":"https://api.github.com/users/alepuccetti/events{/privacy}","received_events_url":"https://api.github.com/users/alepuccetti/received_events","type":"User","site_admin":false},"labels":[{"id":141141324,"node_id":"MDU6TGFiZWwxNDExNDEzMjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Aggregations","name":":Analytics/Aggregations","color":"0e8a16","default":false,"description":"Aggregations"},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2018-04-11T11:30:09Z","updated_at":"2018-04-27T07:35:01Z","closed_at":"2018-04-26T20:51:34Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the feature**:\r\n\r\nI am trying to achieve something that I would define as restricted cardinality. I would like to compute the cardinality of a field but restricted to a domain provided as input.\r\n\r\nProposal:\r\n\r\n```\r\n{\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"restricted_cardinality\": {\r\n      \"cardinality\": {\r\n        \"field\": \"target_ids\",\r\n        \"include\": [\"000\", \"111\", \"222\"]\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nHowever, it would be nice to have a parameter \"include\" in the cardinality to tell to Elasticsearch that you are only interested in those values. Bonus points for having back as result the percentage:\r\n`p = restricted_cardinality / include.size`.\r\n\r\nBenefits:\r\n- New more powerful functionality. when you filter for some values on an array field (in the example `target_ids` is an array) and compute the cardinality of the field you get back the total cardinality instead the one applied to the filtered values.\r\n- Less memory usage because you can allocate a smaller size hashmap do to the fact that you know the maximum number of elements you want to consider.\r\n- Possible performance improvement once you reached the cardinality equal to the size of your include list than you can early terminate the computation.\r\n\r\n\r\n## Workaround\r\nI found a sort of work around by doing using the include in the terms aggregation with the include option:\r\n\r\n```\r\n{\r\n  \"size\": 0, \r\n  \"query\": {\r\n    \"bool\": {\r\n      \"filter\": {\r\n        \"terms\": {\r\n          \"target_ids\": [\r\n            \"000\",\r\n            \"111\",\r\n            \"222\"\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"aggs\": {\r\n      \"metric\": {\r\n        \"terms\": {\r\n          \"field\": \"target_ids\",\r\n          \"include\": [\"000\", \"111\", \"222\"], \r\n          \"size\": 3\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nOf course, this does not give you back the cardinality but it can be computed easily by counting the keys in the buckets","closed_by":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"performed_via_github_app":null}