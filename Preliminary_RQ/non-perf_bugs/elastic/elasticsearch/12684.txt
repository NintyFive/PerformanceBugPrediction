{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/12684","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12684/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12684/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/12684/events","html_url":"https://github.com/elastic/elasticsearch/issues/12684","id":99342454,"node_id":"MDU6SXNzdWU5OTM0MjQ1NA==","number":12684,"title":"Large index size cause high Java heap occupation?","user":{"login":"kenny-ye","id":13653428,"node_id":"MDQ6VXNlcjEzNjUzNDI4","avatar_url":"https://avatars0.githubusercontent.com/u/13653428?v=4","gravatar_id":"","url":"https://api.github.com/users/kenny-ye","html_url":"https://github.com/kenny-ye","followers_url":"https://api.github.com/users/kenny-ye/followers","following_url":"https://api.github.com/users/kenny-ye/following{/other_user}","gists_url":"https://api.github.com/users/kenny-ye/gists{/gist_id}","starred_url":"https://api.github.com/users/kenny-ye/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenny-ye/subscriptions","organizations_url":"https://api.github.com/users/kenny-ye/orgs","repos_url":"https://api.github.com/users/kenny-ye/repos","events_url":"https://api.github.com/users/kenny-ye/events{/privacy}","received_events_url":"https://api.github.com/users/kenny-ye/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-08-06T02:54:39Z","updated_at":"2015-08-06T02:55:34Z","closed_at":"2015-08-06T02:55:34Z","author_association":"NONE","active_lock_reason":null,"body":"Hi all,\n\nWe use Elasticsearch 1.6.0 and run two data nodes in two servers with 128G RAM and 24 Core CPU.  ES java heap size is set to  30G and the index is configured to 5 shards with 1 replica.\nUnlike common log files, our document is a bit complicated and average size of each document is about 500K. After bulk indexing around 12 million documents, the index size of each node in disk is about 5TB. Then ES servers become unstable. The slave sometimes  loses connection with the primary. One more problem is even after old GC, the java heap occupation is still around 20G.  Monitoring with Marval, I found the data of \"Index Statistics->memory->LUCENE MEMORY\" keeps on increasing. It is now about 30G. Does it related with Java heap occupation? What is the LUCENE MEMORY for? And anybody can suggest how to mitigate the memory issue?\n","closed_by":{"login":"markwalkom","id":3184718,"node_id":"MDQ6VXNlcjMxODQ3MTg=","avatar_url":"https://avatars0.githubusercontent.com/u/3184718?v=4","gravatar_id":"","url":"https://api.github.com/users/markwalkom","html_url":"https://github.com/markwalkom","followers_url":"https://api.github.com/users/markwalkom/followers","following_url":"https://api.github.com/users/markwalkom/following{/other_user}","gists_url":"https://api.github.com/users/markwalkom/gists{/gist_id}","starred_url":"https://api.github.com/users/markwalkom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markwalkom/subscriptions","organizations_url":"https://api.github.com/users/markwalkom/orgs","repos_url":"https://api.github.com/users/markwalkom/repos","events_url":"https://api.github.com/users/markwalkom/events{/privacy}","received_events_url":"https://api.github.com/users/markwalkom/received_events","type":"User","site_admin":false},"performed_via_github_app":null}