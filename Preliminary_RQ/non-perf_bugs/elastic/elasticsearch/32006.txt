{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/32006","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32006/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32006/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/32006/events","html_url":"https://github.com/elastic/elasticsearch/issues/32006","id":340638440,"node_id":"MDU6SXNzdWUzNDA2Mzg0NDA=","number":32006,"title":"A new cluster coordination layer","user":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"labels":[{"id":881394071,"node_id":"MDU6TGFiZWw4ODEzOTQwNzE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Cluster%20Coordination","name":":Distributed/Cluster Coordination","color":"0e8a16","default":false,"description":"Cluster formation and cluster state publication, including cluster membership and fault detection."},{"id":23172,"node_id":"MDU6TGFiZWwyMzE3Mg==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Efeature","name":">feature","color":"006b75","default":false,"description":null},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null},{"id":111053151,"node_id":"MDU6TGFiZWwxMTEwNTMxNTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/resiliency","name":"resiliency","color":"009800","default":false,"description":null},{"id":484855464,"node_id":"MDU6TGFiZWw0ODQ4NTU0NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v7.0.0","name":"v7.0.0","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"andrershov","id":600624,"node_id":"MDQ6VXNlcjYwMDYyNA==","avatar_url":"https://avatars1.githubusercontent.com/u/600624?v=4","gravatar_id":"","url":"https://api.github.com/users/andrershov","html_url":"https://github.com/andrershov","followers_url":"https://api.github.com/users/andrershov/followers","following_url":"https://api.github.com/users/andrershov/following{/other_user}","gists_url":"https://api.github.com/users/andrershov/gists{/gist_id}","starred_url":"https://api.github.com/users/andrershov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrershov/subscriptions","organizations_url":"https://api.github.com/users/andrershov/orgs","repos_url":"https://api.github.com/users/andrershov/repos","events_url":"https://api.github.com/users/andrershov/events{/privacy}","received_events_url":"https://api.github.com/users/andrershov/received_events","type":"User","site_admin":false},"assignees":[{"login":"andrershov","id":600624,"node_id":"MDQ6VXNlcjYwMDYyNA==","avatar_url":"https://avatars1.githubusercontent.com/u/600624?v=4","gravatar_id":"","url":"https://api.github.com/users/andrershov","html_url":"https://github.com/andrershov","followers_url":"https://api.github.com/users/andrershov/followers","following_url":"https://api.github.com/users/andrershov/following{/other_user}","gists_url":"https://api.github.com/users/andrershov/gists{/gist_id}","starred_url":"https://api.github.com/users/andrershov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrershov/subscriptions","organizations_url":"https://api.github.com/users/andrershov/orgs","repos_url":"https://api.github.com/users/andrershov/repos","events_url":"https://api.github.com/users/andrershov/events{/privacy}","received_events_url":"https://api.github.com/users/andrershov/received_events","type":"User","site_admin":false},{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2018-07-12T13:29:33Z","updated_at":"2019-04-24T14:30:51Z","closed_at":"2019-04-24T14:30:50Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The cluster state contains important metadata about the cluster, including what the mappings look like, what settings the indices have, which shards are allocated to which nodes, etc. Inconsistencies in the cluster state can have the most horrid consequences including inconsistent search results and data loss, and the job of the cluster state coordination subsystem is to prevent any such inconsistencies. Ideally this subsystem should also be easy to configure correctly and it should perform well in a variety of situations.\r\n\r\nThe goal of this project is to rebuild the [cluster state coordination subsystem](https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery-zen.html), making it more reliable, performant and user-friendly. Better reliability will be achieved by basing the core algorithm on [strong theoretical underpinnings](https://github.com/elastic/elasticsearch-formal-models/blob/master/ZenWithTerms/tla/ZenWithTerms.tla) and extensive testing. Misconfiguration of the `minimum_master_nodes` setting, one of the most common causes for cluster state inconsistencies, will be addressed by having this property fully managed by the system itself.\r\n\r\nWe've built a prototype to validate the approach and, based on our experience with this, present the following development roadmap for this new cluster coordination and consensus layer, targeting ES 7.0:\r\n\r\n- [x] core algorithm: Adds term and voting configuration to cluster state (#32100) and directly implements the transition rules from the [spec](https://github.com/elastic/elasticsearch-formal-models/blob/master/ZenWithTerms/tla/ZenWithTerms.tla) (#32171)\r\n- [x] node discovery: builds list of peers based on UnicastHostProviders, establishes permanent connections and identifies active master nodes (#32246, #32642, #32643, #32939, #33012, #36603)\r\n- [x] cluster state publication: Pipeline to publish a single cluster state to the other nodes in the cluster (#32584)\r\n- [x] deterministic / unit-testable MasterService (& async Discovery.publish method): increases testability of MasterService and the discovery layer (#32493)\r\n- [x] election scheduling (#32846) and prevoting (#32847), avoiding duelling elections\r\n- [x] leader election & lifecycle modes (Candidate, Leader, Follower): introduces the basic lifecycle states that a node can go through (#33013, #33668)\r\n- [x] node joining (voting and non-voting join), adding joining node to cluster state (#33013)\r\n- [x] leader & follower failure detector (#33024, #33917, #34049, #34147)\r\n- [x] deterministic testing of cluster formation (#33668, #33713, #33991, #34002, #34039, #34181, #34241)\r\n- [x] term bumping, ensuring all followers have voted for the leader (#34335, #34346)\r\n- [x] node leaving cluster on disconnect or failure (#34503)\r\n- [x] auto-reconfiguration rules: provides the basis for the cluster to stay highly available by shifting votes from unavailable to available nodes. (#33924, #34592, #35217)\r\n- [x] transport layer: transport actions & mock transport for unit testing (#33713)\r\n- [x] storage layer: diff-based storage for the cluster state and current term (#33958)\r\n- [x] cluster state application (& acking): Apply a committed cluster state on each node and acknowledge that it has been applied (#34257, #34315)\r\n- [x] cluster bootstrap method to inject an initial state + configuration (#34345, #34961, #35847)\r\n- [x] voting configuration exclusions API, which allows to safely scale down a cluster from 2 nodes to 1 (#35446, #36007, #36226)\r\n- [x] auto-bootstrapping and auto-scaling in integration tests based on bootstrap / voting configuration exclusions API (#34365, #35446, #35488, #35678, #35724)\r\n- [x] diff-based cluster state publishing (#35290, #35684)\r\n- [x] lag detection: remove nodes from cluster when they fall too far behind the master (#35685)\r\n- [x] state recovery / recover_after* settings (#36013)\r\n- [x] support for (rolling) upgrades from 6.x (#35443, #35737)\r\n- [x] best-effort auto-bootstrapping on unconfigured discovery to provide good OOTB experience #36215\r\n- [x] correctly respect the `no_master_block` setting (#36478)\r\n- [x] Introduce deterministic task queue #32197\r\n- [x] Randomized testing of CoordinationState #32242\r\n- [x] Fix JoinTaskExecutor identity issue #32911\r\n- [x] Fix node logging issue #33929\r\n- [x] Output voting tombstones in XContent representation of cluster state (#35832)\r\n- [x] Add `zen2` discovery type (#36298)\r\n- [x] integration with master-ineligible nodes (#35996, #36247)\r\n- [x] Full cluster restart upgrade, initial election does not use proper CS version (-> use metadata version instead) (#37122)\r\n- [x] Add restarts to CoordinatorTests (#37296)\r\n- [x] node join validation (#37203)\r\n- [x] Migrate Zen2 unit tests from InMemoryPersistedState to GatewayMetaState (#36897)\r\n- [x] Relax bootstrapping to work on discovery of a quorum of the nodes, rather than on all of them. Use a placeholder ID for the unknown nodes. (#37463)\r\n- [x] unsafe recover API / command line tool: To be used when a quorum of master-eligible nodes has been permanently lost (#37696, #37979, #37812)\r\n- [x] handling dangling indices and nodes that were previously part of another cluster (#37775)\r\n- [x] Only have node as master that have active vote (#37712, #37802)\r\n- [x] Additional bootstrapping methods? Check whether we have a good story for all typical deployment systems (docker, kubernetes, ...)\r\n- [x] Security model (voting exclusions API associated with [`manage` cluster privilege](https://www.elastic.co/guide/en/elastic-stack-overview/current/security-privileges.html))\r\n- [x] Remove the need for `minimum_master_nodes` in a rolling upgrade, instead using the `minimum_master_nodes` from the previous master for bootstrapping. (#37701)\r\n- [x] Bubble exceptions up in ClusterApplierService (#37729)\r\n- [x] Prioritize publishing cluster state to master-eligible nodes (#37673)\r\n\r\nAfter 7.0 FF:\r\n- [x] Deprecate any Zen1-specific settings and rename any others that mention `zen` but which are still in use. (#38289,#38333,#38350)\r\n- [x] Make `discovery.type` non-configurable/internal-only / move Zen1 to tests only (#39466)\r\n- [x] Scaling tests (e.g. election clashes when having large cluster states)\r\n- [x] Do not close bad indices on state recovery (#39500)\r\n- [x] Add stats (e.g. expose stuff like node term, or discovery information while the node has troubles forming / joining a cluster) (#35993)\r\n- [x] Contemplate timeouts, retries, etc. and consider improvements to default values (#38298)\r\n- [x] Check logged messages are useful and at the appropriate levels (#39756, #39950).\r\n- [x] Docs 📜  (#34714, #36959, #36954, #36942, #36909) also docs for full-cluster and rolling upgrades\r\n\r\nPost 7.0:\r\n- [ ] Smoother master failovers by not exposing those to the ClusterApplierService, i.e., delay putting up a NO_MASTER_BLOCK.\r\n- [ ] Abdicate on leader shutdown (appoint new leader)\r\n- [ ] Add \"has_voting_exclusions\" flag to cluster health output (#38568)\r\n- [ ] Enqueueing cluster state updates to behave as well as possible in an overloaded cluster.\r\n- [ ] Verify that a master which cannot write its cluster state stands down (or maybe actively abdicates)\r\n- [ ] Deal appropriately with duplicate nodes (see e.g. #32904)\r\n- [ ] High-level rest client integration for new APIs\r\n- [ ] Avoid bootstrapping if any discovered peer has a nonzero term\r\n- [ ] Work with support to enhance cluster diagnostics analysis tool.\r\n","closed_by":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"performed_via_github_app":null}