{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/49773","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49773/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49773/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/49773/events","html_url":"https://github.com/elastic/elasticsearch/issues/49773","id":531306495,"node_id":"MDU6SXNzdWU1MzEzMDY0OTU=","number":49773,"title":"Extract common/reusable components from SQL for EQL","user":{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},"labels":[{"id":1690690117,"node_id":"MDU6TGFiZWwxNjkwNjkwMTE3","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Query%20Languages/EQL","name":":Query Languages/EQL","color":"0e8a16","default":false,"description":"EQL querying"},{"id":912794284,"node_id":"MDU6TGFiZWw5MTI3OTQyODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Query%20Languages/SQL","name":":Query Languages/SQL","color":"0e8a16","default":false,"description":"SQL querying"},{"id":158399402,"node_id":"MDU6TGFiZWwxNTgzOTk0MDI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Meta","name":"Meta","color":"e11d21","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},"assignees":[{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2019-12-02T17:10:37Z","updated_at":"2020-02-27T17:42:43Z","closed_at":"2020-01-30T09:46:52Z","author_association":"MEMBER","active_lock_reason":null,"body":"A meta issue for identifying and extracting the reusable parts from SQL for EQL.\r\nThe new package (`org.elasticsearch.xpack.ql) will be a separate plugin that can be reused \r\nby EQL and SQL.\r\n\r\nThe issue for EQL support is https://github.com/elastic/elasticsearch/issues/49581\r\n\r\nThe steps below are broken per concept however in practice, due to dependencies, some\r\nsteps might be tied together.\r\n\r\n## Parsing and AST\r\n\r\n#### Tree package\r\n\r\n`Node`, `Source` & co which form the foundation of all types of ASTs. Similar the `rule` package can be shared.\r\n\r\n#### Utility Parsing classes\r\n\r\n`sql.parser` and `sql.utils` for handling identifier and stream manipulation inside ANTLR\r\n\r\n#### Backing exception hierarchy\r\n\r\nThe query package has a handful of exceptions which are used for parsing, analysis and verification.\r\nDue to their specialized message (\"error occurred at X\") it's useful to share them.\r\n\r\n#### Data types\r\n\r\n`sql.type` contains mapping for most ES types. \r\nSQL time specific types, such as Intervals and the utilities around precisions will remain in SQL.\r\nThis means likely DataType will transition from an `enum` into an `interface`.\r\n\r\n#### Query plan / Logical Plan\r\n\r\nThe Logical AST and common logical plans such as `Filter`, `EsRelation`, `OrderBy` are common as are \r\nthe infrastructure classes `LeafPlan` and `Unresolved**`.\r\nSQL specific plans, such as `Pivot` and `With` will remain inside SQL.\r\n\r\n#### Expression tree\r\n\r\nThe `sql.expression` package is for the most part reusable as things are quite similar.\r\nAt first stage only the core expressions will be moved with a minimal set of functions, mainly around math.\r\nSame goes for predicates which would be restricted to arithmetic and comparison operators.\r\nWhile the expectation is in time more functions could be shared (string, datetime, etc...) that's outside the initial scope.\r\n\r\n### QueryDSL\r\n\r\nThe `expression` tied to the `querydsl` package which performs logical translation of the query. As this is specific to ES, I would expect most of it to be shareable, regardless of the xQL.\r\n \r\n\r\n## Rule, Analysis and Verification\r\n\r\nThis set of modules takes care of executing rules to identify patterns either for doing resolution or verification of created trees.\r\n\r\n#### Rules\r\n\r\nThe `rule` package is fairly small and contained.\r\n\r\n#### Extract Analyzer, Verifier and Optimizer rules\r\n\r\nExtract the rules that are common into their own package. EQL and SQL could then import said rules (likely in the same declaration order) and add on top the ones specific in their own `Analyzer` or `Verifier`.\r\nCurrently it seems the reuse is around 60-70%, the difference being in the language differences.\r\nAt first glance, the `Optimizer` seems to have the highest reusability factor as it works mainly on expressions.\r\n\r\n#### QueryFolder & QueryTranslator\r\n\r\nThese two classes wrap the query generation by creating the expression and then folding the logical nodes onto each other. They are connected to each other but in the end they are still based on modular rules.\r\n\r\nThis would be the last step necessary to share query generation.\r\n\r\n\r\n## Implementation details\r\n\r\nTo avoid friction in SQL development, the plan is to:\r\n\r\n- [x] notify the SQL team about upcoming development\r\n- [x] merge any major PRs that affect code (such as https://github.com/elastic/elasticsearch/pull/49693)\r\n- [x] create the `ql` branch and mark it as a shared project for SQL.\r\n- [x] move the basic infrastructure such as exception, parsing utilities, node and rules. For validation, move the tests as well. \r\n- [x] Push a PR and once that passes and the SQL team confirms, push it into master.\r\n- [x] keep iterating through each item, create appropriate PR then repeat.\r\n\r\nAs a significant chunk of classes from SQL will be moved, it's worth merging the changes back and have the SQL team ack them instead of developing separately and then doing a big merge.\r\nThe upside is that any unforeseen issues can be handled by the whole SQL team instead of just one person.\r\n\r\n ","closed_by":{"login":"costin","id":76245,"node_id":"MDQ6VXNlcjc2MjQ1","avatar_url":"https://avatars3.githubusercontent.com/u/76245?v=4","gravatar_id":"","url":"https://api.github.com/users/costin","html_url":"https://github.com/costin","followers_url":"https://api.github.com/users/costin/followers","following_url":"https://api.github.com/users/costin/following{/other_user}","gists_url":"https://api.github.com/users/costin/gists{/gist_id}","starred_url":"https://api.github.com/users/costin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/costin/subscriptions","organizations_url":"https://api.github.com/users/costin/orgs","repos_url":"https://api.github.com/users/costin/repos","events_url":"https://api.github.com/users/costin/events{/privacy}","received_events_url":"https://api.github.com/users/costin/received_events","type":"User","site_admin":false},"performed_via_github_app":null}