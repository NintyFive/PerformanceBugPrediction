{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/15540","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15540/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15540/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/15540/events","html_url":"https://github.com/elastic/elasticsearch/issues/15540","id":122946271,"node_id":"MDU6SXNzdWUxMjI5NDYyNzE=","number":15540,"title":"Having a type and a field in a different type with the same name seems to break analyzers","user":{"login":"tarnacious","id":170085,"node_id":"MDQ6VXNlcjE3MDA4NQ==","avatar_url":"https://avatars1.githubusercontent.com/u/170085?v=4","gravatar_id":"","url":"https://api.github.com/users/tarnacious","html_url":"https://github.com/tarnacious","followers_url":"https://api.github.com/users/tarnacious/followers","following_url":"https://api.github.com/users/tarnacious/following{/other_user}","gists_url":"https://api.github.com/users/tarnacious/gists{/gist_id}","starred_url":"https://api.github.com/users/tarnacious/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tarnacious/subscriptions","organizations_url":"https://api.github.com/users/tarnacious/orgs","repos_url":"https://api.github.com/users/tarnacious/repos","events_url":"https://api.github.com/users/tarnacious/events{/privacy}","received_events_url":"https://api.github.com/users/tarnacious/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-12-18T13:13:04Z","updated_at":"2015-12-18T13:36:42Z","closed_at":"2015-12-18T13:36:42Z","author_association":"NONE","active_lock_reason":null,"body":"In tracking down a bug in an application, I found this behaviour in elasticsearch which is not what I would expect. \n\nIt seems that adding a new mapping type somehow breaks the analyzers in another type. I see the behaviour in elasticsearch 1.4.4 which we are using and in 1.7.4.\n\nHere is a script to to reproduce the behaviour:\n\n```\nELASTICSEARCH=localhost:9200\nINDEX=text-index\n\n# Clear the index\ncurl -XDELETE $ELASTICSEARCH/$INDEX/\necho \n\n# Create and index\ncurl -XPUT -H \"Content-Type: json\" $ELASTICSEARCH/$INDEX/ -d '\n    {\n        \"settings\": {\n            \"index\": {\n                \"number_of_shards\": 1,\n                \"analysis\": {\n                    \"filter\": {\n                        \"stemmer\": {\n                            \"type\": \"snowball\",\n                            \"language\": \"English\"\n                        }\n                    },\n                    \"analyzer\": {\n                        \"custom\": {\n                            \"type\": \"custom\",\n                            \"tokenizer\": \"standard\",\n                            \"filter\": \"stemmer\"\n                        }\n                    }\n                },\n                \"number_of_replicas\": 0\n            }\n        },\n        \"mappings\": {\n            \"user\": {\n                \"dynamic\": \"strict\",\n                \"properties\": {\n                    \"address\": {\n                        \"properties\": {\n                            \"description\": {\n                                \"type\": \"string\",\n                                \"analyzer\": \"custom\",\n                                \"store\": \"yes\"\n                            }\n                        }\n                    }\n                }\n            }\n\n        }\n    }\n}'\necho \n\n# Index a document\ncurl -XPOST -H \"Content-Type: json\" $ELASTICSEARCH/$INDEX/user -d '\n    {\n        \"address\": \n            {\n                \"description\": \"Walked\"\n            }\n\n    }'\necho \n\n\nsleep 1\n# Search, should find something\ncurl -XPOST -H \"Content-Type: json\" $ELASTICSEARCH/$INDEX/user/_search -d '\n{\n    \"query\": {\n        \"filtered\": {\n            \"query\": {\n                \"simple_query_string\": {\n                    \"default_operator\": \"AND\",\n                    \"fields\": [\n                        \"user.address.description\"\n                    ],\n                    \"query\": \"Walk\"\n                }\n            }\n        }\n    }\n}'\necho \n\n\n# Add a mapping called address, which happens to be the name of field a nested datatype\ncurl -XPUT -H \"Content-Type: json\" $ELASTICSEARCH/$INDEX/_mapping/address -d '\n{ \n\n    \"dynamic\": \"strict\"\n}'\necho\n\n\nsleep 1\n# Search, now returns no results!\ncurl -XPOST -H \"Content-Type: json\" $ELASTICSEARCH/$INDEX/user/_search -d '\n{\n    \"query\": {\n        \"filtered\": {\n            \"query\": {\n                \"simple_query_string\": {\n                    \"default_operator\": \"AND\",\n                    \"fields\": [\n                        \"user.address.description\"\n                    ],\n                    \"query\": \"Walk\"\n                }\n            }\n        }\n    }\n}'\necho\n```\n\nWhich produces this:\n\n```\n{\"acknowledged\":true}\n{\"acknowledged\":true}\n{\"_index\":\"text-index\",\"_type\":\"user\",\"_id\":\"AVG0hasF-Z9PaJz0rP2W\",\"_version\":1,\"created\":true}\n{\"took\":1,\"timed_out\":false,\"_shards\":{\"total\":1,\"successful\":1,\"failed\":0},\"hits\":{\"total\":1,\"max_score\":0.30685282,\"hits\":[{\"_index\":\"text-index\",\"_type\":\"user\",\"_id\":\"AVG0hasF-Z9PaJz0rP2W\",\"_score\":0.30685282,\"_source\":\n    {\n        \"address\": \n            {\n                \"description\": \"Walked\"\n            }\n\n    }}]}}\n{\"acknowledged\":true}\n{\"took\":1,\"timed_out\":false,\"_shards\":{\"total\":1,\"successful\":1,\"failed\":0},\"hits\":{\"total\":0,\"max_score\":null,\"hits\":[]}}\n```\n\nI would expect the last search request to return the same results as the first one:\n\n```\n{\"acknowledged\":true}\n{\"acknowledged\":true}\n{\"_index\":\"text-index\",\"_type\":\"user\",\"_id\":\"AVG0hasF-Z9PaJz0rP2W\",\"_version\":1,\"created\":true}\n{\"took\":1,\"timed_out\":false,\"_shards\":{\"total\":1,\"successful\":1,\"failed\":0},\"hits\":{\"total\":1,\"max_score\":0.30685282,\"hits\":[{\"_index\":\"text-index\",\"_type\":\"user\",\"_id\":\"AVG0hasF-Z9PaJz0rP2W\",\"_score\":0.30685282,\"_source\":\n    {\n        \"address\": \n            {\n                \"description\": \"Walked\"\n            }\n\n    }}]}}\n{\"acknowledged\":true}\n{\"took\":1,\"timed_out\":false,\"_shards\":{\"total\":1,\"successful\":1,\"failed\":0},\"hits\":{\"total\":1,\"max_score\":0.30685282,\"hits\":[{\"_index\":\"text-index\",\"_type\":\"user\",\"_id\":\"AVG0hasF-Z9PaJz0rP2W\",\"_score\":0.30685282,\"_source\":\n    {\n        \"address\": \n            {\n                \"description\": \"Walked\"\n            }\n\n    }}]}}\n```\n\nI guess I can work around this by renaming some things, but I would like to know if I am doing something wrong in my script or if this is something that is a bit broken in elasticsearch.\n\nThanks\n","closed_by":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"performed_via_github_app":null}