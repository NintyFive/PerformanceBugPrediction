{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/17953","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17953/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17953/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17953/events","html_url":"https://github.com/elastic/elasticsearch/issues/17953","id":150836615,"node_id":"MDU6SXNzdWUxNTA4MzY2MTU=","number":17953,"title":"Elasticsearch parsing the source for a disabled object when using Transform","user":{"login":"gmoskovicz","id":1675411,"node_id":"MDQ6VXNlcjE2NzU0MTE=","avatar_url":"https://avatars3.githubusercontent.com/u/1675411?v=4","gravatar_id":"","url":"https://api.github.com/users/gmoskovicz","html_url":"https://github.com/gmoskovicz","followers_url":"https://api.github.com/users/gmoskovicz/followers","following_url":"https://api.github.com/users/gmoskovicz/following{/other_user}","gists_url":"https://api.github.com/users/gmoskovicz/gists{/gist_id}","starred_url":"https://api.github.com/users/gmoskovicz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gmoskovicz/subscriptions","organizations_url":"https://api.github.com/users/gmoskovicz/orgs","repos_url":"https://api.github.com/users/gmoskovicz/repos","events_url":"https://api.github.com/users/gmoskovicz/events{/privacy}","received_events_url":"https://api.github.com/users/gmoskovicz/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-04-25T12:08:16Z","updated_at":"2016-04-25T19:35:14Z","closed_at":"2016-04-25T19:33:14Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Elasticsearch version**: `2.3.1`\n\n**JVM version**: `Java(TM) SE Runtime Environment (build 1.8.0_45-b14)`\n\n**OS version**: Any OS\n\n**Description of the problem including expected versus actual behavior**:\n\nUsing a simple script, called `fake.groovy` which is just a `return true` script, you can verify that the content of object fields that are not enabled are being parsed anyway. Looking at the [source](https://github.com/elastic/elasticsearch/blob/2.3/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java#L748) it looks like the `mapOrdered` method is actually using the `JsonXContentParser` with all the fields no matter if they are enabled or not. We shouldn't parse the source and we should have the same behaviour than when not using `transform` method.\n\nIf you don't use transform, the mapper will avoid parsing the content and this will work as expected.\n\n**Steps to reproduce**:\n1. Create a `fake.groovy` script and place it in `/config/scripts`\n2. Create an index using the transform [1]\n3. Index a document with a field that should fail if the source is parsed (example `BIG_INTEGER`) [2]\n4. The result of this is an error, because is trying to parse the source, we should use the source, not parse it when the object is not enabled.\n\n[1] \n\n```\nDELETE test\n\nPUT test/\n{\n  \"mappings\": {\n    \"entry\": {\n      \"transform\": {\n        \"file\": \"fake\",\n        \"lang\": \"groovy\"\n      },\n      \"properties\": {\n        \"ssl\": {\n          \"type\": \"object\",\n          \"enabled\": false\n        }\n      }\n    }\n  }\n}\n```\n\n[2]\n\n```\nPOST test/entry\n{\n  \"ssl\": {\n    \"cert\": {\n      \"serial\": 13408895465235657000\n    }\n  }\n}\n```\n\n**Provide logs (if relevant)**:\n\n```\n[2016-04-25 08:53:39,233][DEBUG][action.index             ] [Hurricane] failed to execute [index {][entry][AVRNRI6cWqa-34uUr91K], source[{\n  \"ssl\": {\n    \"cert\": {\\\n      \"serial\": 13408895465235657000,\\\\\n    }\n  }\n}\n]}] on [-][4]]\nMapperParsingException[failed to parse]; nested: IllegalStateException[No matching token for number_type [BIG_INTEGER]];\n    at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:154)\n    at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:309)\n    at org.elasticsearch.index.shard.IndexShard.prepareCreate(IndexShard.java:529)\n    at org.elasticsearch.index.shard.IndexShard.prepareCreateOnPrimary(IndexShard.java:506)\n    at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:215)\n    at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:224)\n    at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:158)\n    at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:66)\n    at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:639)\n    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n    at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:279)\n    at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:271)\n    at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:75)\n    at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376)\n    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: No matching token for number_type [BIG_INTEGER]\n    at org.elasticsearch.common.xcontent.json.JsonXContentParser.convertNumberType(JsonXContentParser.java:216)\n    at org.elasticsearch.common.xcontent.json.JsonXContentParser.numberType(JsonXContentParser.java:68)\n    at org.elasticsearch.common.xcontent.support.AbstractXContentParser.readValue(AbstractXContentParser.java:301)\n    at org.elasticsearch.common.xcontent.support.AbstractXContentParser.readMap(AbstractXContentParser.java:274)\n    at org.elasticsearch.common.xcontent.support.AbstractXContentParser.readValue(AbstractXContentParser.java:314)\n    at org.elasticsearch.common.xcontent.support.AbstractXContentParser.readMap(AbstractXContentParser.java:274)\n    at org.elasticsearch.common.xcontent.support.AbstractXContentParser.readValue(AbstractXContentParser.java:314)\n    at org.elasticsearch.common.xcontent.support.AbstractXContentParser.readMap(AbstractXContentParser.java:274)\n    at org.elasticsearch.common.xcontent.support.AbstractXContentParser.readOrderedMap(AbstractXContentParser.java:249)\n    at org.elasticsearch.common.xcontent.support.AbstractXContentParser.mapOrdered(AbstractXContentParser.java:213)\n    at org.elasticsearch.index.mapper.DocumentParser.transform(DocumentParser.java:748)\n    at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:93)\n    ... 17 more\n\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}