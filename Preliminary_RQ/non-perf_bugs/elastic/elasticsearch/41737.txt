{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/41737","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41737/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41737/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41737/events","html_url":"https://github.com/elastic/elasticsearch/issues/41737","id":439523566,"node_id":"MDU6SXNzdWU0Mzk1MjM1NjY=","number":41737,"title":"[CI] Timeouts in CcrRetentionLeaseIT#testRetentionLeaseIsAddedIfItDisappearsWhileFollowing","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"labels":[{"id":912824565,"node_id":"MDU6TGFiZWw5MTI4MjQ1NjU=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/CCR","name":":Distributed/CCR","color":"0e8a16","default":false,"description":"Issues around the Cross Cluster State Replication features"},{"id":148612629,"node_id":"MDU6TGFiZWwxNDg2MTI2Mjk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest-failure","name":">test-failure","color":"207de5","default":false,"description":"Triaged test failures from CI"}],"state":"closed","locked":false,"assignee":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"assignees":[{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2019-05-02T10:32:40Z","updated_at":"2019-05-28T01:44:38Z","closed_at":"2019-05-28T01:44:38Z","author_association":"MEMBER","active_lock_reason":null,"body":"https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+6.7+multijob-unix-compatibility/os=opensuse/142/console\r\n\r\nDoesn't reproduce:\r\n```\r\nREPRODUCE WITH: ./gradlew :x-pack:plugin:ccr:internalClusterTest \\\r\n  -Dtests.seed=4B6E4686DF432308 \\\r\n  -Dtests.class=org.elasticsearch.xpack.ccr.CcrRetentionLeaseIT \\\r\n  -Dtests.method=\"testRetentionLeaseIsAddedIfItDisappearsWhileFollowing\" \\\r\n  -Dtests.security.manager=true \\\r\n  -Dtests.locale=es-PR \\\r\n  -Dtests.timezone=Antarctica/South_Pole \\\r\n  -Dcompiler.java=12 \\\r\n  -Druntime.java=8\r\n\r\nREPRODUCE WITH: ./gradlew :x-pack:plugin:ccr:internalClusterTest \\\r\n  -Dtests.seed=4B6E4686DF432308 \\\r\n  -Dtests.class=org.elasticsearch.xpack.ccr.CcrRetentionLeaseIT \\\r\n  -Dtests.security.manager=true \\\r\n  -Dtests.locale=en-US \\\r\n  -Dtests.timezone=Etc/UTC \\\r\n  -Dcompiler.java=12 \\\r\n  -Druntime.java=8\r\n```\r\n\r\nThere are lots of thread leak outputs in the full console log like these:\r\n```\r\n1> [2019-05-02T21:54:22,863][INFO ][o.e.x.c.a.ShardFollowTasksExecutor] [followerd1] [follower][0] Starting to track leader shard [leader][0]\r\n  1> [2019-05-02T21:54:22,867][INFO ][o.e.x.c.CcrRetentionLeaseIT] [testRetentionLeaseIsAddedIfItDisappearsWhileFollowing] ensure green follower indices [follower]\r\n  1> [2019-05-02T21:54:22,876][INFO ][o.e.x.c.a.ShardFollowNodeTask] [followerd1] [follower][0] following leader shard [leader][0], follower global checkpoint=[-1], mapping version=[1], settings version=[1]\r\n  2> may 02, 2019 10:13:49 PM com.carrotsearch.randomizedtesting.ThreadLeakControl$2 evaluate\r\n  2> ADVERTENCIA: Suite execution timed out: org.elasticsearch.xpack.ccr.CcrRetentionLeaseIT\r\n  2> ==== jstack at approximately timeout time ====\r\n  2> \"elasticsearch[followerd1][flush][T#1]\" ID=457 WAITING on org.elasticsearch.common.util.concurrent.EsExecutors$ExecutorScalingQueue@7aedf8c7\r\n  2> \tat sun.misc.Unsafe.park(Native Method)\r\n  2> \t- waiting on org.elasticsearch.common.util.concurrent.EsExecutors$ExecutorScalingQueue@7aedf8c7\r\n  2> \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\r\n  2> \tat java.util.concurrent.LinkedTransferQueue.awaitMatch(LinkedTransferQueue.java:737)\r\n  2> \tat java.util.concurrent.LinkedTransferQueue.xfer(LinkedTransferQueue.java:647)\r\n  2> \tat java.util.concurrent.LinkedTransferQueue.take(LinkedTransferQueue.java:1269)\r\n  2> \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)\r\n  2> \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)\r\n  2> \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n  2> \tat java.lang.Thread.run(Thread.java:748)\r\n[...]\r\n```\r\n```\r\n2> ADVERTENCIA: Will linger awaiting termination of 328 leaked thread(s).\r\n  2> may 02, 2019 10:13:55 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks\r\n  2> GRAVE: 328 threads leaked from SUITE scope at org.elasticsearch.xpack.ccr.CcrRetentionLeaseIT: \r\n  2>    1) Thread[id=139, name=elasticsearch[followerm0][[timer]], state=TIMED_WAITING, group=TGRP-CcrRetentionLeaseIT]\r\n  2>         at java.lang.Thread.sleep(Native Method)\r\n  2>         at org.elasticsearch.threadpool.ThreadPool$CachedTimeThread.run(ThreadPool.java:574)\r\n  2>    2) Thread[id=169, name=elasticsearch[leaderd4][__mock_network_thread][T#15], state=RUNNABLE, group=TGRP-CcrRetentionLeaseIT]\r\n  2>         at java.net.SocketInputStream.socketRead0(Native Method)\r\n  2>         at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\r\n  2>         at java.net.SocketInputStream.read(SocketInputStream.java:171)\r\n  2>         at java.net.SocketInputStream.read(SocketInputStream.java:141)\r\n  2>         at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)\r\n  2>         at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)\r\n  2>         at java.io.BufferedInputStream.read(BufferedInputStream.java:345)\r\n  2>         at org.elasticsearch.common.io.Streams.readFully(Streams.java:214)\r\n  2>         at org.elasticsearch.common.io.stream.InputStreamStreamInput.readBytes(InputStreamStreamInput.java:67)\r\n  2>         at org.elasticsearch.common.io.stream.StreamInput.readFully(StreamInput.java:192)\r\n  2>         at org.elasticsearch.transport.MockTcpTransport.readMessage(MockTcpTransport.java:150)\r\n  2>         at org.elasticsearch.transport.MockTcpTransport.access$800(MockTcpTransport.java:75)\r\n  2>         at org.elasticsearch.transport.MockTcpTransport$MockChannel$2.lambda$doRun$0(MockTcpTransport.java:349)\r\n  2>         at org.elasticsearch.transport.MockTcpTransport$MockChannel$2$$Lambda$1931/705689348.run(Unknown Source)\r\n  2>         at org.elasticsearch.common.util.CancellableThreads.executeIO(CancellableThreads.java:108)\r\n  2>         at org.elasticsearch.transport.MockTcpTransport$MockChannel$2.doRun(MockTcpTransport.java:349)\r\n  2>         at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n  2>         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n  2>         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n  2>         at java.lang.Thread.run(Thread.java:748)\r\n  2>    3) Thread[id=286, name=elasticsearch[followerm0][ccr][T#3], state=WAITING, group=TGRP-CcrRetentionLeaseIT]\r\n  2>         at sun.misc.Unsafe.park(Native Method)\r\n  2>         at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\r\n  2>         at java.util.concurrent.LinkedTransferQueue.awaitMatch(LinkedTransferQueue.java:737)\r\n  2>         at java.util.concurrent.LinkedTransferQueue.xfer(LinkedTransferQueue.java:647)\r\n  2>         at java.util.concurrent.LinkedTransferQueue.take(LinkedTransferQueue.java:1269)\r\n  2>         at org.elasticsearch.common.util.concurrent.SizeBlockingQueue.take(SizeBlockingQueue.java:165)\r\n  2>         at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)\r\n  2>         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)\r\n  2>         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n  2>         at java.lang.Thread.run(Thread.java:748)\r\n  2>    4) Thread[id=338, name=elasticsearch[followerd1][ccr][T#25], state=WAITING, group=TGRP-CcrRetentionLeaseIT]\r\n  2>         at sun.misc.Unsafe.park(Native Method)\r\n  2>         at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\r\n  2>         at java.util.concurrent.LinkedTransferQueue.awaitMatch(LinkedTransferQueue.java:737)\r\n  2>         at java.util.concurrent.LinkedTransferQueue.xfer(LinkedTransferQueue.java:647)\r\n  2>         at java.util.concurrent.LinkedTransferQueue.take(LinkedTransferQueue.java:1269)\r\n  2>         at org.elasticsearch.common.util.concurrent.SizeBlockingQueue.take(SizeBlockingQueue.java:165)\r\n  2>         at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)\r\n  2>         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)\r\n  2>         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n  2>         at java.lang.Thread.run(Thread.java:748)\r\n[...]\r\n```\r\n\r\nPossibly related to https://github.com/elastic/elasticsearch/issues/41428 and https://github.com/elastic/elasticsearch/issues/41679 but filing as a new issue here regardless so the team can decide.","closed_by":{"login":"dnhatn","id":13474362,"node_id":"MDQ6VXNlcjEzNDc0MzYy","avatar_url":"https://avatars3.githubusercontent.com/u/13474362?v=4","gravatar_id":"","url":"https://api.github.com/users/dnhatn","html_url":"https://github.com/dnhatn","followers_url":"https://api.github.com/users/dnhatn/followers","following_url":"https://api.github.com/users/dnhatn/following{/other_user}","gists_url":"https://api.github.com/users/dnhatn/gists{/gist_id}","starred_url":"https://api.github.com/users/dnhatn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dnhatn/subscriptions","organizations_url":"https://api.github.com/users/dnhatn/orgs","repos_url":"https://api.github.com/users/dnhatn/repos","events_url":"https://api.github.com/users/dnhatn/events{/privacy}","received_events_url":"https://api.github.com/users/dnhatn/received_events","type":"User","site_admin":false},"performed_via_github_app":null}