[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/385898169","html_url":"https://github.com/elastic/elasticsearch/issues/29961#issuecomment-385898169","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29961","id":385898169,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NTg5ODE2OQ==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2018-05-02T08:10:14Z","updated_at":"2018-05-02T08:10:14Z","author_association":"CONTRIBUTOR","body":"I took at look at how feasible this would be, and it runs into a problem with the way we handle bulk request (and, by consequence all DocWriteRequests as these get internally converted into Bulk)\r\n\r\nIf we assume as a given that we'd want to support this for bulk (and we should) then we have 2 places where the `AuthorizationService` could attempt to handle it\r\n1. On first processing of the `BulkRequest`\r\n2. When processing the `BulkShardRequest`\r\n\r\nThe former is complicated by the fact that a `BulkRequest` has no way of marking an item as \"failed\". So if the `AuthorizationService` detected that an item within the bulk was invalid, it would need to fail the whole bulk request, which is undesirable.\r\n\r\nThe latter is complicated by the fact that the `PipelineExecutionService` clears the pipeline from the bulk item after processing it, so the `AuthorizationService` cannot tell whether at item went through a pipeline or not.\r\n\r\nNeither of those are insurmountable, but during the implementation of #26434, the general view was that the `AuthorizationService` should behave like an interceptor, which would allow it to \"modify\" requests in a similar way to `TransportBulkAction.BulkRequestModifier`.\r\nTo make progress on this issue, we would first need to do work to allow authorization decisions to take place in the context of an interceptor.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/385898889","html_url":"https://github.com/elastic/elasticsearch/issues/29961#issuecomment-385898889","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29961","id":385898889,"node_id":"MDEyOklzc3VlQ29tbWVudDM4NTg5ODg4OQ==","user":{"login":"tvernum","id":2244393,"node_id":"MDQ6VXNlcjIyNDQzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2244393?v=4","gravatar_id":"","url":"https://api.github.com/users/tvernum","html_url":"https://github.com/tvernum","followers_url":"https://api.github.com/users/tvernum/followers","following_url":"https://api.github.com/users/tvernum/following{/other_user}","gists_url":"https://api.github.com/users/tvernum/gists{/gist_id}","starred_url":"https://api.github.com/users/tvernum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvernum/subscriptions","organizations_url":"https://api.github.com/users/tvernum/orgs","repos_url":"https://api.github.com/users/tvernum/repos","events_url":"https://api.github.com/users/tvernum/events{/privacy}","received_events_url":"https://api.github.com/users/tvernum/received_events","type":"User","site_admin":false},"created_at":"2018-05-02T08:13:15Z","updated_at":"2018-05-02T08:13:15Z","author_association":"CONTRIBUTOR","body":"Pinging @elastic/es-security (because @elasticmachine has failed to do so)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/397629892","html_url":"https://github.com/elastic/elasticsearch/issues/29961#issuecomment-397629892","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/29961","id":397629892,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NzYyOTg5Mg==","user":{"login":"pcsanwald","id":163306,"node_id":"MDQ6VXNlcjE2MzMwNg==","avatar_url":"https://avatars1.githubusercontent.com/u/163306?v=4","gravatar_id":"","url":"https://api.github.com/users/pcsanwald","html_url":"https://github.com/pcsanwald","followers_url":"https://api.github.com/users/pcsanwald/followers","following_url":"https://api.github.com/users/pcsanwald/following{/other_user}","gists_url":"https://api.github.com/users/pcsanwald/gists{/gist_id}","starred_url":"https://api.github.com/users/pcsanwald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pcsanwald/subscriptions","organizations_url":"https://api.github.com/users/pcsanwald/orgs","repos_url":"https://api.github.com/users/pcsanwald/repos","events_url":"https://api.github.com/users/pcsanwald/events{/privacy}","received_events_url":"https://api.github.com/users/pcsanwald/received_events","type":"User","site_admin":false},"created_at":"2018-06-15T13:59:08Z","updated_at":"2018-06-15T13:59:08Z","author_association":"CONTRIBUTOR","body":"We discussed this in FixIt Friday, and the consensus is, for now, the difficulty in implementing this outweighs the benefits it would provide.","performed_via_github_app":null}]