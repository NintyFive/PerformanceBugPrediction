[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/454308632","html_url":"https://github.com/elastic/elasticsearch/issues/37453#issuecomment-454308632","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37453","id":454308632,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDMwODYzMg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-01-15T08:36:54Z","updated_at":"2019-01-15T08:36:54Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/454308637","html_url":"https://github.com/elastic/elasticsearch/issues/37453#issuecomment-454308637","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37453","id":454308637,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDMwODYzNw==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2019-01-15T08:36:55Z","updated_at":"2019-01-15T08:36:55Z","author_association":"CONTRIBUTOR","body":"Do you have specific incompatibilities in mind or is this a more general question about our compatibility and maintenance policy?\r\n\r\nWe try quite hard not to introduce any breaking changes within a major series, so for instance 6.5.4 is already compatible with 6.2.0 without the need for an explicit compatibility mode.\r\n\r\nNote that our [maintenance policy](https://www.elastic.co/support/eol) means that the 5.x series is still actively maintained. I'll mark this for further discussion but I expect it to be unlikely that we'd introduce a 5.x compatibility mode into the 6.x series.\r\n\r\n> some applications are even certified to be running with some minor ES version\r\n\r\nIf you are in a situation that requires this kind of version-specific certification then I do not understand how your proposed compatibility mode would help any more than the compatibility and maintenance policies I outlined above.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/454318821","html_url":"https://github.com/elastic/elasticsearch/issues/37453#issuecomment-454318821","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37453","id":454318821,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NDMxODgyMQ==","user":{"login":"vbohata","id":20965804,"node_id":"MDQ6VXNlcjIwOTY1ODA0","avatar_url":"https://avatars0.githubusercontent.com/u/20965804?v=4","gravatar_id":"","url":"https://api.github.com/users/vbohata","html_url":"https://github.com/vbohata","followers_url":"https://api.github.com/users/vbohata/followers","following_url":"https://api.github.com/users/vbohata/following{/other_user}","gists_url":"https://api.github.com/users/vbohata/gists{/gist_id}","starred_url":"https://api.github.com/users/vbohata/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vbohata/subscriptions","organizations_url":"https://api.github.com/users/vbohata/orgs","repos_url":"https://api.github.com/users/vbohata/repos","events_url":"https://api.github.com/users/vbohata/events{/privacy}","received_events_url":"https://api.github.com/users/vbohata/received_events","type":"User","site_admin":false},"created_at":"2019-01-15T09:11:52Z","updated_at":"2019-01-15T09:11:52Z","author_association":"NONE","body":"This is more a feature request. It would be nice for example to be able to create elasticsearch-5 index in elasticsearch 6/7 with all the features like elasticsearch 5 in that time or have for example 6.2.0 behaviour even with 6.2.0 non-security bugs if their fix can cause incompatibility. The reason for this is to have most current supported ES cluster supporting older index formats/features instead of having multiple (sometimes non-supported) ES clusters.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/455422521","html_url":"https://github.com/elastic/elasticsearch/issues/37453#issuecomment-455422521","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/37453","id":455422521,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NTQyMjUyMQ==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2019-01-18T04:17:41Z","updated_at":"2019-01-18T04:17:41Z","author_association":"MEMBER","body":"Thanks @vbohata for your interest in Elasticsearch and for opening this for discussion. As developers ourselves, we understand the inherent conflict in dealing with breaking changes and keeping up with latest. As maintainers, we have to weigh consider the benefits of each feature against the costs, in accordance with our goals for Elasticsearch.\r\n\r\nWe want to keep Elasticsearch moving forward as fast as possible. We are committed to this, and have aggressive plans into the future. We also want users to be able to come with us, so there's the tension of moving fast, yet doing it in a way that users can keep up with the changes. The more that break, the more potential there is for users to stay behind.\r\n\r\nWe discussed your proposal during our weekly team discussion meeting today and we feel the balance is not right. It would cost us tremendously to maintain backwards compatibility guarantees of the sort that you are looking for, at the expense of moving the project forward. Instead, we strike a balance. We have committed to bringing users with us across major version boundaries by investing in rolling upgrades across major version boundaries, and being far more deliberate about breaking changes than when the project was far less mature than it is now (frankly, immature compared to where we are now). Along the lines of being more deliberate, not only are we more reluctant to make breaking changes, but when we do we offer deprecation warnings, migration assistants, and in some cases backport the new functionality to the previous major to help users transition. We think these changes help us stay committed to moving forward fast, while also making it easy for users to come with us. And for users that can not come with us (which can happen in slower moving enterprises), we have a long maintenance policy for the previous major release. Today, we are still committing bug fixes to 5.6 and doing periodic releases. This brings back critical bug fixes including for security issues for our users that need to continue to use 5.6.\r\n\r\nWrapping all of this up, on the spectrum of backwards compatibility forever/moving forward slowly to breaking anything all the time/moving forward as fast as possible, we are happy with our current balance of the pace at which we can move yet still bring users with us. Given our current philosophy, we do not want to move further down the spectrum towards moving more slowly and incurring the expense of offering generous backwards compatibility guarantees. The offset for that is our maintenance policy for the previous major.\r\n\r\nI am empathetic this might not satisfy you, as it means your feature request is being closed without being fulfilled. I at least hope that you understand where we are coming from.","performed_via_github_app":null}]