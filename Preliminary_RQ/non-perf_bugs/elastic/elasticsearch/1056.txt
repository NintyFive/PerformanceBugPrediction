{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1056","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1056/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1056/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1056/events","html_url":"https://github.com/elastic/elasticsearch/issues/1056","id":1100973,"node_id":"MDU6SXNzdWUxMTAwOTcz","number":1056,"title":"Dynamic Templates path_match of \"field.*\" is somewhat ambiguous ","user":{"login":"mihalik","id":153942,"node_id":"MDQ6VXNlcjE1Mzk0Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/153942?v=4","gravatar_id":"","url":"https://api.github.com/users/mihalik","html_url":"https://github.com/mihalik","followers_url":"https://api.github.com/users/mihalik/followers","following_url":"https://api.github.com/users/mihalik/following{/other_user}","gists_url":"https://api.github.com/users/mihalik/gists{/gist_id}","starred_url":"https://api.github.com/users/mihalik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mihalik/subscriptions","organizations_url":"https://api.github.com/users/mihalik/orgs","repos_url":"https://api.github.com/users/mihalik/repos","events_url":"https://api.github.com/users/mihalik/events{/privacy}","received_events_url":"https://api.github.com/users/mihalik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2011-06-22T21:38:25Z","updated_at":"2013-04-16T07:38:12Z","closed_at":"2013-04-16T07:38:12Z","author_association":"NONE","active_lock_reason":null,"body":"The behavior of a path_match of \"tags.*\" could either be used to find something in the root of the document or try and match something under tags depending on what the mapping looks like.  This is odd and somewhat inconsistent behavior.\n\nI have a document I'm trying to index that looks like this:\n\n```\ncurl -XPOST 'http://localhost:9200/test/entry/' -d '{\n    \"user\" : \"kimchy\",\n    \"post_date\" : \"2009-11-15T14:12:12\",\n    \"tags\": {\n        \"Pros\": [\"Fast\", \"Stable\"],\n        \"Cons\": [\"Complex\"]\n    }\n}'\n```\n\nI want to make sure that any type of tag that gets added is not analyzed.  So, I create a dynamic template:\n\n```\ncurl -XPUT 'http://localhost:9200/test/entry/_mapping' -d '\n{\n    \"entry\" : {\n        \"dynamic_templates\" : [\n            {\n                \"keep_original\" : {\n                    \"path_match\" : \"tags.*\",\n                    \"mapping\" : {\n                        \"type\" : \"string\",\n                        \"index\": \"not_analyzed\",\n                        \"store\": \"yes\"\n                    }\n                }\n            }\n        ]        \n    }\n}'\n```\n\nIf this is a fresh mapping, this setup will be incorrect when a document is indexed because \"tags.*\" will match \"tags\" and a mapping is setup for \"tags\" as a string type, even if the data that is coming in is an object.  However, if there is an existing mapping that sets up \"tags\" as an object, this will have the expected output.  \n\nAfter MANY hours of trying to figure out why my tags was being set as a string and comparing to an implementation where I had an existing mapping with a dynamic template that was working right, I figured out I needed to do this:  \n\n```\ncurl -XPUT 'http://localhost:9200/test/entry/_mapping' -d '\n{\n    \"entry\" : {\n        \"properties\": {\n            \"tags\": {\"dynamic\" : \"true\", \"type\": \"object\"}\n        },         \n        \"dynamic_templates\" : [\n            {\n                \"keep_original\" : {\n                    \"path_match\" : \"tags.*\",\n                    \"mapping\" : {\n                        \"type\" : \"string\",\n                        \"index\": \"not_analyzed\",\n                        \"store\": \"yes\"\n                    }\n                }\n            }\n        ]        \n    }\n}'\n```\n\nI think some cases you want \"tags._\" to match things in the root directory and sometimes you want \"tags._\" to only match things underneath an object of \"tags\".  Maybe there could be something like \"tags.+\" to handle the case where you want to make sure something is there?\n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}