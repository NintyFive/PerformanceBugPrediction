{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/60108","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60108/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60108/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60108/events","html_url":"https://github.com/elastic/elasticsearch/issues/60108","id":664383338,"node_id":"MDU6SXNzdWU2NjQzODMzMzg=","number":60108,"title":"Add mlcategory and result_type to category definition docs","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"labels":[{"id":912833043,"node_id":"MDU6TGFiZWw5MTI4MzMwNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:ml","name":":ml","color":"0e8a16","default":false,"description":"Machine learning"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"assignees":[{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2020-07-23T10:59:43Z","updated_at":"2020-10-07T14:50:50Z","closed_at":"2020-10-07T14:50:50Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"When you run an ML anomaly detection job that also does categorization you end up with category definition results and anomaly results.\r\n\r\nThe category definitions have a `category_id` field of type `long` that stores the unique category ID within the job.  The anomalies contain a `keyword` field `mlcategory` that stores the unique category ID that the anomaly relates to.  The reason this is a `keyword` is that _all_ by/over/partition fields are added to anomaly results as keywords; the by/over/partition fields are _not_ strongly typed within the core analytics code.\r\n\r\nThis discrepancy in how the category ID is stored makes it harder to use generic Kibana functionality to tie the two types of document together.  It would be nicer if either the anomaly results had a `category_id` field or the category definitions had a `mlcategory` field.\r\n\r\nThere is a further complication.  Many documents we write to the ML results have a `result_type` field that indicates the document type.  However, some do not.  Category definitions are one such type of ML result.  The way category definition documents are found is to do an `exists` query on the `category_id` field.  Since this practice is widely used, it would be a bad idea to include the `category_id` field in any other type of ML result.\r\n\r\nAs a result way to allow easier joining of category definitions and anomaly results is to add a field `mlcategory` of type `keyword` to category definition documents.  This can easily be added to all category definition documents for both new jobs and pre-existing jobs _when they are updated for any reason_.  Only jobs created in the version where the functionality is added or higher could guarantee the presence of `mlcategory` in category definition documents, but older jobs that are actively running would acquire it over time.\r\n\r\nWhile this change is being made a further change should be made to make querying ML results easier and more consistent in the future.  We should add a `result_type` field with value `category_definition` to category definition documents.  We will not be able to take advantage of this for a long time - we'll have to stick with querying for the existence of `category_id`.  But by adding the `result_type` now we will create the possibility to simplify things further in a few years time, say in version 9.","closed_by":{"login":"benwtrent","id":4357155,"node_id":"MDQ6VXNlcjQzNTcxNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/4357155?v=4","gravatar_id":"","url":"https://api.github.com/users/benwtrent","html_url":"https://github.com/benwtrent","followers_url":"https://api.github.com/users/benwtrent/followers","following_url":"https://api.github.com/users/benwtrent/following{/other_user}","gists_url":"https://api.github.com/users/benwtrent/gists{/gist_id}","starred_url":"https://api.github.com/users/benwtrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwtrent/subscriptions","organizations_url":"https://api.github.com/users/benwtrent/orgs","repos_url":"https://api.github.com/users/benwtrent/repos","events_url":"https://api.github.com/users/benwtrent/events{/privacy}","received_events_url":"https://api.github.com/users/benwtrent/received_events","type":"User","site_admin":false},"performed_via_github_app":null}