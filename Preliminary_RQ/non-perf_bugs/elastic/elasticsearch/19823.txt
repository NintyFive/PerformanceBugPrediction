{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/19823","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19823/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19823/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/19823/events","html_url":"https://github.com/elastic/elasticsearch/issues/19823","id":169594605,"node_id":"MDU6SXNzdWUxNjk1OTQ2MDU=","number":19823,"title":"Template is not validated on store","user":{"login":"bobrik","id":89186,"node_id":"MDQ6VXNlcjg5MTg2","avatar_url":"https://avatars0.githubusercontent.com/u/89186?v=4","gravatar_id":"","url":"https://api.github.com/users/bobrik","html_url":"https://github.com/bobrik","followers_url":"https://api.github.com/users/bobrik/followers","following_url":"https://api.github.com/users/bobrik/following{/other_user}","gists_url":"https://api.github.com/users/bobrik/gists{/gist_id}","starred_url":"https://api.github.com/users/bobrik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bobrik/subscriptions","organizations_url":"https://api.github.com/users/bobrik/orgs","repos_url":"https://api.github.com/users/bobrik/repos","events_url":"https://api.github.com/users/bobrik/events{/privacy}","received_events_url":"https://api.github.com/users/bobrik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-08-05T12:17:45Z","updated_at":"2016-08-11T16:53:00Z","closed_at":"2016-08-11T15:57:58Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Elasticsearch version**:\n\n```\n# elasticsearch --version\nVersion: 2.3.4, Build: e455fd0/2016-06-30T11:24:31Z, JVM: 1.8.0_91\n```\n\n**JVM version**:\n\n```\n# java -version\nopenjdk version \"1.8.0_91\"\nOpenJDK Runtime Environment (build 1.8.0_91-8u91-b14-1~bpo8+1-b14)\nOpenJDK 64-Bit Server VM (build 25.91-b14, mixed mode)\n```\n\n**OS version**: Debian Jessie, elasticsearch is running in the container from the official docker image.\n\n**Description of the problem including expected versus actual behavior**:\n\nI manually changed field mapping for existing index to enable eager global ordinals for a few fields. It seemed to improve my experience, so I decided to put new mappings into the index template. Unfortunately, I messed up with copy-pasting json from another file and template became invalid. Problem is: Elasticsearch happily saved it and and people got paged in at midnight UTC when index failed to roll.\n\nMy incorrect template:\n\n``` json\n{\n  \"template\": \"raytracer-*\",\n  \"settings\": {\n    \"number_of_shards\": 50,\n    \"number_of_replicas\": 1,\n    \"index.refresh_interval\": \"30s\",\n    \"index.query.default_field\": \"id\",\n    \"index.search.slowlog.threshold.fetch.warn\": \"5s\",\n    \"index.search.slowlog.threshold.query.warn\": \"5s\"\n  },\n  \"mappings\": {\n    \"_default_\": {\n      \"_all\": {\n        \"enabled\": false\n      },\n      \"dynamic_templates\": [\n        {\n          \"string_fields\": {\n            \"match\": \"*\",\n            \"match_mapping_type\": \"string\",\n            \"mapping\": {\n              \"type\": \"string\",\n              \"index\": \"not_analyzed\",\n              \"ignore_above\": 256,\n              \"doc_values\": true\n            }\n          }\n        },\n        {\n          \"long_fields\": {\n            \"match\": \"*\",\n            \"match_mapping_type\": \"long\",\n            \"mapping\": {\n              \"type\": \"long\",\n              \"doc_values\": true\n            }\n          }\n        },\n        {\n          \"double_fields\": {\n            \"match\": \"*\",\n            \"match_mapping_type\": \"double\",\n            \"mapping\": {\n              \"type\": \"double\",\n              \"doc_values\": true\n            }\n          }\n        },\n        {\n          \"date_fields\": {\n            \"match\": \"*\",\n            \"match_mapping_type\": \"date\",\n            \"mapping\": {\n              \"type\": \"date\",\n              \"doc_values\": true\n            }\n          }\n        }\n      ],\n      \"properties\": {\n        \"properties\": {\n          \"request\": {\n            \"type\": \"string\",\n            \"index\": \"not_analyzed\",\n            \"doc_values\": true,\n            \"ignore_above\": 256,\n            \"fielddata\": {\n              \"loading\": \"eager_global_ordinals\"\n            }\n          },\n          \"client\": {\n            \"type\": \"string\",\n            \"index\": \"not_analyzed\",\n            \"doc_values\": true,\n            \"ignore_above\": 256,\n            \"fielddata\": {\n              \"loading\": \"eager_global_ordinals\"\n            }\n          },\n          \"host\": {\n            \"type\": \"string\",\n            \"index\": \"not_analyzed\",\n            \"doc_values\": true,\n            \"ignore_above\": 256,\n            \"fielddata\": {\n              \"loading\": \"eager_global_ordinals\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nError message when you try to create an index from this template:\n\n```\n2016-08-05T12:09:51.742 myhost [2016-08-05 12:09:51,741][DEBUG][action.admin.indices.create] [myhost] [raytracer-test] failed to create\n2016-08-05T12:09:51.742 myhost MapperParsingException[Failed to parse mapping [_default_]: No type specified for field [properties]]; nested: MapperParsingException[No type specified for field [properties]];\n2016-08-05T12:09:51.742 myhost  at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$1.execute(MetaDataCreateIndexService.java:320)\n2016-08-05T12:09:51.742 myhost  at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)\n2016-08-05T12:09:51.743 myhost  at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:468)\n2016-08-05T12:09:51.743 myhost  at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:772)\n2016-08-05T12:09:51.743 myhost  at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)\n2016-08-05T12:09:51.743 myhost  at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)\n2016-08-05T12:09:51.743 myhost  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n2016-08-05T12:09:51.743 myhost  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n2016-08-05T12:09:51.743 myhost  at java.lang.Thread.run(Thread.java:745)\n2016-08-05T12:09:51.744 myhost Caused by: MapperParsingException[No type specified for field [properties]]\n2016-08-05T12:09:51.744 myhost  at org.elasticsearch.index.mapper.object.ObjectMapper$TypeParser.parseProperties(ObjectMapper.java:297)\n2016-08-05T12:09:51.744 myhost  at org.elasticsearch.index.mapper.object.ObjectMapper$TypeParser.parseObjectOrDocumentTypeProperties(ObjectMapper.java:218)\n2016-08-05T12:09:51.744 myhost  at org.elasticsearch.index.mapper.object.RootObjectMapper$TypeParser.parse(RootObjectMapper.java:139)\n2016-08-05T12:09:51.744 myhost  at org.elasticsearch.index.mapper.DocumentMapperParser.parse(DocumentMapperParser.java:118)\n2016-08-05T12:09:51.744 myhost  at org.elasticsearch.index.mapper.DocumentMapperParser.parse(DocumentMapperParser.java:99)\n2016-08-05T12:09:51.745 myhost  at org.elasticsearch.index.mapper.DocumentMapperParser.parse(DocumentMapperParser.java:85)\n2016-08-05T12:09:51.745 myhost  at org.elasticsearch.index.mapper.MapperService.merge(MapperService.java:269)\n2016-08-05T12:09:51.745 myhost  at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$1.execute(MetaDataCreateIndexService.java:317)\n2016-08-05T12:09:51.745 myhost  ... 8 more\n```\n\nIt'd be great if elasticsearch could reject templates that can never be instantiated into valid indices. I can't think of a reason why this may be undesirable, but this can be hidden by a query string flag that is enabled by default. \n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}