[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/74304998","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-74304998","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":74304998,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MzA0OTk4","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2015-02-13T18:49:04Z","updated_at":"2015-02-13T18:49:04Z","author_association":"MEMBER","body":"+1\n\nOn Fri, Feb 13, 2015 at 7:40 PM, Pius notifications@github.com wrote:\n\n> ## Currently, a lot of the stats (Eg. node stats) are running totals and do not get reset until the node is restarted.  Sometimes, it is useful for admins to be able to reset the stats without having to restart the node.  For example, admins dealing with bulk thread pool rejections and playing around with the # of concurrent bulk client/threads to see if it helps decrease the # of bulk rejections, it will be nice to be able to reset the stats of the running total as they make changes without having to keep noting down what the running total count is, etc..\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/elasticsearch/elasticsearch/issues/9693\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/74323644","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-74323644","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":74323644,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MzIzNjQ0","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-02-13T20:43:40Z","updated_at":"2015-02-13T20:43:40Z","author_association":"CONTRIBUTOR","body":"@bleskes I like the idea, but how would we do it without throwing marvel stats way off?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/74371706","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-74371706","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":74371706,"node_id":"MDEyOklzc3VlQ29tbWVudDc0MzcxNzA2","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2015-02-14T11:34:41Z","updated_at":"2015-02-14T11:34:41Z","author_association":"MEMBER","body":"I don't think marvel should be in our way to make the API more human friendly where we can. We should solve this on the Marvel side. For this specific issue Marvel already have a protection in some places. Other places we will have to tackle. All in all it's not too bad imho as it is a local hickup which can happen anyway (node restarts).\n\nPS. This yet another interesting error case that the coming derivative reducer will need to deal with. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/110970522","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-110970522","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":110970522,"node_id":"MDEyOklzc3VlQ29tbWVudDExMDk3MDUyMg==","user":{"login":"FestivalBobcats","id":251029,"node_id":"MDQ6VXNlcjI1MTAyOQ==","avatar_url":"https://avatars1.githubusercontent.com/u/251029?v=4","gravatar_id":"","url":"https://api.github.com/users/FestivalBobcats","html_url":"https://github.com/FestivalBobcats","followers_url":"https://api.github.com/users/FestivalBobcats/followers","following_url":"https://api.github.com/users/FestivalBobcats/following{/other_user}","gists_url":"https://api.github.com/users/FestivalBobcats/gists{/gist_id}","starred_url":"https://api.github.com/users/FestivalBobcats/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FestivalBobcats/subscriptions","organizations_url":"https://api.github.com/users/FestivalBobcats/orgs","repos_url":"https://api.github.com/users/FestivalBobcats/repos","events_url":"https://api.github.com/users/FestivalBobcats/events{/privacy}","received_events_url":"https://api.github.com/users/FestivalBobcats/received_events","type":"User","site_admin":false},"created_at":"2015-06-11T02:14:59Z","updated_at":"2015-06-11T02:16:20Z","author_association":"NONE","body":"Was there any further thought on this? Tracking changes in average query time, for example, is difficult when the process uptime is 10+ days and billions of requests have come through.\n\nI could periodically do a rolling restart (contingent on having ample replication to prevent partial downtime), but it seems like introducing the unnecessary potential for chaos.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/110996452","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-110996452","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":110996452,"node_id":"MDEyOklzc3VlQ29tbWVudDExMDk5NjQ1Mg==","user":{"login":"FestivalBobcats","id":251029,"node_id":"MDQ6VXNlcjI1MTAyOQ==","avatar_url":"https://avatars1.githubusercontent.com/u/251029?v=4","gravatar_id":"","url":"https://api.github.com/users/FestivalBobcats","html_url":"https://github.com/FestivalBobcats","followers_url":"https://api.github.com/users/FestivalBobcats/followers","following_url":"https://api.github.com/users/FestivalBobcats/following{/other_user}","gists_url":"https://api.github.com/users/FestivalBobcats/gists{/gist_id}","starred_url":"https://api.github.com/users/FestivalBobcats/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FestivalBobcats/subscriptions","organizations_url":"https://api.github.com/users/FestivalBobcats/orgs","repos_url":"https://api.github.com/users/FestivalBobcats/repos","events_url":"https://api.github.com/users/FestivalBobcats/events{/privacy}","received_events_url":"https://api.github.com/users/FestivalBobcats/received_events","type":"User","site_admin":false},"created_at":"2015-06-11T04:35:04Z","updated_at":"2015-06-11T06:07:34Z","author_association":"NONE","body":"Would it make more sense to have values (like  `query_total` and `query_time_in_millis`) presented in 2 or more forms -- for the entire process uptime **and** values within a time window? e.g. x total queries, x within the last 5 minutes?\n\nEdit: okay the time window is probably impractical if it's \"x minutes from _now_\"... maybe having a \"transient\" total that's periodically refreshed (`query_time_in_millis` since x minutes ago)?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111147725","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-111147725","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":111147725,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTE0NzcyNQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2015-06-11T14:08:34Z","updated_at":"2015-06-11T14:08:34Z","author_association":"CONTRIBUTOR","body":"> I don't think marvel should be in our way to make the API more human friendly where we can. We should solve this on the Marvel side. For this specific issue Marvel already have a protection in some places.\n\nRRDtool style bounds checking is probably the way to go here. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111149692","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-111149692","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":111149692,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTE0OTY5Mg==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2015-06-11T14:11:32Z","updated_at":"2015-06-11T14:11:32Z","author_association":"CONTRIBUTOR","body":"> Was there any further thought on this? Tracking changes in average query time, for example, is difficult when the process uptime is 10+ days and billions of requests have come through.\n\nI know I just mentioned RRDtool - but its job is to do this kind of thing. I'm pretty sure whisper will do the job too.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111219089","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-111219089","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":111219089,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTIxOTA4OQ==","user":{"login":"FestivalBobcats","id":251029,"node_id":"MDQ6VXNlcjI1MTAyOQ==","avatar_url":"https://avatars1.githubusercontent.com/u/251029?v=4","gravatar_id":"","url":"https://api.github.com/users/FestivalBobcats","html_url":"https://github.com/FestivalBobcats","followers_url":"https://api.github.com/users/FestivalBobcats/followers","following_url":"https://api.github.com/users/FestivalBobcats/following{/other_user}","gists_url":"https://api.github.com/users/FestivalBobcats/gists{/gist_id}","starred_url":"https://api.github.com/users/FestivalBobcats/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FestivalBobcats/subscriptions","organizations_url":"https://api.github.com/users/FestivalBobcats/orgs","repos_url":"https://api.github.com/users/FestivalBobcats/repos","events_url":"https://api.github.com/users/FestivalBobcats/events{/privacy}","received_events_url":"https://api.github.com/users/FestivalBobcats/received_events","type":"User","site_admin":false},"created_at":"2015-06-11T17:44:16Z","updated_at":"2015-06-11T17:44:16Z","author_association":"NONE","body":"@nik9000 I admittedly may be missing something, but how would RRDtool fix the issue? To clarify, it's simply an issue of a very long running average -- it would be totally fine if I could do a moving average, calculating the value I need based on a neighboring subset of data points.\n\nBut since Elasticsearch stats do not have data points over time (which is clearly understandable), the accuracy/sensitivity of the average degrades rather quickly on clusters with heavy traffic.\n\nI'm already aggregating these stats and persisting them over time in Kibana. But, just persisting the data points does not change the fact that averages (such as ms taken per query) can only be taken from a diluted total average (total queries / total query ms).\n\nI guess I could do something like this:\n1. When the first \"stat\" document is indexed, I record the original numbers for process uptime, total queries, and total query ms.\n2. I subtract those original numbers from the values each time I aggregate stats, calculating the average from a \"new\" baseline (as though the values were 0 when I started monitoring).\n3. Update the starting values for process uptime, total queries, etc. for _every node_ _every time it restarts_.\n\nMaybe I'm over-thinking this. Math is not my strong suit. But from my perspective, the fix to my problem is (so, so much) easier with a \"reset stats\" operation.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111237845","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-111237845","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":111237845,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTIzNzg0NQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-06-11T18:51:52Z","updated_at":"2015-06-11T18:51:52Z","author_association":"CONTRIBUTOR","body":"> it would be totally fine if I could do a moving average, calculating the value I need based on a neighboring subset of data points.\n\n@FestivalBobcats Coming soon, to a search engine near you: https://www.elastic.co/guide/en/elasticsearch/reference/master/search-aggregations-pipeline-movavg-aggregation.html\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111329762","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-111329762","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":111329762,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTMyOTc2Mg==","user":{"login":"FestivalBobcats","id":251029,"node_id":"MDQ6VXNlcjI1MTAyOQ==","avatar_url":"https://avatars1.githubusercontent.com/u/251029?v=4","gravatar_id":"","url":"https://api.github.com/users/FestivalBobcats","html_url":"https://github.com/FestivalBobcats","followers_url":"https://api.github.com/users/FestivalBobcats/followers","following_url":"https://api.github.com/users/FestivalBobcats/following{/other_user}","gists_url":"https://api.github.com/users/FestivalBobcats/gists{/gist_id}","starred_url":"https://api.github.com/users/FestivalBobcats/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FestivalBobcats/subscriptions","organizations_url":"https://api.github.com/users/FestivalBobcats/orgs","repos_url":"https://api.github.com/users/FestivalBobcats/repos","events_url":"https://api.github.com/users/FestivalBobcats/events{/privacy}","received_events_url":"https://api.github.com/users/FestivalBobcats/received_events","type":"User","site_admin":false},"created_at":"2015-06-12T02:19:33Z","updated_at":"2015-06-12T02:21:40Z","author_association":"NONE","body":"@clintongormley super cool feature -- looking forward to it.\n\nHowever (apologies for being a nuisance), even with a moving average, if the time-series data point I'm collecting from `/_nodes/stats?indices` is `average_query_ms` (or really `average_anything`), it's calculated from two (potentially _huge_) running totals -- some total amount of time (`query_time_in_millis`) and some total (`query_total`). Thus, seeing any sharp changes in this value is impossible after a few hours of production use.\n\nThis is an issue with several large clusters I'm dealing with. The only solutions I see:\n\n1.) Periodically resetting counters such as `query_total` and `query_time_in_millis`. I don't see much of a downside to this other than the actual implementation within Elasticsearch itself -- I'm currently not sure of the feasibility of this.\n\n2.) On each capture of this info, storing the \"existing\" or \"baseline\" totals such as `query_total` (somewhere) in order to eliminate the impact of some previous state of the system in current calculations.\n\nThese \"baseline\" totals would have to be reset when nodes are restarted, introducing some extra complexity.\n\nThis is doable, but is a huge pain in my ass -- of course a \"reset stat counter\" feature may be equally so for the ES team. If it's the only practical way to achieve this for the time being, then I guess it will have to do.\n\n3.) Not depending on Elasticsearch stats for this info... Though for something like `average_query_ms`, it's unclear to me how I could aggregate this data outside of Elasticsearch. Some requests go through a proxy using HTTP, but for the ones using the TransportClient, I don't have any practical external way of determining the type of operation and it's runtime.\n\n**Note** all this info should make more sense in the context of me not having access to the application. Purely devops-level monitoring.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111557156","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-111557156","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":111557156,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTU1NzE1Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-06-12T16:59:48Z","updated_at":"2015-06-12T16:59:48Z","author_association":"CONTRIBUTOR","body":"@FestivalBobcats we don't provide `average_query_ms` or similar, only totals, so for any periodic monitoring this shouldn't be an issue, no? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111559263","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-111559263","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":111559263,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTU1OTI2Mw==","user":{"login":"FestivalBobcats","id":251029,"node_id":"MDQ6VXNlcjI1MTAyOQ==","avatar_url":"https://avatars1.githubusercontent.com/u/251029?v=4","gravatar_id":"","url":"https://api.github.com/users/FestivalBobcats","html_url":"https://github.com/FestivalBobcats","followers_url":"https://api.github.com/users/FestivalBobcats/followers","following_url":"https://api.github.com/users/FestivalBobcats/following{/other_user}","gists_url":"https://api.github.com/users/FestivalBobcats/gists{/gist_id}","starred_url":"https://api.github.com/users/FestivalBobcats/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FestivalBobcats/subscriptions","organizations_url":"https://api.github.com/users/FestivalBobcats/orgs","repos_url":"https://api.github.com/users/FestivalBobcats/repos","events_url":"https://api.github.com/users/FestivalBobcats/events{/privacy}","received_events_url":"https://api.github.com/users/FestivalBobcats/received_events","type":"User","site_admin":false},"created_at":"2015-06-12T17:07:08Z","updated_at":"2015-06-12T17:07:08Z","author_association":"NONE","body":"@clintongormley yes, the `average_query_ms` is a calculation on my end.\n\nThe problem, in the simplest way I can verbalize, is that those totals become basically worthless after a significant volume of requests.\n\nYes, I could (and am currently doing so) store those values like `query_total` periodically, and then calculate the difference between those totals at each interval.\n\nSo, at either the point of indexing a doc with this `average_query_ms`, or at the point of searching, I must pull up the doc recorded the interval prior to know how many queries have happened during that interval.\n\nWhatever the case, I get that this is likely a frivolous feature for the community at large, and so I'm already well on my way to a custom solution.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111575387","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-111575387","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":111575387,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTU3NTM4Nw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-06-12T17:58:00Z","updated_at":"2015-06-12T17:58:00Z","author_association":"CONTRIBUTOR","body":"@FestivalBobcats Don't forget I was the one who opened this issue in the first place :)  My reason for wanting it was a JS diagnostics plugin that just produced a snapshot of the current state (and yes the calculated averages etc) become less meaningful the longer the system is up.\n\nLike you I ended up just keeping the first set of stats around in the browser and using them to calculate a delta.  I can still see the benefit of being able to reset stats.\n\nThat said, for any long term monitoring, storing the absolute values and using aggs to do the calculations is probably the way to go.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/111764938","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-111764938","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":111764938,"node_id":"MDEyOklzc3VlQ29tbWVudDExMTc2NDkzOA==","user":{"login":"FestivalBobcats","id":251029,"node_id":"MDQ6VXNlcjI1MTAyOQ==","avatar_url":"https://avatars1.githubusercontent.com/u/251029?v=4","gravatar_id":"","url":"https://api.github.com/users/FestivalBobcats","html_url":"https://github.com/FestivalBobcats","followers_url":"https://api.github.com/users/FestivalBobcats/followers","following_url":"https://api.github.com/users/FestivalBobcats/following{/other_user}","gists_url":"https://api.github.com/users/FestivalBobcats/gists{/gist_id}","starred_url":"https://api.github.com/users/FestivalBobcats/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FestivalBobcats/subscriptions","organizations_url":"https://api.github.com/users/FestivalBobcats/orgs","repos_url":"https://api.github.com/users/FestivalBobcats/repos","events_url":"https://api.github.com/users/FestivalBobcats/events{/privacy}","received_events_url":"https://api.github.com/users/FestivalBobcats/received_events","type":"User","site_admin":false},"created_at":"2015-06-14T00:03:12Z","updated_at":"2015-06-14T00:03:12Z","author_association":"NONE","body":"@clintongormley haha, sorry to hijack the spotlight. Like you, I'm still all for a reset stats feature. For the time being though, caching the running totals at each interval (to subtract from the values next interval) has worked well, and wasn't as hard as I thought.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/162213302","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-162213302","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":162213302,"node_id":"MDEyOklzc3VlQ29tbWVudDE2MjIxMzMwMg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-12-05T15:49:06Z","updated_at":"2015-12-05T15:49:06Z","author_association":"CONTRIBUTOR","body":"Given that we now have moving averages etc, I think this feature request is no longer needed. Closing\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/201339451","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-201339451","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":201339451,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTMzOTQ1MQ==","user":{"login":"dadoonet","id":274222,"node_id":"MDQ6VXNlcjI3NDIyMg==","avatar_url":"https://avatars3.githubusercontent.com/u/274222?v=4","gravatar_id":"","url":"https://api.github.com/users/dadoonet","html_url":"https://github.com/dadoonet","followers_url":"https://api.github.com/users/dadoonet/followers","following_url":"https://api.github.com/users/dadoonet/following{/other_user}","gists_url":"https://api.github.com/users/dadoonet/gists{/gist_id}","starred_url":"https://api.github.com/users/dadoonet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dadoonet/subscriptions","organizations_url":"https://api.github.com/users/dadoonet/orgs","repos_url":"https://api.github.com/users/dadoonet/repos","events_url":"https://api.github.com/users/dadoonet/events{/privacy}","received_events_url":"https://api.github.com/users/dadoonet/received_events","type":"User","site_admin":false},"created_at":"2016-03-25T15:46:20Z","updated_at":"2016-03-25T15:46:20Z","author_association":"MEMBER","body":"Actually I don't see how moving averages is helping to clear existing stats.\nI'm probably missing something.\n\nIMO we should reopen this issue and try to reset current stats (if possible) exactly like after a rolling restart but without taking any risk of restarting a cluster.\n\n@clintongormley WDYT?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/210497941","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-210497941","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":210497941,"node_id":"MDEyOklzc3VlQ29tbWVudDIxMDQ5Nzk0MQ==","user":{"login":"ESamir","id":9035864,"node_id":"MDQ6VXNlcjkwMzU4NjQ=","avatar_url":"https://avatars1.githubusercontent.com/u/9035864?v=4","gravatar_id":"","url":"https://api.github.com/users/ESamir","html_url":"https://github.com/ESamir","followers_url":"https://api.github.com/users/ESamir/followers","following_url":"https://api.github.com/users/ESamir/following{/other_user}","gists_url":"https://api.github.com/users/ESamir/gists{/gist_id}","starred_url":"https://api.github.com/users/ESamir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ESamir/subscriptions","organizations_url":"https://api.github.com/users/ESamir/orgs","repos_url":"https://api.github.com/users/ESamir/repos","events_url":"https://api.github.com/users/ESamir/events{/privacy}","received_events_url":"https://api.github.com/users/ESamir/received_events","type":"User","site_admin":false},"created_at":"2016-04-15T15:07:28Z","updated_at":"2016-04-15T15:25:31Z","author_association":"NONE","body":"+1 to add reset stats feature\n\n@clintongormley how moving averages will help here ? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/221564274","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-221564274","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":221564274,"node_id":"MDEyOklzc3VlQ29tbWVudDIyMTU2NDI3NA==","user":{"login":"hsmithatemma","id":7441020,"node_id":"MDQ6VXNlcjc0NDEwMjA=","avatar_url":"https://avatars3.githubusercontent.com/u/7441020?v=4","gravatar_id":"","url":"https://api.github.com/users/hsmithatemma","html_url":"https://github.com/hsmithatemma","followers_url":"https://api.github.com/users/hsmithatemma/followers","following_url":"https://api.github.com/users/hsmithatemma/following{/other_user}","gists_url":"https://api.github.com/users/hsmithatemma/gists{/gist_id}","starred_url":"https://api.github.com/users/hsmithatemma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hsmithatemma/subscriptions","organizations_url":"https://api.github.com/users/hsmithatemma/orgs","repos_url":"https://api.github.com/users/hsmithatemma/repos","events_url":"https://api.github.com/users/hsmithatemma/events{/privacy}","received_events_url":"https://api.github.com/users/hsmithatemma/received_events","type":"User","site_admin":false},"created_at":"2016-05-25T12:45:25Z","updated_at":"2016-05-25T12:49:52Z","author_association":"NONE","body":"+1 to clearing counters. It would be helpful.\nSpecifically these - /_cat/thread_pool:\nbulk.active bulk.queue bulk.rejected index.active index.queue index.rejected search.active search.queue search.rejected\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225307542","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-225307542","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":225307542,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTMwNzU0Mg==","user":{"login":"ppf2","id":7216393,"node_id":"MDQ6VXNlcjcyMTYzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/7216393?v=4","gravatar_id":"","url":"https://api.github.com/users/ppf2","html_url":"https://github.com/ppf2","followers_url":"https://api.github.com/users/ppf2/followers","following_url":"https://api.github.com/users/ppf2/following{/other_user}","gists_url":"https://api.github.com/users/ppf2/gists{/gist_id}","starred_url":"https://api.github.com/users/ppf2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppf2/subscriptions","organizations_url":"https://api.github.com/users/ppf2/orgs","repos_url":"https://api.github.com/users/ppf2/repos","events_url":"https://api.github.com/users/ppf2/events{/privacy}","received_events_url":"https://api.github.com/users/ppf2/received_events","type":"User","site_admin":false},"created_at":"2016-06-10T22:06:06Z","updated_at":"2016-06-10T22:06:06Z","author_association":"MEMBER","body":"Reopening for it doesn't look resolved yet.  As part of this request, if we do implement a stats reset, it may also be helpful to record the timestamp of the last time the stats were \"requested to be\" reset - for those who may actually be expecting stats from the time of the last reset (and not realizing that the stats were manually reset by someone else for example) - sometimes for troubleshooting you will actually want to see stats from the last uptime, but other times, you may want to reset stats without restarting the server to reproduce something, etc..\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/225681370","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-225681370","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":225681370,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNTY4MTM3MA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-06-13T19:22:39Z","updated_at":"2016-06-13T19:22:39Z","author_association":"CONTRIBUTOR","body":"I'm -1 on resetting stats and adding this unneeded complexity.  Monitoring tools are built to handle ever-increasing totals.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/250133568","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-250133568","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":250133568,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MDEzMzU2OA==","user":{"login":"thenom","id":3070415,"node_id":"MDQ6VXNlcjMwNzA0MTU=","avatar_url":"https://avatars1.githubusercontent.com/u/3070415?v=4","gravatar_id":"","url":"https://api.github.com/users/thenom","html_url":"https://github.com/thenom","followers_url":"https://api.github.com/users/thenom/followers","following_url":"https://api.github.com/users/thenom/following{/other_user}","gists_url":"https://api.github.com/users/thenom/gists{/gist_id}","starred_url":"https://api.github.com/users/thenom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thenom/subscriptions","organizations_url":"https://api.github.com/users/thenom/orgs","repos_url":"https://api.github.com/users/thenom/repos","events_url":"https://api.github.com/users/thenom/events{/privacy}","received_events_url":"https://api.github.com/users/thenom/received_events","type":"User","site_admin":false},"created_at":"2016-09-28T10:46:17Z","updated_at":"2016-09-28T10:46:17Z","author_association":"NONE","body":"I currently would find a version of this fix to be handy as i am trying to setup a watcher on the rejected requests field in the marvel data. I am finding it hard to generate a conditional that will trigger on a value that doesn't represent the last x minutes.\n\nSo, for example, on our test setup our bulk rejected is 112. This might not change for days so how do i know when to trigger the action. It is fine having a running total but would it be worth have a field for 'count_since_last_sample'?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/252420242","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-252420242","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":252420242,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MjQyMDI0Mg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-10-08T11:45:52Z","updated_at":"2016-10-08T11:45:52Z","author_association":"CONTRIBUTOR","body":"@thenom a better way to fix this is for watcher to be able to store some history, which can be referred to in subsequent executions.  This is on the roadmap.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/252434925","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-252434925","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":252434925,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MjQzNDkyNQ==","user":{"login":"thenom","id":3070415,"node_id":"MDQ6VXNlcjMwNzA0MTU=","avatar_url":"https://avatars1.githubusercontent.com/u/3070415?v=4","gravatar_id":"","url":"https://api.github.com/users/thenom","html_url":"https://github.com/thenom","followers_url":"https://api.github.com/users/thenom/followers","following_url":"https://api.github.com/users/thenom/following{/other_user}","gists_url":"https://api.github.com/users/thenom/gists{/gist_id}","starred_url":"https://api.github.com/users/thenom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thenom/subscriptions","organizations_url":"https://api.github.com/users/thenom/orgs","repos_url":"https://api.github.com/users/thenom/repos","events_url":"https://api.github.com/users/thenom/events{/privacy}","received_events_url":"https://api.github.com/users/thenom/received_events","type":"User","site_admin":false},"created_at":"2016-10-08T16:44:14Z","updated_at":"2016-10-08T17:09:18Z","author_association":"NONE","body":"Brilliant, cheers.\n\nIs this an issue on github i can subscribe to?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/650081685","html_url":"https://github.com/elastic/elasticsearch/issues/9693#issuecomment-650081685","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9693","id":650081685,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MDA4MTY4NQ==","user":{"login":"ebuildy","id":1219817,"node_id":"MDQ6VXNlcjEyMTk4MTc=","avatar_url":"https://avatars0.githubusercontent.com/u/1219817?v=4","gravatar_id":"","url":"https://api.github.com/users/ebuildy","html_url":"https://github.com/ebuildy","followers_url":"https://api.github.com/users/ebuildy/followers","following_url":"https://api.github.com/users/ebuildy/following{/other_user}","gists_url":"https://api.github.com/users/ebuildy/gists{/gist_id}","starred_url":"https://api.github.com/users/ebuildy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ebuildy/subscriptions","organizations_url":"https://api.github.com/users/ebuildy/orgs","repos_url":"https://api.github.com/users/ebuildy/repos","events_url":"https://api.github.com/users/ebuildy/events{/privacy}","received_events_url":"https://api.github.com/users/ebuildy/received_events","type":"User","site_admin":false},"created_at":"2020-06-26T09:22:21Z","updated_at":"2020-06-26T09:22:21Z","author_association":"CONTRIBUTOR","body":"Good idea, this is really blocking for basic alerting , if we want an alert as soon as a thread is rejected.","performed_via_github_app":null}]