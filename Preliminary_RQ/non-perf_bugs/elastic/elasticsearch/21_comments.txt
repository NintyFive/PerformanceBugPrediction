[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/136685","html_url":"https://github.com/elastic/elasticsearch/issues/21#issuecomment-136685","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21","id":136685,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNjY4NQ==","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2010-02-16T19:48:04Z","updated_at":"2010-02-16T19:48:04Z","author_association":"MEMBER","body":"Terms API: Allow to get terms for one or more field. Closed by 5d781961a07368ae458126e4fad0a8db566637da.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/138572","html_url":"https://github.com/elastic/elasticsearch/issues/21#issuecomment-138572","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21","id":138572,"node_id":"MDEyOklzc3VlQ29tbWVudDEzODU3Mg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2010-02-18T16:53:21Z","updated_at":"2010-02-18T16:53:21Z","author_association":"CONTRIBUTOR","body":"Please could you provide the docs for the usage of terms, so that I can add it to ElasticSearch.pm\n\nthanks\n\nclint\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/141152","html_url":"https://github.com/elastic/elasticsearch/issues/21#issuecomment-141152","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21","id":141152,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MTE1Mg==","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2010-02-21T23:38:47Z","updated_at":"2010-02-21T23:38:47Z","author_association":"MEMBER","body":"The terms API accepts the following uris:\n- GET /_terms\n- GET /{index}/_terms (where {index} can be one or more indices, with _all support)\n\nThe http parameters are (fields or field must be set):\n- fields: The fields to search on, comma separated.\n- field: The field to search on, can be multiple HTTP field parameters.\n- from: The lower bound (lex) term from which the iteration will start.  Defaults to start from the first.\n- to: The upper bound (lex) term to which the iteration will end. Defaults to unbound (null).\n- fromInclusive: Should the first from (if set) be inclusive or not. Defaults to false.\n- toInclusive: Should the last to (if set) be inclusive or not. Defaults to true.\n- prefix: An optional prefix from which the terms iteration will start (in lex order).\n- regexp: An optional regular expression to filter out terms (only the ones that match the regexp will return).\n- minFreq: An optional minimum document frequency to filter out terms.\n- maxFreq: An optional maximum document frequency to filter out terms.\n- size: The number of term / doc freq pairs to return per field. Defaults to 10.\n- sort: The type of sorting for term / doc freq. Can either be \"term\" or \"freq\". Defaults to term.\n\nThe field names support for indexName based lookup, and full path lookup (can have a type prefix or not).\n\nThe results basically include a docs header, and then a object named based on the field name, and the term and document frequency for each.\n\nThe only thing that I am not sure about is that currently, the term value is the JSON object name, and I wonder if it make sense to create generic JSON object, with a term field inside with its value, what do you think?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/141165","html_url":"https://github.com/elastic/elasticsearch/issues/21#issuecomment-141165","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21","id":141165,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MTE2NQ==","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2010-02-21T23:52:27Z","updated_at":"2010-02-21T23:52:27Z","author_association":"MEMBER","body":"Regarding my previous question, I simply added another http boolean parameter called termsAsArray. It defaults to true, which means you will get an array of JSON objects, with term and docFreq as fields. This will also maintain the order for parsers that are not order aware (since you can sort). If set to false, it will return JSON object names with the term itself.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/141733","html_url":"https://github.com/elastic/elasticsearch/issues/21#issuecomment-141733","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21","id":141733,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MTczMw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2010-02-22T17:44:25Z","updated_at":"2010-02-22T17:45:29Z","author_association":"CONTRIBUTOR","body":"> fromInclusive: Should the first from (if set) be inclusive or not. Defaults to false.\n> toInclusive: Should the last to (if set) be inclusive or not. Defaults to true\n\nYou mean fromInclusive defaults to TRUE.  I've renamed these `exclude_from` and `exclude_to` so that the default (unspecified) is false.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/141742","html_url":"https://github.com/elastic/elasticsearch/issues/21#issuecomment-141742","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21","id":141742,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MTc0Mg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2010-02-22T17:56:25Z","updated_at":"2010-02-22T17:56:25Z","author_association":"CONTRIBUTOR","body":"What do you mean by this:\n\n> The field names support for indexName based lookup, and full path lookup (can have \n> a type prefix or not).\n\nCan you give me an example of the format?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/141834","html_url":"https://github.com/elastic/elasticsearch/issues/21#issuecomment-141834","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21","id":141834,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MTgzNA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2010-02-22T19:36:09Z","updated_at":"2010-02-22T19:36:09Z","author_association":"CONTRIBUTOR","body":"> fromInclusive: Should the first from (if set) be inclusive or not. Defaults to false. \n> toInclusive: Should the last to (if set) be inclusive or not. Defaults to true\n\nActually, these are both incorrect.  Currently `fromInclusive` is `true` and `toInclusive` is `false`.\n\nWhy do you have these as different values?  From the naming of `from` and `to`, I'd expect them to be inclusive, and only to exclude them if specified.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/141891","html_url":"https://github.com/elastic/elasticsearch/issues/21#issuecomment-141891","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21","id":141891,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MTg5MQ==","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2010-02-22T20:20:30Z","updated_at":"2010-02-22T20:20:30Z","author_association":"MEMBER","body":"The idea of fromInclusive and toInclusive is to follow the usually convention of writing a for loop, something like for (i=0;i<10;i++), in this case, the from (0) is inclusive, and to to is not. In any case, I suggest that you follow the same wording and parameters elasticsearch uses, so you won't confuse users. We can talk about if it make sense to change this, but while I suggest keeping it the same.\n\nRegarding the field name, it is exaplined a bit here (http://www.elasticsearch.com/docs/elasticsearch/mapping/object_type/#pathType), though I should add a page that explains it explicitly. For example, if you have (person is the type of the mapping):\n\n```\n{ person : { name : { firstName : \"...\", lastName : \"...\" } } }\n```\n\nthen the field name (that will match) will be either person.name.firstName, or name.firstName. If you add explicit mapping for the name object (or person), you can control the pathType.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/141906","html_url":"https://github.com/elastic/elasticsearch/issues/21#issuecomment-141906","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21","id":141906,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MTkwNg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2010-02-22T20:38:30Z","updated_at":"2010-02-22T20:38:30Z","author_association":"CONTRIBUTOR","body":"> The idea of fromInclusive and toInclusive is to follow the usually convention of writing\n> a for loop, something like for (i=0;i<10;i++), \n\nOK - I didn't get that. I would say then they should be called `from` and `until`, rather than `to`.\n\nIn Perl (and some other dynamic languages), loops can be written more succinctly, like:\n\n```\nfor (1..5) {  }\nforeach my $name (@names) \n```\n\n... both of which are inclusive.  To my mind, basing the default values of `fromInclusive` and `toInclusive` on a `for` loop exposes implementation, rather than representing how a user might think in natural language.\n\n> Regarding the field name....\n\nOK, I have two mappings: type_1 and type_2. Both have a field 'text', but i ask for terms on field 'text' or 'type_1.text', I get the same results, which doesn't seem to be what I'm asking.\n\nIs this what it is supposed to do?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/141932","html_url":"https://github.com/elastic/elasticsearch/issues/21#issuecomment-141932","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/21","id":141932,"node_id":"MDEyOklzc3VlQ29tbWVudDE0MTkzMg==","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2010-02-22T20:55:27Z","updated_at":"2010-02-22T20:55:27Z","author_association":"MEMBER","body":"No problem, make sense, I will change the toInclusive to true.\n\nRegarding the field name, yea, its not filtered by type if you prefix it by type (which is different than if you use the typed field in search queries for example). It can be implemented, but its more difficult and will be _much_ more expensive to perform, so for now, I did not implement it.\n","performed_via_github_app":null}]