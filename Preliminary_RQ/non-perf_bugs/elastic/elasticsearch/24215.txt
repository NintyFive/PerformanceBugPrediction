{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/24215","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24215/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24215/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24215/events","html_url":"https://github.com/elastic/elasticsearch/issues/24215","id":223075860,"node_id":"MDU6SXNzdWUyMjMwNzU4NjA=","number":24215,"title":"ES 5.2.2 Heap spikes on aggregations, causing OOM","user":{"login":"vineet01","id":13980705,"node_id":"MDQ6VXNlcjEzOTgwNzA1","avatar_url":"https://avatars2.githubusercontent.com/u/13980705?v=4","gravatar_id":"","url":"https://api.github.com/users/vineet01","html_url":"https://github.com/vineet01","followers_url":"https://api.github.com/users/vineet01/followers","following_url":"https://api.github.com/users/vineet01/following{/other_user}","gists_url":"https://api.github.com/users/vineet01/gists{/gist_id}","starred_url":"https://api.github.com/users/vineet01/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vineet01/subscriptions","organizations_url":"https://api.github.com/users/vineet01/orgs","repos_url":"https://api.github.com/users/vineet01/repos","events_url":"https://api.github.com/users/vineet01/events{/privacy}","received_events_url":"https://api.github.com/users/vineet01/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-04-20T13:56:07Z","updated_at":"2017-05-29T08:13:21Z","closed_at":"2017-04-21T09:09:40Z","author_association":"NONE","active_lock_reason":null,"body":"The issue is similar to the one reported in https://github.com/elastic/elasticsearch/issues/23868.\r\n\r\nTested on oracle JDK 1.8.0_112, 1.8.0_91 with mock data loaded in both 2.3.3 and 5.2.2 clusters running on the same system.\r\nMappings and doc counts are exactly same for both instances. (62K docs).\r\n\r\nAggregations are being performed on raw fields which are not_analyzed.\r\n\r\nConfiguration:\r\n\r\n- 4GB Max heap size.\r\n- indices.breaker.request.limit: 40%\r\n- Default CMS settings.\r\n- No extra plugins.\r\n\r\nScreenshot of Kibana with a visualization which I tested with. (sole purpose of this visualization is to compare performance b/w 2.3.3 and 5.2.2):\r\n\r\nhttps://www.dropbox.com/s/rl5sfucdmo006pe/kibana_es2.3.3.png?dl=0\r\nhttps://www.dropbox.com/s/r5cqwe19abz3g92/kibana_es5.2.2.png?dl=0\r\n\r\n53 MB bzipped heap dump can be downloaded @ https://www.dropbox.com/s/os0bgn4nuq7ra7z/java_pid18280.hprof.bz2?dl=0.\r\n\r\nException: \r\n\r\nCaused by: org.elasticsearch.common.breaker.CircuitBreakingException: [request] Data too large, data for [<reused_arrays>] would be larger than limit of [1704040857/1.5gb]\r\n\r\nAlso on the same note, I will like to share that reducing precision_threshold improves this behaviour, I was able to successfully get results on the same with -> {\"precision_threshold\":1}.\r\n\r\nPlease review.","closed_by":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"performed_via_github_app":null}