[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/32214671","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-32214671","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":32214671,"node_id":"MDEyOklzc3VlQ29tbWVudDMyMjE0Njcx","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2014-01-13T21:41:42Z","updated_at":"2014-01-13T21:41:42Z","author_association":"MEMBER","body":"Could you provide a complete reproduction that would help us to reproduce the issue? See http://www.elasticsearch.org/help/ for an example.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/68067696","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-68067696","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":68067696,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MDY3Njk2","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-12-24T18:14:50Z","updated_at":"2014-12-24T18:14:50Z","author_association":"CONTRIBUTOR","body":"Recreation:\n\n```\nPUT /t/t/1\n{\n  \"content\": \"This repository has been removed\"\n}\n\n\nGET /t/_search\n{\n  \"query\": {\n    \"simple_query_string\": {\n      \"query\": \"+this -removed\",\n      \"fields\": [\n        \"content\",\n        \"headline\"\n      ]\n    }\n  }\n}\n```\n\nThe negated term is ignored, because with `default_operator: \"OR\"`, it is optional.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/68069676","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-68069676","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":68069676,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MDY5Njc2","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2014-12-24T18:59:57Z","updated_at":"2014-12-24T19:03:45Z","author_association":"MEMBER","body":"@clintongormley not sure how this is a bug though? This is like saying \"contains the term **this** OR does not contain **removed**\", which the document does (it contains the term \"this\")\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/68246019","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-68246019","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":68246019,"node_id":"MDEyOklzc3VlQ29tbWVudDY4MjQ2MDE5","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-12-29T10:19:50Z","updated_at":"2014-12-29T10:19:50Z","author_association":"CONTRIBUTOR","body":"I think that a user would expect `foo bar -baz` (with default operator `OR`) to match as if they had written: `+(foo bar) -baz`.  Otherwise, a negated clause with default operator `OR` is meaningless.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/75659921","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-75659921","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":75659921,"node_id":"MDEyOklzc3VlQ29tbWVudDc1NjU5OTIx","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2015-02-23T23:20:12Z","updated_at":"2015-02-23T23:20:12Z","author_association":"MEMBER","body":"@clintongormley I'm still not sure that this is actually a bug, the negated clause with the default `OR` operation is not meaningless (it has meaning, it just means\" anything that does not contain this\"). I think what is desired is setting `default_operator` to `AND`, which is a user-changeable setting?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/132445550","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-132445550","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":132445550,"node_id":"MDEyOklzc3VlQ29tbWVudDEzMjQ0NTU1MA==","user":{"login":"ppf2","id":7216393,"node_id":"MDQ6VXNlcjcyMTYzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/7216393?v=4","gravatar_id":"","url":"https://api.github.com/users/ppf2","html_url":"https://github.com/ppf2","followers_url":"https://api.github.com/users/ppf2/followers","following_url":"https://api.github.com/users/ppf2/following{/other_user}","gists_url":"https://api.github.com/users/ppf2/gists{/gist_id}","starred_url":"https://api.github.com/users/ppf2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppf2/subscriptions","organizations_url":"https://api.github.com/users/ppf2/orgs","repos_url":"https://api.github.com/users/ppf2/repos","events_url":"https://api.github.com/users/ppf2/events{/privacy}","received_events_url":"https://api.github.com/users/ppf2/received_events","type":"User","site_admin":false},"created_at":"2015-08-19T04:55:28Z","updated_at":"2015-08-19T04:55:28Z","author_association":"MEMBER","body":"@dakrone @clintongormley Here is another [use case](https://gist.github.com/ppf2/e56c34151113115c1266) from the field.  Is this a bug or not currently supported (a feature)?  Don't think default_operator:AND will help here since the use case is to return both documents in the example. thx\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/134521519","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-134521519","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":134521519,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNDUyMTUxOQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-08-25T08:25:49Z","updated_at":"2015-08-25T08:26:31Z","author_association":"CONTRIBUTOR","body":"@ppf2 Actually, your example works as expected if you use the `simple_query_string` (you used the `query_string`query instead).  As a query string query, you would need to change:\n\n```\n\"(name:Android) OR NOT (status:approved)\"\n```\n\nto:\n\n```\n\"(name:Android) OR (NOT status:approved)\"\n```\n\nThe latter, when run through validate-query, shows the following:\n\n```\n\"name:android (-status:approved +*:*)\"\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/134671530","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-134671530","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":134671530,"node_id":"MDEyOklzc3VlQ29tbWVudDEzNDY3MTUzMA==","user":{"login":"ppf2","id":7216393,"node_id":"MDQ6VXNlcjcyMTYzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/7216393?v=4","gravatar_id":"","url":"https://api.github.com/users/ppf2","html_url":"https://github.com/ppf2","followers_url":"https://api.github.com/users/ppf2/followers","following_url":"https://api.github.com/users/ppf2/following{/other_user}","gists_url":"https://api.github.com/users/ppf2/gists{/gist_id}","starred_url":"https://api.github.com/users/ppf2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppf2/subscriptions","organizations_url":"https://api.github.com/users/ppf2/orgs","repos_url":"https://api.github.com/users/ppf2/repos","events_url":"https://api.github.com/users/ppf2/events{/privacy}","received_events_url":"https://api.github.com/users/ppf2/received_events","type":"User","site_admin":false},"created_at":"2015-08-25T17:03:24Z","updated_at":"2015-08-25T17:03:24Z","author_association":"MEMBER","body":"Ah got it, thx @clintongormley for the tip!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148087381","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-148087381","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":148087381,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODA4NzM4MQ==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2015-10-14T15:32:36Z","updated_at":"2015-10-14T15:32:36Z","author_association":"CONTRIBUTOR","body":"Taking a look.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148115044","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-148115044","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":148115044,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODExNTA0NA==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2015-10-14T16:54:37Z","updated_at":"2015-10-14T16:54:37Z","author_association":"CONTRIBUTOR","body":"This is working as expected as @dakrone has inferred.  The SimpleQueryParser should be thought of as only using AND and OR as operators.  There is no concept of SHOULD and MUST other than internally to create the AND and OR queries.  So when doing the query \"+this -removed\" the AND (+) is actually ignored as it is not thought of as a MUST.  Using SimpleQueryParser this will always be the case where the query ends up being documents that either have 'this' OR not 'removed'  ... Also note, that while this will return all the documents, the not 'removed' still affects scoring so it's not meaningless.  Going to leave this open for now for further discussion if necessary.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148364757","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-148364757","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":148364757,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODM2NDc1Nw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-10-15T11:51:52Z","updated_at":"2015-10-15T11:51:52Z","author_association":"CONTRIBUTOR","body":"While it may be working as designed, I'd argue that the syntax is surprising to most users.  For example:\n\n```\nPOST t/t/_bulk\n{\"index\":{\"_id\":1}}\n{\"foo\":\"one\"}\n{\"index\":{\"_id\":2}}\n{\"foo\":\"two\"}\n{\"index\":{\"_id\":3}}\n{\"foo\":\"one two\"}\n{\"index\":{\"_id\":4}}\n{\"foo\":\"three\"}\n```\n\nI would expect the following:\n- `\"one\"`:  Return docs 1 & 3 (works)\n- `\"-two\"`: Return docs 1 & 3 (works)\n- `\"one -two\"`: Return doc 1 (returns 1, 3, & 4)\n- `\"one three -two\"`:  Return docs 1 & 4 (returns 1, 3 & 4)\n\nTo get what I want (ie \"Give me docs with one or three, but exclude anything with two\") I need to write it as `\"one three +-two\"`.  That is not at all intuitive.  If I typed `\"windows -microsoft\"` into google, I wouldn't expect Google to return all of the documents on the internet which don't contain the word microsoft.\n\nAt the very least it should be well documented but, given that this query is intended to be exposed to users who will not read documentation, I would say that the syntax could be improved.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148401074","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-148401074","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":148401074,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQwMTA3NA==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2015-10-15T14:24:32Z","updated_at":"2015-10-15T14:24:32Z","author_association":"MEMBER","body":"> If I typed \"windows -microsoft\" into google, I wouldn't expect Google to return all of the documents on the internet which don't contain the word microsoft.\n\n@clintongormley that's because google (as well as most other search engines in 21st century) is using `AND` instead of `OR` as a default operator, which should be the default behavior for elasticsearch as well IMO. Having `OR` as a default operator is causing all sort of confusion for many new users.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148404542","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-148404542","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":148404542,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQwNDU0Mg==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-10-15T14:32:44Z","updated_at":"2015-10-15T14:32:44Z","author_association":"CONTRIBUTOR","body":"Not really. if you query https://www.google.com/?gws_rd=ssl#q=elasticsearch+reference+query+dsl+oracle it gladly returns high ranking hits and just tells you: Missing: oracle\n\nSwitching to AND breaks many analysis chains such as n-grams. With a good ranking algo its also not necessary, its just that DefaultSimilarity is really weak here.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148428747","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-148428747","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":148428747,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQyODc0Nw==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2015-10-15T15:46:28Z","updated_at":"2015-10-15T15:47:10Z","author_association":"CONTRIBUTOR","body":"I agree that this syntax is ugly -- \"one three +-two\" ; however, I am reluctant to special case the not operator because right now you have one OR three OR NOT two which while may be unexpected is predictable, but if I change this it becomes one OR three AND NOT two which is no longer predictable because it ignores the default operator and it loses its consistency.  It is also very difficult to predict proper sub queries outside of this simple case.  Take for example \"one -three two\" -- is this one AND not three OR two?  Do I need to reorder this?  I think this would end up being more confusing because of the way operator precedence works in that it's always first come first serve.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148429969","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-148429969","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":148429969,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQyOTk2OQ==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2015-10-15T15:51:13Z","updated_at":"2015-10-15T15:51:13Z","author_association":"MEMBER","body":"What google does, is some weird \"fuzzy\" AND (or something like `should` with large minimum should match) search that google turns on a long tail queries with a large number of terms. But the basic behavior with 2-3 term queries resembles AND more than OR, would you agree?\n\nn-grams is an advanced feature, I think if a user can figure out how to enable n-gram (or configure any other custom analysis chain) they should be able to figure out how to switch from AND to OR in the query.\n\nAnyway, I shouldn't hijack this discussion. I apologize for that. Back to the original topic. I think that my expectation would be that `foo bar +baz -qux` should be translated into something like this:\n\n```\n{\n   \"bool\": {\n        \"should\" : [\n            {\n                \"term\" : { \"_all\" : \"foo\" }\n            }, {\n                \"term\" : { \"_all\" : \"bar\" }\n            }\n        ],\n        \"must\" : {\n            \"term\" : { \"_all\" : \"baz\" }\n        },\n        \"must_not\" : {\n            \"term\" : { \"_all\" : \"qux\" }\n        }\n   }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148434035","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-148434035","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":148434035,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQzNDAzNQ==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2015-10-15T16:00:30Z","updated_at":"2015-10-15T16:01:18Z","author_association":"CONTRIBUTOR","body":"I should explain further what happens right now, each time an AND is switched to an OR or vice versa a new boolean query branch is created.  So if you have a b c  +d +e  f the tree ends up looking like\n\nbq( should bq( should bq( should a should b should c ) must d must e ) should f)\n\nso changing the not operator to always use must will have an inconsistent change in boolean query branches since operator precedence is always left to right.\n\nWe could change it to be something like @imotov suggests (maybe this should be a different parser altogether in Lucene?), but then you have should, must, and must not... if you're truly a basic user I think and/or is easier to understand than should/must/must not.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148441151","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-148441151","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":148441151,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQ0MTE1MQ==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2015-10-15T16:13:24Z","updated_at":"2015-10-15T16:13:24Z","author_association":"MEMBER","body":"> I should explain further what happens right now, each time an AND is switched to an OR or vice versa a new boolean query branch is created. \n\nYes, and this is where it breaks my expectation. To me order of elements in the query shouldn't make any difference because \"+\" and \"-\" feel like unary operators but they behave in strange ways.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148506768","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-148506768","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":148506768,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODUwNjc2OA==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2015-10-15T20:08:26Z","updated_at":"2015-10-15T20:09:18Z","author_association":"CONTRIBUTOR","body":"@imotov What you're saying makes sense to me from the point of view of someone that regularly deals with search, but for someone less technical I think and/or make more sense.  Honestly, the default to OR is a bit odd to me too because if someone, say my mother, types \"dog food\" into the google she expects it to be anded together there at least through decent scoring (as you and @rmuir mentioned earlier).  I think making a new parser with the behavior of must/should/must not makes sense depending on what our target audience wants.  SimpleQueryParser2 or something.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/148532454","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-148532454","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":148532454,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODUzMjQ1NA==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2015-10-15T21:53:34Z","updated_at":"2015-10-15T21:53:34Z","author_association":"CONTRIBUTOR","body":"All right after a bit more thought and discussion, I've come to agree with everyone in this issue that this behavior is unexpected for everyone.  I'll work on making a Lucene patch for the SimpleQueryParser using the behavior describe by @imotov and @rmuir where the structure will be a single bq per subquery.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/258674464","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-258674464","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":258674464,"node_id":"MDEyOklzc3VlQ29tbWVudDI1ODY3NDQ2NA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-11-06T11:18:51Z","updated_at":"2016-11-06T11:18:51Z","author_association":"CONTRIBUTOR","body":"@jdconrad did anything ever come of this?  Did you open any issue in Lucene that we can track?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/258903012","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-258903012","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":258903012,"node_id":"MDEyOklzc3VlQ29tbWVudDI1ODkwMzAxMg==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2016-11-07T17:29:42Z","updated_at":"2016-11-07T17:29:42Z","author_association":"CONTRIBUTOR","body":"@clintongormley Sorry, I must've gotten distracted by other issues before I had anytime to address this.  I'll have to take a bit of time to remember what we had discussed.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/268969186","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-268969186","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":268969186,"node_id":"MDEyOklzc3VlQ29tbWVudDI2ODk2OTE4Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-12-23T10:23:37Z","updated_at":"2016-12-23T10:23:37Z","author_association":"CONTRIBUTOR","body":"Let's document and close","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/271041077","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-271041077","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":271041077,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MTA0MTA3Nw==","user":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"created_at":"2017-01-06T23:48:48Z","updated_at":"2017-01-06T23:48:48Z","author_association":"MEMBER","body":"Okay, opened a PR to document this, and then it can be closed.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/388444151","html_url":"https://github.com/elastic/elasticsearch/issues/4707#issuecomment-388444151","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/4707","id":388444151,"node_id":"MDEyOklzc3VlQ29tbWVudDM4ODQ0NDE1MQ==","user":{"login":"peterdm","id":103417,"node_id":"MDQ6VXNlcjEwMzQxNw==","avatar_url":"https://avatars0.githubusercontent.com/u/103417?v=4","gravatar_id":"","url":"https://api.github.com/users/peterdm","html_url":"https://github.com/peterdm","followers_url":"https://api.github.com/users/peterdm/followers","following_url":"https://api.github.com/users/peterdm/following{/other_user}","gists_url":"https://api.github.com/users/peterdm/gists{/gist_id}","starred_url":"https://api.github.com/users/peterdm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/peterdm/subscriptions","organizations_url":"https://api.github.com/users/peterdm/orgs","repos_url":"https://api.github.com/users/peterdm/repos","events_url":"https://api.github.com/users/peterdm/events{/privacy}","received_events_url":"https://api.github.com/users/peterdm/received_events","type":"User","site_admin":false},"created_at":"2018-05-11T18:16:03Z","updated_at":"2018-05-11T18:16:03Z","author_association":"NONE","body":"Just stumbled on this limitation myself.  I'd like to echo @imotov 's suggestion from Oct 15, 2017.  (I'll paste below). \r\n \r\n> (quote) I think that my expectation would be that `foo bar +baz -qux` should be translated into something like this:\r\n```\r\n{\r\n   \"bool\": {\r\n        \"should\" : [\r\n            {\r\n                \"term\" : { \"_all\" : \"foo\" }\r\n            }, {\r\n                \"term\" : { \"_all\" : \"bar\" }\r\n            }\r\n        ],\r\n        \"must\" : {\r\n            \"term\" : { \"_all\" : \"baz\" }\r\n        },\r\n        \"must_not\" : {\r\n            \"term\" : { \"_all\" : \"qux\" }\r\n        }\r\n   }\r\n}\r\n```\r\n\r\n\r\nThe usecase is based on the previously-mentioned 'google expectation' (or really any major search engine at this point) that can be approximated with a `default_operator: \"OR\"` accompanied by a high `minimum_should_match`.\r\n\r\nThe appeal of `simple_query_string` is in the ability to meet the syntactical needs of users who are familiar with Google operators (without throwing parse exceptions).\r\n\r\nI'm a little bummed that I have to roll my own parser to offer a commonly-accepted negation operator.  It's not the end of the world, but adds friction to anyone looking for an otherwise extremely nice (almost turnkey) drop-in query which largely meets common syntax expectations.\r\n\r\n@clintongormley, where is the right forum to re-open this?  It looks like this was closed with a doc-comment b/c it belongs in Lucene's JIRA.","performed_via_github_app":null}]