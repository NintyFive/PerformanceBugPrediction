{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1561","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1561/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1561/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1561/events","html_url":"https://github.com/elastic/elasticsearch/issues/1561","id":2634804,"node_id":"MDU6SXNzdWUyNjM0ODA0","number":1561,"title":"Query DSL: custom_filters_score allow nesting of boosts with operators","user":{"login":"apatrida","id":182340,"node_id":"MDQ6VXNlcjE4MjM0MA==","avatar_url":"https://avatars3.githubusercontent.com/u/182340?v=4","gravatar_id":"","url":"https://api.github.com/users/apatrida","html_url":"https://github.com/apatrida","followers_url":"https://api.github.com/users/apatrida/followers","following_url":"https://api.github.com/users/apatrida/following{/other_user}","gists_url":"https://api.github.com/users/apatrida/gists{/gist_id}","starred_url":"https://api.github.com/users/apatrida/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apatrida/subscriptions","organizations_url":"https://api.github.com/users/apatrida/orgs","repos_url":"https://api.github.com/users/apatrida/repos","events_url":"https://api.github.com/users/apatrida/events{/privacy}","received_events_url":"https://api.github.com/users/apatrida/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2011-12-22T07:18:36Z","updated_at":"2014-05-23T14:20:29Z","closed_at":"2014-05-23T14:20:29Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In relevancy cases there are things like:\n- given a starting query\n- for situation A and B, multiply score by the highest of A or B producing new score\n- for situation C, D and E multiply score by the highest of those producing a new score\n- for situation F and G, discount score by the worst discount producing a new score\n\nSo you have groups of queries.  Which right now you have to nest custom_filters_score to accomplish (or combine with boosts DSL for the negative and still nest queries).\n\nIn the custom_filters_score DSL would be nice to nest the filters part in groups, using the mode as the grouping.  These should be grouped with operators \"multiply\", \"max\", \"min\", \"sum\" or \"total\", \"avg\"...\n\n``` json\n{\n    \"custom_filters_score\" : {\n        \"query\" : {\n            \"match_all\" : {}\n        },\n        \"filters\" : {\n           \"multiply\" : [\n              {\n                \"max\" : [\n                    {\n                        \"filter\" : { \"term\" : { \"myfield\" : \"datavalue\" } },\n                        \"boost\" : 3\n                    },\n                    {\n                        \"filter\" : { \"term\" : { \"myfield_alt\" : \"differentvalue\" } },\n                        \"boost\" : 2\n                    }\n                ]\n             },\n             {\n                \"min\" : [\n                    {\n                        \"filter\" : { \"term\" : { \"danger\" : \"badValue\" } },\n                        \"boost\" : 0.5\n                    },\n                    {\n                        \"filter\" : { \"term\" : { \"badfield\" : \"horrible\" } },\n                        \"boost\" : 0.1\n                    }\n                 ]\n             }   \n          ]        \n        }\n    }\n}\n```\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}