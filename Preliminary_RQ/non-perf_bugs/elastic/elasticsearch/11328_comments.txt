[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/227646293","html_url":"https://github.com/elastic/elasticsearch/issues/11328#issuecomment-227646293","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11328","id":227646293,"node_id":"MDEyOklzc3VlQ29tbWVudDIyNzY0NjI5Mw==","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"created_at":"2016-06-22T05:20:46Z","updated_at":"2016-06-22T05:21:04Z","author_association":"NONE","body":"This parser seems to have some advantages over the existing parserswhen dealing with proximity (edit distance is not intuitive to all users).  Are there plans to implement this?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/268720093","html_url":"https://github.com/elastic/elasticsearch/issues/11328#issuecomment-268720093","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11328","id":268720093,"node_id":"MDEyOklzc3VlQ29tbWVudDI2ODcyMDA5Mw==","user":{"login":"bairongdong1","id":13670721,"node_id":"MDQ6VXNlcjEzNjcwNzIx","avatar_url":"https://avatars1.githubusercontent.com/u/13670721?v=4","gravatar_id":"","url":"https://api.github.com/users/bairongdong1","html_url":"https://github.com/bairongdong1","followers_url":"https://api.github.com/users/bairongdong1/followers","following_url":"https://api.github.com/users/bairongdong1/following{/other_user}","gists_url":"https://api.github.com/users/bairongdong1/gists{/gist_id}","starred_url":"https://api.github.com/users/bairongdong1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bairongdong1/subscriptions","organizations_url":"https://api.github.com/users/bairongdong1/orgs","repos_url":"https://api.github.com/users/bairongdong1/repos","events_url":"https://api.github.com/users/bairongdong1/events{/privacy}","received_events_url":"https://api.github.com/users/bairongdong1/received_events","type":"User","site_admin":false},"created_at":"2016-12-22T05:10:18Z","updated_at":"2016-12-22T05:10:18Z","author_association":"NONE","body":"I also need that in my company's product.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/268969682","html_url":"https://github.com/elastic/elasticsearch/issues/11328#issuecomment-268969682","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11328","id":268969682,"node_id":"MDEyOklzc3VlQ29tbWVudDI2ODk2OTY4Mg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-12-23T10:27:41Z","updated_at":"2016-12-23T10:27:41Z","author_association":"CONTRIBUTOR","body":"I'd be OK with this being added as a plugin.  Same goes for the SpanQueryParser in https://issues.apache.org/jira/browse/LUCENE-5205","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/269324698","html_url":"https://github.com/elastic/elasticsearch/issues/11328#issuecomment-269324698","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11328","id":269324698,"node_id":"MDEyOklzc3VlQ29tbWVudDI2OTMyNDY5OA==","user":{"login":"bairongdong1","id":13670721,"node_id":"MDQ6VXNlcjEzNjcwNzIx","avatar_url":"https://avatars1.githubusercontent.com/u/13670721?v=4","gravatar_id":"","url":"https://api.github.com/users/bairongdong1","html_url":"https://github.com/bairongdong1","followers_url":"https://api.github.com/users/bairongdong1/followers","following_url":"https://api.github.com/users/bairongdong1/following{/other_user}","gists_url":"https://api.github.com/users/bairongdong1/gists{/gist_id}","starred_url":"https://api.github.com/users/bairongdong1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bairongdong1/subscriptions","organizations_url":"https://api.github.com/users/bairongdong1/orgs","repos_url":"https://api.github.com/users/bairongdong1/repos","events_url":"https://api.github.com/users/bairongdong1/events{/privacy}","received_events_url":"https://api.github.com/users/bairongdong1/received_events","type":"User","site_admin":false},"created_at":"2016-12-27T13:18:05Z","updated_at":"2016-12-27T13:18:05Z","author_association":"NONE","body":"I had written a test plugin for this, just implement the basic function, just to pass my test, I am a newcomer to ES and lucene. [test parser](https://github.com/bairongdong1/BayParser)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/275202318","html_url":"https://github.com/elastic/elasticsearch/issues/11328#issuecomment-275202318","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11328","id":275202318,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NTIwMjMxOA==","user":{"login":"nicbaz","id":932244,"node_id":"MDQ6VXNlcjkzMjI0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/932244?v=4","gravatar_id":"","url":"https://api.github.com/users/nicbaz","html_url":"https://github.com/nicbaz","followers_url":"https://api.github.com/users/nicbaz/followers","following_url":"https://api.github.com/users/nicbaz/following{/other_user}","gists_url":"https://api.github.com/users/nicbaz/gists{/gist_id}","starred_url":"https://api.github.com/users/nicbaz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicbaz/subscriptions","organizations_url":"https://api.github.com/users/nicbaz/orgs","repos_url":"https://api.github.com/users/nicbaz/repos","events_url":"https://api.github.com/users/nicbaz/events{/privacy}","received_events_url":"https://api.github.com/users/nicbaz/received_events","type":"User","site_admin":false},"created_at":"2017-01-25T19:08:28Z","updated_at":"2017-01-25T19:08:28Z","author_association":"NONE","body":"@clintongormley we're currently working to implement LUCENE-5205 in 2.x, 1.x as well as 5.x after that.\r\n\r\n1) we're mimicking org/apache/lucene/queryparser/classic/MapperQueryParser but maybe the logic could be reimplemented to work with both classic and SpanQueryParser ?\r\n2) should we aim for this be added as a core plugin ? or should we maintain it as a third-party ?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/275358980","html_url":"https://github.com/elastic/elasticsearch/issues/11328#issuecomment-275358980","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11328","id":275358980,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NTM1ODk4MA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-01-26T10:45:13Z","updated_at":"2017-01-26T10:45:13Z","author_association":"CONTRIBUTOR","body":"@nicbaz Why not submit it as a WIP PR as a core plugin, and we can make a decision once we see the code?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/286583062","html_url":"https://github.com/elastic/elasticsearch/issues/11328#issuecomment-286583062","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11328","id":286583062,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NjU4MzA2Mg==","user":{"login":"gcampbell-epiq","id":7549112,"node_id":"MDQ6VXNlcjc1NDkxMTI=","avatar_url":"https://avatars2.githubusercontent.com/u/7549112?v=4","gravatar_id":"","url":"https://api.github.com/users/gcampbell-epiq","html_url":"https://github.com/gcampbell-epiq","followers_url":"https://api.github.com/users/gcampbell-epiq/followers","following_url":"https://api.github.com/users/gcampbell-epiq/following{/other_user}","gists_url":"https://api.github.com/users/gcampbell-epiq/gists{/gist_id}","starred_url":"https://api.github.com/users/gcampbell-epiq/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gcampbell-epiq/subscriptions","organizations_url":"https://api.github.com/users/gcampbell-epiq/orgs","repos_url":"https://api.github.com/users/gcampbell-epiq/repos","events_url":"https://api.github.com/users/gcampbell-epiq/events{/privacy}","received_events_url":"https://api.github.com/users/gcampbell-epiq/received_events","type":"User","site_admin":false},"created_at":"2017-03-14T22:35:54Z","updated_at":"2017-03-14T22:35:54Z","author_association":"NONE","body":"I would love to get support for the SpanQueryParser built into the ES query API. Since Lucene has several query parsers which are not yet supported by the ES query API, why not prove a generalized ES query string API that accepts as an option, which parser to use? \r\n\r\nOther query parsers should also be supported by highlighting. \r\n\r\nThis would be a huge value-add in the legal space where users regularly deal in _surprisingly_ complex full text searches, especially involving recursive span queries (i.e. nested proximity queries) (e.g. [[john doe]~3 [\"car or auto*\" \"accident or wreck\"]~3]~5 -representing a search for mention of john doe and a car accident within a close proximity)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/290321753","html_url":"https://github.com/elastic/elasticsearch/issues/11328#issuecomment-290321753","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11328","id":290321753,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MDMyMTc1Mw==","user":{"login":"speedplane","id":671052,"node_id":"MDQ6VXNlcjY3MTA1Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/671052?v=4","gravatar_id":"","url":"https://api.github.com/users/speedplane","html_url":"https://github.com/speedplane","followers_url":"https://api.github.com/users/speedplane/followers","following_url":"https://api.github.com/users/speedplane/following{/other_user}","gists_url":"https://api.github.com/users/speedplane/gists{/gist_id}","starred_url":"https://api.github.com/users/speedplane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/speedplane/subscriptions","organizations_url":"https://api.github.com/users/speedplane/orgs","repos_url":"https://api.github.com/users/speedplane/repos","events_url":"https://api.github.com/users/speedplane/events{/privacy}","received_events_url":"https://api.github.com/users/speedplane/received_events","type":"User","site_admin":false},"created_at":"2017-03-30T07:07:29Z","updated_at":"2017-03-30T07:07:29Z","author_association":"CONTRIBUTOR","body":"@gcampbell-epiq I agree this would be nice, we ended up implementing something that does exactly that ([see example here](https://www.docketalarm.com/search/documents/?q=%22personal+injury%22+w%2F10+boat)). However, if this will largely be implemented for the legal space, it would make sense to use the query language that's largely been standardized across legal search engines rather than the Lucene style of brackets and tildas.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/295176130","html_url":"https://github.com/elastic/elasticsearch/issues/11328#issuecomment-295176130","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11328","id":295176130,"node_id":"MDEyOklzc3VlQ29tbWVudDI5NTE3NjEzMA==","user":{"login":"carlholmboe","id":27732842,"node_id":"MDQ6VXNlcjI3NzMyODQy","avatar_url":"https://avatars0.githubusercontent.com/u/27732842?v=4","gravatar_id":"","url":"https://api.github.com/users/carlholmboe","html_url":"https://github.com/carlholmboe","followers_url":"https://api.github.com/users/carlholmboe/followers","following_url":"https://api.github.com/users/carlholmboe/following{/other_user}","gists_url":"https://api.github.com/users/carlholmboe/gists{/gist_id}","starred_url":"https://api.github.com/users/carlholmboe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carlholmboe/subscriptions","organizations_url":"https://api.github.com/users/carlholmboe/orgs","repos_url":"https://api.github.com/users/carlholmboe/repos","events_url":"https://api.github.com/users/carlholmboe/events{/privacy}","received_events_url":"https://api.github.com/users/carlholmboe/received_events","type":"User","site_admin":false},"created_at":"2017-04-19T09:06:04Z","updated_at":"2017-04-19T09:07:06Z","author_association":"NONE","body":"I am curious to know the status on support for SpanQueryParser in ES.\r\nMy company, Retriever, is doing media monitoring on behalf of our customers in the Nordic countries by means of a large number of predefined queries. \r\nThese can be very complex as they are set up by our professional staff.\r\nWe are currently using Fast ESP Alerting and plan to migrate to ES Percolator.\r\nMany of the queries contains extensive use of NEAR and ONEAR  (Ordered NEAR), such as\r\n“term* ONEAR/20 ‘some phrase’”, “(term1 or term2) NEAR (term*3)”.\r\nWill the plugin support Percolator queries?\r\nIs there a possibility to test the SpanQueryParser plugin somehow for this purpose? \r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/366038788","html_url":"https://github.com/elastic/elasticsearch/issues/11328#issuecomment-366038788","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11328","id":366038788,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NjAzODc4OA==","user":{"login":"wolffclw","id":7339189,"node_id":"MDQ6VXNlcjczMzkxODk=","avatar_url":"https://avatars1.githubusercontent.com/u/7339189?v=4","gravatar_id":"","url":"https://api.github.com/users/wolffclw","html_url":"https://github.com/wolffclw","followers_url":"https://api.github.com/users/wolffclw/followers","following_url":"https://api.github.com/users/wolffclw/following{/other_user}","gists_url":"https://api.github.com/users/wolffclw/gists{/gist_id}","starred_url":"https://api.github.com/users/wolffclw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wolffclw/subscriptions","organizations_url":"https://api.github.com/users/wolffclw/orgs","repos_url":"https://api.github.com/users/wolffclw/repos","events_url":"https://api.github.com/users/wolffclw/events{/privacy}","received_events_url":"https://api.github.com/users/wolffclw/received_events","type":"User","site_admin":false},"created_at":"2018-02-15T19:40:17Z","updated_at":"2018-02-15T19:40:17Z","author_association":"NONE","body":"I am also very interested in this.  My product is looking to migrate to Elasticsearch.  We have implemented START, NEAR, ONEAR, and MULTIPLE with phrase support in Solr.  We would also like to have this work with Percolator.  For us, this is a must have and is currently a negative when dealing with the decision to migrate or not.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/372684449","html_url":"https://github.com/elastic/elasticsearch/issues/11328#issuecomment-372684449","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11328","id":372684449,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MjY4NDQ0OQ==","user":{"login":"cbuescher","id":10398885,"node_id":"MDQ6VXNlcjEwMzk4ODg1","avatar_url":"https://avatars0.githubusercontent.com/u/10398885?v=4","gravatar_id":"","url":"https://api.github.com/users/cbuescher","html_url":"https://github.com/cbuescher","followers_url":"https://api.github.com/users/cbuescher/followers","following_url":"https://api.github.com/users/cbuescher/following{/other_user}","gists_url":"https://api.github.com/users/cbuescher/gists{/gist_id}","starred_url":"https://api.github.com/users/cbuescher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbuescher/subscriptions","organizations_url":"https://api.github.com/users/cbuescher/orgs","repos_url":"https://api.github.com/users/cbuescher/repos","events_url":"https://api.github.com/users/cbuescher/events{/privacy}","received_events_url":"https://api.github.com/users/cbuescher/received_events","type":"User","site_admin":false},"created_at":"2018-03-13T14:28:27Z","updated_at":"2018-03-13T14:28:27Z","author_association":"MEMBER","body":"/cc @elastic/es-search-aggs ","performed_via_github_app":null}]