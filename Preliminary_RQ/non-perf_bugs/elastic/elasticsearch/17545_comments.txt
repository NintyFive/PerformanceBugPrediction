[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/207359071","html_url":"https://github.com/elastic/elasticsearch/issues/17545#issuecomment-207359071","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17545","id":207359071,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNzM1OTA3MQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-04-08T10:09:09Z","updated_at":"2016-04-08T10:09:09Z","author_association":"MEMBER","body":"We discussed this in Fix-It Friday. First of all we agreed that if a timeout occurs we should never return a 200.\nRegarding the wait_for_completion for reindex and update_by_query, we also agreed that wait_for_completion should always be false. This kind of operation can take hours or days so the reindex/update_by_query should answer right away and the TaskManager should be used to wait for the completion of the task (with a poll strategy ?).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/207411446","html_url":"https://github.com/elastic/elasticsearch/issues/17545#issuecomment-207411446","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17545","id":207411446,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNzQxMTQ0Ng==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-04-08T12:26:46Z","updated_at":"2016-04-08T12:26:46Z","author_association":"CONTRIBUTOR","body":"> First of all we agreed that if a timeout occurs we should never return a 200.\n\nTimeout occurs where? Like if we supported `wait_for_completion=1m` we should return some non-200 code with the task id after a minute? Sure!\n\n> wait_for_completion should always be false\n\nThis is a pretty big reversal from the discussion during reindex's implementation. I wanted wait_for_completion to default to false. @clintongormley and @imotov wanted it to default to true. They argued that it'd be more consistent with the rest of the API - `wait_for_completion` is only supported in some places. Where it is supported you can set it to false and get immediate returns with a task id. But by default those APIs work just like every other API. That argument won me over.\n\nThere are plenty of cases where reindex and update_by_query make sense defaulting to false. If you are only modifying tens of thousands of documents, for instance. Or if you don't have a proxy between you and the server - like if you are running on localhost. I think that'll be pretty common actually.\n\nRight now `wait_for_completion=false` is the only way to get the final result. Since it isn't stored anywhere. This is certainly a defect that we'll have to fix soon, but it is a consideration. So we can't \"always\" make it false.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/207411905","html_url":"https://github.com/elastic/elasticsearch/issues/17545#issuecomment-207411905","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17545","id":207411905,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNzQxMTkwNQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-04-08T12:28:31Z","updated_at":"2016-04-08T12:28:31Z","author_association":"CONTRIBUTOR","body":"> Like if we supported wait_for_completion=1m we should return some non-200 code with the task id after a minute? Sure!\n\n202 looks like the code we should use any time we return a task id and the task is still processing, regardless of if we support some timeout on waiting for completion. It fits super well.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/207445525","html_url":"https://github.com/elastic/elasticsearch/issues/17545#issuecomment-207445525","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17545","id":207445525,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNzQ0NTUyNQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-04-08T14:07:29Z","updated_at":"2016-04-08T14:07:29Z","author_association":"MEMBER","body":"> This is a pretty big reversal from the discussion during reindex's implementation\n\nDoesn't have to be ;) We discussed about long running tasks in general where wait_for_completion should/must always be set to false. That's all.\n\n> Timeout occurs where? Like if we supported wait_for_completion=1m we should return some non-200 code with the task id after a minute? Sure!\n\nyep exactly.\n\n> There are plenty of cases where reindex and update_by_query make sense defaulting to false. If you are only modifying tens of thousands of documents, for instance. Or if you don't have a proxy between you and the server - like if you are running on localhost. I think that'll be pretty common actually.\n\nI guess you mean defaulting to true ?\nYes for playground stuff it's simpler that way but it's not recommended ;) ?\n\n> Right now wait_for_completion=false is the only way to get the final result. Since it isn't stored anywhere. This is certainly a defect that we'll have to fix soon, but it is a consideration. So we can't \"always\" make it false.\n\nwait_for_completion=true ? \nSo if the sender does not wait for completion and checks the task manager afterward it would be impossible to determine if the task was successful or not ?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/207447469","html_url":"https://github.com/elastic/elasticsearch/issues/17545#issuecomment-207447469","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17545","id":207447469,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNzQ0NzQ2OQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-04-08T14:14:28Z","updated_at":"2016-04-08T14:14:28Z","author_association":"CONTRIBUTOR","body":"> long running tasks in general where wait_for_completion should/must always be set to false\n\nThat is certainly different from how we'd talked about before. I can see the merit in defaulting long running tasks to false to \"teach users what they'll need to do at scale\" but I also see the merit in the argument that we should just be consistent and always wait unless asked to do otherwise.\n\nI'm totally against taking away the option for people to set `wait_for_completion=true` if they want it.\n\n> playground stuff\n\nI dunno. You can crank through a couple hundred thousand documents in well under the time most things would timeout. That is a fairly big playground. And if you don't have a proxy between you and Elasticsearch you can wait as long as you'd like. I think that is pretty common for this kind of thing.\n\n> So if the sender does not wait for completion and checks the task manager afterward it would be impossible to determine if the task was successful or not ?\n\nAll you know is \"the task is gone\" there is an open issue for it but I don't have it handy. We'll be doing _something_ to persist the results after completion. Probably also something to persist the results while it is running in case the node drops out.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/207458875","html_url":"https://github.com/elastic/elasticsearch/issues/17545#issuecomment-207458875","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17545","id":207458875,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNzQ1ODg3NQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-04-08T14:43:07Z","updated_at":"2016-04-08T14:43:07Z","author_association":"MEMBER","body":"> I'm totally against taking away the option for people to set wait_for_completion=true if they want it.\n\n+1 on keeping the option to wait. We assume too much about what people will do with this API. Remember that update by query can be used with great success on 10 docs as well.  This API doesn't add any complexity on our side.\n\nRe the default  - I think we need to think about the inexperienced users first. Trying out the API for the first time, it's very confusing if it just \"comes back\". To me, waiting first and then looking at docs to see you don't have to wait is better learning curve. \n\n+1 on returning 202 on timeout.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/207459834","html_url":"https://github.com/elastic/elasticsearch/issues/17545#issuecomment-207459834","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17545","id":207459834,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNzQ1OTgzNA==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-04-08T14:45:35Z","updated_at":"2016-04-08T14:45:35Z","author_association":"MEMBER","body":"> I also see the merit in the argument that we should just be consistent and always wait unless asked to do otherwise.\n> I'm totally against taking away the option for people to set wait_for_completion=true if they want it.\n\nI am not arguing against the default. I agree that the default should be true but for some use cases we should advise the user to manually set it to 'false'. Though maybe not now if the \"the task is gone\" issue is not resolved ;) \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/207466480","html_url":"https://github.com/elastic/elasticsearch/issues/17545#issuecomment-207466480","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17545","id":207466480,"node_id":"MDEyOklzc3VlQ29tbWVudDIwNzQ2NjQ4MA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-04-08T14:55:32Z","updated_at":"2016-04-08T14:55:32Z","author_association":"CONTRIBUTOR","body":"> for some use cases we should advise the user to manually set it to 'false'.\n\nWe should certainly have stronger language around that in the docs!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/399233986","html_url":"https://github.com/elastic/elasticsearch/issues/17545#issuecomment-399233986","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17545","id":399233986,"node_id":"MDEyOklzc3VlQ29tbWVudDM5OTIzMzk4Ng==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-06-21T20:32:48Z","updated_at":"2018-06-21T20:32:48Z","author_association":"MEMBER","body":"We discussed it FixItFriday. General sentiment is that we don't really follow the suggested use case. If we add a limit to the `wait_for_completion` in the sense of time and return a valid response for that case, a client will implement code to deal with it an go into async mode. In that case, we don't fully understand why a client couldn't make an async call (`wait_for_completion=false`) and using the same code to monitor the task for as long as it wished to. I'm closing this for now, if people feel strongly it should be reconsidered, feel free to reopen and explain.","performed_via_github_app":null}]