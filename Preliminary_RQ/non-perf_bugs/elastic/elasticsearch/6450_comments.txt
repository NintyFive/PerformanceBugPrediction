[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/45634546","html_url":"https://github.com/elastic/elasticsearch/issues/6450#issuecomment-45634546","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6450","id":45634546,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1NjM0NTQ2","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2014-06-10T16:05:47Z","updated_at":"2014-06-10T16:05:47Z","author_association":"CONTRIBUTOR","body":"You can assign a name to any query or filter: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-request-named-queries-and-filters.html#_named_queries\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/45995419","html_url":"https://github.com/elastic/elasticsearch/issues/6450#issuecomment-45995419","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6450","id":45995419,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1OTk1NDE5","user":{"login":"tstibbs","id":4869014,"node_id":"MDQ6VXNlcjQ4NjkwMTQ=","avatar_url":"https://avatars1.githubusercontent.com/u/4869014?v=4","gravatar_id":"","url":"https://api.github.com/users/tstibbs","html_url":"https://github.com/tstibbs","followers_url":"https://api.github.com/users/tstibbs/followers","following_url":"https://api.github.com/users/tstibbs/following{/other_user}","gists_url":"https://api.github.com/users/tstibbs/gists{/gist_id}","starred_url":"https://api.github.com/users/tstibbs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tstibbs/subscriptions","organizations_url":"https://api.github.com/users/tstibbs/orgs","repos_url":"https://api.github.com/users/tstibbs/repos","events_url":"https://api.github.com/users/tstibbs/events{/privacy}","received_events_url":"https://api.github.com/users/tstibbs/received_events","type":"User","site_admin":false},"created_at":"2014-06-13T10:10:27Z","updated_at":"2014-06-13T10:10:27Z","author_association":"CONTRIBUTOR","body":"Hmm, I suppose that is one way of doing it. For every query (which could be entered by a user) I have to go through inserting the `_name` elements. Then I've got to extract from each one which fields it is that the query operates on. Then when the results come back I've got to do the lookup based on the `matched_queries` to work out which fields actually ended up matching.\n\nAnd this breaks down if any of the date/number/geo queries ever change to search over multiple fields, because the fact that a particular query matched wouldn't actually tell you which field matched.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/46153642","html_url":"https://github.com/elastic/elasticsearch/issues/6450#issuecomment-46153642","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6450","id":46153642,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTUzNjQy","user":{"login":"tstibbs","id":4869014,"node_id":"MDQ6VXNlcjQ4NjkwMTQ=","avatar_url":"https://avatars1.githubusercontent.com/u/4869014?v=4","gravatar_id":"","url":"https://api.github.com/users/tstibbs","html_url":"https://github.com/tstibbs","followers_url":"https://api.github.com/users/tstibbs/followers","following_url":"https://api.github.com/users/tstibbs/following{/other_user}","gists_url":"https://api.github.com/users/tstibbs/gists{/gist_id}","starred_url":"https://api.github.com/users/tstibbs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tstibbs/subscriptions","organizations_url":"https://api.github.com/users/tstibbs/orgs","repos_url":"https://api.github.com/users/tstibbs/repos","events_url":"https://api.github.com/users/tstibbs/events{/privacy}","received_events_url":"https://api.github.com/users/tstibbs/received_events","type":"User","site_admin":false},"created_at":"2014-06-16T08:40:32Z","updated_at":"2014-06-16T08:40:32Z","author_association":"CONTRIBUTOR","body":"Actually, this is really tricky. I'm not sure that the suggestion of using named queries really solves the problem.\n\nMy use case is:\n- Clients (could be human users or remote systems using my webservice) send an elasticsearch query to my application\n- My app queries elasticsearch\n- looks at the highlights in the response, and does a whole bunch of processing to enrich the results\n- Returns the enriched results to the users in a more domain-appropriate format than elasticsearch's response format\n\nSo, my application will need to look at the list of matched queries to enrich the results in the same way as it currently does for highlights. Therefore, I can't expect the clients to insert the names of the queries appropriately, my application needs to do it.\n\nBut inserting the names into a query is hard. Below are two example queries that show why:\n\n```\n{\n  \"query\": {\n    \"range\": {   <-- this is the query name\n      \"match\": {   <-- this is the field name\n        \"gt\": 4,\n        \"lt\": 5\n      }\n    }\n  }\n}\n```\n\n```\n{\n  \"query\": {\n    \"match\": {   <-- this is the query name\n      \"range\": {   <-- this is the field name\n        \"query\": \"blah\"\n      }\n    }\n  }\n}\n```\n\nIn both cases it's going to be hard to spot where the query is, especially as it could be nested deep within many layers of bool, boosting, constant score or nested queries/filters. You can't simply look for the string \"range\", you've got to know more about the structure. You'll end up coding a bunch of code that knows about what queries can be nested in which other queries, and understands the format of each query. At which point you're building a query parser (which elasticsearch already has...)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/49032258","html_url":"https://github.com/elastic/elasticsearch/issues/6450#issuecomment-49032258","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6450","id":49032258,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MDMyMjU4","user":{"login":"tstibbs","id":4869014,"node_id":"MDQ6VXNlcjQ4NjkwMTQ=","avatar_url":"https://avatars1.githubusercontent.com/u/4869014?v=4","gravatar_id":"","url":"https://api.github.com/users/tstibbs","html_url":"https://github.com/tstibbs","followers_url":"https://api.github.com/users/tstibbs/followers","following_url":"https://api.github.com/users/tstibbs/following{/other_user}","gists_url":"https://api.github.com/users/tstibbs/gists{/gist_id}","starred_url":"https://api.github.com/users/tstibbs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tstibbs/subscriptions","organizations_url":"https://api.github.com/users/tstibbs/orgs","repos_url":"https://api.github.com/users/tstibbs/repos","events_url":"https://api.github.com/users/tstibbs/events{/privacy}","received_events_url":"https://api.github.com/users/tstibbs/received_events","type":"User","site_admin":false},"created_at":"2014-07-15T13:38:54Z","updated_at":"2014-07-15T13:38:54Z","author_association":"CONTRIBUTOR","body":"The proposed solution here is further complicated by this issue: https://github.com/elasticsearch/elasticsearch/issues/6871\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/162422467","html_url":"https://github.com/elastic/elasticsearch/issues/6450#issuecomment-162422467","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/6450","id":162422467,"node_id":"MDEyOklzc3VlQ29tbWVudDE2MjQyMjQ2Nw==","user":{"login":"asldevi","id":8813,"node_id":"MDQ6VXNlcjg4MTM=","avatar_url":"https://avatars2.githubusercontent.com/u/8813?v=4","gravatar_id":"","url":"https://api.github.com/users/asldevi","html_url":"https://github.com/asldevi","followers_url":"https://api.github.com/users/asldevi/followers","following_url":"https://api.github.com/users/asldevi/following{/other_user}","gists_url":"https://api.github.com/users/asldevi/gists{/gist_id}","starred_url":"https://api.github.com/users/asldevi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asldevi/subscriptions","organizations_url":"https://api.github.com/users/asldevi/orgs","repos_url":"https://api.github.com/users/asldevi/repos","events_url":"https://api.github.com/users/asldevi/events{/privacy}","received_events_url":"https://api.github.com/users/asldevi/received_events","type":"User","site_admin":false},"created_at":"2015-12-07T06:23:42Z","updated_at":"2015-12-07T06:23:42Z","author_association":"CONTRIBUTOR","body":"This has hit me too. Not sure why this is closed. \n@tstibbs, could you find a work around other than using named queries? \n","performed_via_github_app":null}]