[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/153637044","html_url":"https://github.com/elastic/elasticsearch/issues/14511#issuecomment-153637044","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14511","id":153637044,"node_id":"MDEyOklzc3VlQ29tbWVudDE1MzYzNzA0NA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2015-11-04T08:40:13Z","updated_at":"2015-11-04T08:40:13Z","author_association":"MEMBER","body":"In 1.x or 2.x, the way to achieve what you need is via the `extraSource`, which is what we use internally to pass along options that have been provided as part of the URL.\n\nThis is a bit of a flaw of the current java api when it comes to search, as it allows you to provide the whole source as a bytes array (or string, or map). At that point you can't really ask also for it to be modified by providing additional options. In master (3.0) we removed support for setting the source as string or bytes array, you always have to provide a structured `SearchSourceBuilder` object. We did this because parsing happens now on the coordinating node, and if you provide a request using the java api, no parsing should happen anymore as you already provide proper java objects.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/153811590","html_url":"https://github.com/elastic/elasticsearch/issues/14511#issuecomment-153811590","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14511","id":153811590,"node_id":"MDEyOklzc3VlQ29tbWVudDE1MzgxMTU5MA==","user":{"login":"synhershko","id":212252,"node_id":"MDQ6VXNlcjIxMjI1Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/212252?v=4","gravatar_id":"","url":"https://api.github.com/users/synhershko","html_url":"https://github.com/synhershko","followers_url":"https://api.github.com/users/synhershko/followers","following_url":"https://api.github.com/users/synhershko/following{/other_user}","gists_url":"https://api.github.com/users/synhershko/gists{/gist_id}","starred_url":"https://api.github.com/users/synhershko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/synhershko/subscriptions","organizations_url":"https://api.github.com/users/synhershko/orgs","repos_url":"https://api.github.com/users/synhershko/repos","events_url":"https://api.github.com/users/synhershko/events{/privacy}","received_events_url":"https://api.github.com/users/synhershko/received_events","type":"User","site_admin":false},"created_at":"2015-11-04T18:06:32Z","updated_at":"2015-11-04T18:06:32Z","author_association":"CONTRIBUTOR","body":"Thanks Luca.\n\nJust to make sure, you mean:\n\n``` java\n        return client.prepareSearch(INDEX_NAME)\n                .setExtraSource(query)\n                .setExplain(debugMode)\n                .setVersion(true)\n                ;\n```\n\nRight?\n\nWith regards to your plans for 3.0, we do need to have support to load queries from JSON files. This has many use cases, for example allowing other teams to submit PRs for query changes of various parts of the system and only teaching them JSON and a subset of the DSL. Or an easier way to maintain and track changes. Or using Mustache locally for performance reasons. Etc etc. And no, search templates don't really cut it for most of those.\n\nPlease provide a way to parse a string query into a SearchSourceBuilder, this is a critical feature I've seen used to many times to want to see it go away. Would be happy to jump on a call to discuss further.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/154055500","html_url":"https://github.com/elastic/elasticsearch/issues/14511#issuecomment-154055500","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14511","id":154055500,"node_id":"MDEyOklzc3VlQ29tbWVudDE1NDA1NTUwMA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2015-11-05T13:08:14Z","updated_at":"2015-11-05T13:08:14Z","author_association":"MEMBER","body":"Yes @synhershko your code snippet looks good, that is what I meant. Note that the source is not just the query but the whole search request which supports also other sections than the query  (e.g. aggs, highlighting etc.).\n\nAs for your request to parse json as part of the java api, there might be a way in the future, we will discuss that but to me it is yet another reason why we should have a java REST client. The Java api should only deal with proper java objects that can be natively serialized over the wire, thus if parsing had to happen there, it would need to happen on the client before sending the request to any node, but for that to happen the parser would need to be aware of all the supported queries, certainly possible for a node client, but it would make less sense for a transport client. /cc @clintongormley \n\nThat said there are a couple of outliers, like the template query, their parsing will still happen on the coordinating node, and the wrapper query, which does allow you to move the parsing to the data nodes by providing the inner query as bytes, but they are only two very particular queries.\n","performed_via_github_app":null}]