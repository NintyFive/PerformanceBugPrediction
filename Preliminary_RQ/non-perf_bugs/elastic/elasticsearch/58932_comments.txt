[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/653073029","html_url":"https://github.com/elastic/elasticsearch/issues/58932#issuecomment-653073029","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/58932","id":653073029,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MzA3MzAyOQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-07-02T15:26:10Z","updated_at":"2020-07-02T15:26:10Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-ql (:Query Languages/SQL)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/665576060","html_url":"https://github.com/elastic/elasticsearch/issues/58932#issuecomment-665576060","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/58932","id":665576060,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTU3NjA2MA==","user":{"login":"bpintea","id":1562801,"node_id":"MDQ6VXNlcjE1NjI4MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/1562801?v=4","gravatar_id":"","url":"https://api.github.com/users/bpintea","html_url":"https://github.com/bpintea","followers_url":"https://api.github.com/users/bpintea/followers","following_url":"https://api.github.com/users/bpintea/following{/other_user}","gists_url":"https://api.github.com/users/bpintea/gists{/gist_id}","starred_url":"https://api.github.com/users/bpintea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bpintea/subscriptions","organizations_url":"https://api.github.com/users/bpintea/orgs","repos_url":"https://api.github.com/users/bpintea/repos","events_url":"https://api.github.com/users/bpintea/events{/privacy}","received_events_url":"https://api.github.com/users/bpintea/received_events","type":"User","site_admin":false},"created_at":"2020-07-29T10:16:13Z","updated_at":"2020-07-29T10:16:13Z","author_association":"CONTRIBUTOR","body":"The equality will generate a `range` query, that accepts a `format` while the `IN` operator will generate a `terms` query, which doesn't support a format-describing parameter.\r\n`'2000-11-11 11:11:11'::timestamp` converts the literal to `2000-11-11T11:11:11Z`, which can't be parsed according to the specified (ES) `date` mapping. A solution might be to rather translate `IN` with dates to `bool` with `should` `range`s?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/665639776","html_url":"https://github.com/elastic/elasticsearch/issues/58932#issuecomment-665639776","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/58932","id":665639776,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTYzOTc3Ng==","user":{"login":"wuyinan0126","id":5836800,"node_id":"MDQ6VXNlcjU4MzY4MDA=","avatar_url":"https://avatars0.githubusercontent.com/u/5836800?v=4","gravatar_id":"","url":"https://api.github.com/users/wuyinan0126","html_url":"https://github.com/wuyinan0126","followers_url":"https://api.github.com/users/wuyinan0126/followers","following_url":"https://api.github.com/users/wuyinan0126/following{/other_user}","gists_url":"https://api.github.com/users/wuyinan0126/gists{/gist_id}","starred_url":"https://api.github.com/users/wuyinan0126/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wuyinan0126/subscriptions","organizations_url":"https://api.github.com/users/wuyinan0126/orgs","repos_url":"https://api.github.com/users/wuyinan0126/repos","events_url":"https://api.github.com/users/wuyinan0126/events{/privacy}","received_events_url":"https://api.github.com/users/wuyinan0126/received_events","type":"User","site_admin":false},"created_at":"2020-07-29T12:40:21Z","updated_at":"2020-07-29T12:40:21Z","author_association":"NONE","body":"In `IN` operator, the ExpressionTranslator<In> translates expression into terms query, but when the expression is date format, the terms query get unexpected results. This commit changes the terms query into bool should query when data type is `DATETIME`.\r\n\r\nThe original translation of `IN ('2000-11-11 11:11:11'::timestamp)` was below, which got the error `failed to parse date field [2000-11-11T11:11:11Z] with format [yyyy-MM-dd' 'HH:mm:ss]: [failed to parse date field [2000-11-11T11:11:11Z] with format [yyyy-MM-dd' 'HH:mm:ss]]`, beacause the terms format is not the same as defined:\r\n\r\n```\r\n{\r\n  \"query\" : {\r\n    \"terms\" : {\r\n      \"datetime0\" : [\r\n        \"2000-11-11T11:11:11.000Z\"\r\n      ],\r\n      \"boost\" : 1.0\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nIn this commit, the `IN ('2000-11-11 11:11:11'::timestamp)` translates to:\r\n```\r\n{\r\n  \"query\" : {\r\n    \"range\" : {\r\n      \"datetime0\" : {\r\n        \"from\" : \"2000-11-11T11:11:11.000Z\",\r\n        \"to\" : \"2000-11-11T11:11:11.000Z\",\r\n        \"include_lower\" : true,\r\n        \"include_upper\" : true,\r\n        \"time_zone\" : \"Z\",\r\n        \"format\" : \"strict_date_time\",\r\n        \"boost\" : 1.0\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAnd the `IN ('2000-11-11 11:11:11'::timestamp, '2000-11-11 22:22:22'::timestamp)` translate to:\r\n```\r\n{\r\n \"query\" : {\r\n    \"bool\" : {\r\n      \"should\" : [\r\n        {\r\n          \"range\" : {\r\n            \"datetime0\" : {\r\n              \"from\" : \"2000-11-11T11:11:11.000Z\",\r\n              \"to\" : \"2000-11-11T11:11:11.000Z\",\r\n              \"include_lower\" : true,\r\n              \"include_upper\" : true,\r\n              \"time_zone\" : \"Z\",\r\n              \"format\" : \"strict_date_time\",\r\n              \"boost\" : 1.0\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"range\" : {\r\n            \"datetime0\" : {\r\n              \"from\" : \"2000-11-11T22:22:22.000Z\",\r\n              \"to\" : \"2000-11-11T22:22:22.000Z\",\r\n              \"include_lower\" : true,\r\n              \"include_upper\" : true,\r\n              \"time_zone\" : \"Z\",\r\n              \"format\" : \"strict_date_time\",\r\n              \"boost\" : 1.0\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      \"boost\" : 1.0\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nFinally, the problem is solved:\r\n\r\n```\r\nSELECT datetime0 FROM idx WHERE datetime0 IN ('2000-11-11 11:11:11'::timestamp)\r\n\r\n       datetime0        \r\n------------------------\r\n2000-11-11T11:11:11.000Z\r\n```","performed_via_github_app":null}]