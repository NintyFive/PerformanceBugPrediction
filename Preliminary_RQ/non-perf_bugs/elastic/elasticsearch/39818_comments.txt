[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/470793263","html_url":"https://github.com/elastic/elasticsearch/issues/39818#issuecomment-470793263","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39818","id":470793263,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDc5MzI2Mw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2019-03-08T03:37:15Z","updated_at":"2019-03-08T03:37:15Z","author_association":"MEMBER","body":"Thanks for the well-written feature request @JulianRooze. I empathize with your position, but ultimately we will not implement either of these requests. I will explain.\r\n\r\n> No longer being able to delete one or more indices using an alias.\r\n\r\nWe considered deleting aliases to be trappy, and we removed the functionality. The reason that this is trappy is because does `DELETE /alias` delete the alias, or delete the concrete index behind the alias? Some users reason that it would delete only the alias, and not the index (or indices!) behind the alias. That made this API trappy. And if you try to argue that it should delete the index, what happens if the alias is a *filtered alias* on top of some index? Would we do a delete-by-query behind the scenes, or delete the index, or reject the request? Again, this is trappy. See #2318.\r\n\r\n> No longer being able to add an alias to an alias.\r\n\r\nI could be wrong (please, correct me if I am!), but I don't think this was ever a feature. The reason that I think this was never a feature is because of how aliases are implemented in Elasticsearch. Namely, aliases are attached metadata attaches to indices. For an alias on an alias, where would we attach the second alias? We can not attach it to the first alias (that is not how they work), and we would not attach it to the underlying index (for then how would we know it was attached to the first alias). \r\n\r\n>Being able to use aliases as flexibly as you could in ES5 was part of what put the Elastic into Elasticsearch for us. I would like to see the behavior reverted to the old behavior, if necessary by a YAML setting.\r\n\r\nOver the years we have tried to remove trappy features, and we do not favor hiding trappy features behind configuration flags. That leads to a complex feature set and a complex codebase. We are preferring to keep our APIs simpler, and our implementations as simple as possible. That makes our system easier to reason about for us, and our users, which gives us a nimbler codebase on which to build more exciting features.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/470793452","html_url":"https://github.com/elastic/elasticsearch/issues/39818#issuecomment-470793452","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39818","id":470793452,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDc5MzQ1Mg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-03-08T03:38:32Z","updated_at":"2019-03-08T03:38:32Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-features","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/471504592","html_url":"https://github.com/elastic/elasticsearch/issues/39818#issuecomment-471504592","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/39818","id":471504592,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTUwNDU5Mg==","user":{"login":"JulianRooze","id":1694905,"node_id":"MDQ6VXNlcjE2OTQ5MDU=","avatar_url":"https://avatars2.githubusercontent.com/u/1694905?v=4","gravatar_id":"","url":"https://api.github.com/users/JulianRooze","html_url":"https://github.com/JulianRooze","followers_url":"https://api.github.com/users/JulianRooze/followers","following_url":"https://api.github.com/users/JulianRooze/following{/other_user}","gists_url":"https://api.github.com/users/JulianRooze/gists{/gist_id}","starred_url":"https://api.github.com/users/JulianRooze/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JulianRooze/subscriptions","organizations_url":"https://api.github.com/users/JulianRooze/orgs","repos_url":"https://api.github.com/users/JulianRooze/repos","events_url":"https://api.github.com/users/JulianRooze/events{/privacy}","received_events_url":"https://api.github.com/users/JulianRooze/received_events","type":"User","site_admin":false},"created_at":"2019-03-11T11:35:37Z","updated_at":"2019-03-11T11:35:37Z","author_association":"NONE","body":"Thanks for the quick and elaborate reply. I understand and respect your decision and I expected as much, but I wanted to argue in favor if it regardless :)\r\n\r\n> The reason that this is trappy is because does DELETE /alias delete the alias, or delete the concrete index behind the alias?\r\n\r\nPersonally, I've never considered the possibility that `DELETE my_alias` would only delete the alias itself and not the underlying indices. When you do that DELETE, it's on the \"index\" resource and to me it's always been entirely expected that doing a DELETE on an index resource deletes an index and an alias is just a name for one or more indices, so to me it makes sense that it deletes indices.\r\n\r\nI can see that doing a delete on an alias could be dangerous, but then again, all deletes are inherently dangerous. \r\n\r\n> And if you try to argue that it should delete the index, what happens if the alias is a filtered alias on top of some index?\r\n\r\nIn the end, all abstractions are leaky, but it feels like throwing out the baby with the bathwater. \r\n\r\n> I could be wrong (please, correct me if I am!), but I don't think this was ever a feature. \r\n\r\nWhat I mean is that when you do `PUT _aliases`, you could specify an alias as the index on which to apply the alias. So:\r\n\r\n```\r\nPUT _aliases\r\n{\r\n    \"actions\": [\r\n       {\r\n          \"add\": {\r\n             \"index\": \"my_alias1\",\r\n             \"alias\": \"my_alias2\"\r\n          }\r\n       }\r\n    ]\r\n}\r\n```\r\n\r\nAnd if `my_alias1` is an alias for `my_index`, it would receive a second alias, `my_alias2`. ","performed_via_github_app":null}]