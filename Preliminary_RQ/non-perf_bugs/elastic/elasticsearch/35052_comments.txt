[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/434006413","html_url":"https://github.com/elastic/elasticsearch/issues/35052#issuecomment-434006413","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35052","id":434006413,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNDAwNjQxMw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-10-29T17:37:33Z","updated_at":"2018-10-29T17:37:33Z","author_association":"COLLABORATOR","body":"Pinging @elastic/ml-core","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/434012364","html_url":"https://github.com/elastic/elasticsearch/issues/35052#issuecomment-434012364","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35052","id":434012364,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNDAxMjM2NA==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2018-10-29T17:52:29Z","updated_at":"2018-10-29T17:52:29Z","author_association":"CONTRIBUTOR","body":"It looks like the bug in the test is that it needs to set `discovery.zen.minimum_master_nodes` to 3 because it creates a 5 node cluster.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/434016653","html_url":"https://github.com/elastic/elasticsearch/issues/35052#issuecomment-434016653","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35052","id":434016653,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNDAxNjY1Mw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-10-29T18:03:00Z","updated_at":"2018-10-29T18:03:00Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/434022532","html_url":"https://github.com/elastic/elasticsearch/issues/35052#issuecomment-434022532","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35052","id":434022532,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNDAyMjUzMg==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2018-10-29T18:17:45Z","updated_at":"2018-10-29T18:17:45Z","author_association":"CONTRIBUTOR","body":"It's a little subtle. Here we started the first node with `discovery.zen.minimum_master_nodes` set to `1` and then add four more nodes. Since `autoManageMinMasterNodes` is `true` the four new nodes do have `discovery.zen.minimum_master_nodes` set to `3`, but unfortunately this isn't sufficient: three of the new four nodes gang together and form their own cluster, independent of the first node which is itself already an elected master.\r\n\r\nWhat puzzles me is that we allow 3 seconds for all the nodes to find each other, which should be plenty of time to discover the existing master:\r\n\r\n```\r\n  1> [2018-10-29T13:32:44,510][INFO ][o.e.t.t.MockTransportService] [[test_TEST-CHILD_VM=[2]-CLUSTER_SEED=[4793419988162627123]-HASH=[6DBB78660FF]-cluster[T#2]]] publish_address {127.0.0.1:39450}, bound_addresses {[::1]:59095}, {127\r\n  1> [2018-10-29T13:32:47,544][INFO ][o.e.c.s.MasterService    ] [node_t3] zen-disco-elected-as-master ([2] nodes joined)[{node_t4}{vdyH-Xp0S_eoZNx9KcMaAw}{XaKVGoOGSCympiARN1x8mw}{127.0.0.1}{127.0.0.1:42010}{ml.machine_memory=634640\r\n```\r\n\r\nI will try and reproduce this with more logging. It's not ML-specific, although the form of this test does make it more likely to occur here: if we said we wanted 5 nodes up-front using the `@ESIntegTestCase.ClusterScope()` annotation then they'd all start up correctly configured.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/434217816","html_url":"https://github.com/elastic/elasticsearch/issues/35052#issuecomment-434217816","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35052","id":434217816,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNDIxNzgxNg==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2018-10-30T08:48:06Z","updated_at":"2018-10-31T19:29:04Z","author_association":"CONTRIBUTOR","body":"I managed to reproduce a similar failure (after ≥500 iterations) without extra logging. With extra logging enabled it's been running overnight and consistently passing ☹️  I was a little concerned that perhaps we weren't discovering the correct set of nodes, but I see no indication of this in the logs (of passing runs) and the code looks to be doing the right sort of thing.\r\n\r\nI have pushed f7760ddacb2f2600e2c0de23ca7b218c63913825 to enable more logging in CI, which will tell us what really happens in the next failure (or fix the problem :wink:)\r\n\r\nIt could just be that things were going a bit slowly on the CI worker. This is a failure mode that can occur when growing a cluster too quickly if the timing is sufficiently bad. We could fix this by growing the cluster more slowly (e.g. one-node-at-a-time), or else set `minimum_master_nodes` to `5` on the new nodes so they can't form a cluster without the existing master. In the long run this'll be fixed by #32006.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/434221112","html_url":"https://github.com/elastic/elasticsearch/issues/35052#issuecomment-434221112","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35052","id":434221112,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNDIyMTExMg==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2018-10-30T09:00:10Z","updated_at":"2018-10-30T09:00:10Z","author_association":"CONTRIBUTOR","body":"Thanks for investigating this @DaveCTurner.\r\n\r\n> if we said we wanted 5 nodes up-front using the `@ESIntegTestCase.ClusterScope()` annotation then they'd all start up correctly configured\r\n\r\nThere's no particular reason why this test is creating a 1 node cluster and then adding 4 more nodes to it.  It could still test what it's supposed to be testing by immediately creating a 5 node cluster - the way it's creating the cluster now is just due to ignorance of the subtleties of the different ways of creating the cluster.  I guess this is extremely unlikely to happen at a real customer because they wouldn't be running 5 nodes on the same VM and the timeout for the nodes to find each other is 30 seconds.  So if you get fed up investigating I'm very happy to just switch to `@ESIntegTestCase.ClusterScope()` to create the cluster.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/434226969","html_url":"https://github.com/elastic/elasticsearch/issues/35052#issuecomment-434226969","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35052","id":434226969,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNDIyNjk2OQ==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2018-10-30T09:20:10Z","updated_at":"2018-10-30T09:20:10Z","author_association":"CONTRIBUTOR","body":"I think it'd be good to give this a few weeks to fail again with more logging just so we can be sure that we're not doing something incorrect with how discovery interacts with `ESIntegTestCase` when the clusters grow, as there have been some changes in this area recently. Quite happy to track that in separate test case if you'd prefer.\r\n\r\nBy the way, I think what the test is doing here is legitimate: this is a bug in the framework, I think, and the suggestion to use the annotation is merely a workaround.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/434228141","html_url":"https://github.com/elastic/elasticsearch/issues/35052#issuecomment-434228141","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35052","id":434228141,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNDIyODE0MQ==","user":{"login":"droberts195","id":7405510,"node_id":"MDQ6VXNlcjc0MDU1MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/7405510?v=4","gravatar_id":"","url":"https://api.github.com/users/droberts195","html_url":"https://github.com/droberts195","followers_url":"https://api.github.com/users/droberts195/followers","following_url":"https://api.github.com/users/droberts195/following{/other_user}","gists_url":"https://api.github.com/users/droberts195/gists{/gist_id}","starred_url":"https://api.github.com/users/droberts195/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/droberts195/subscriptions","organizations_url":"https://api.github.com/users/droberts195/orgs","repos_url":"https://api.github.com/users/droberts195/repos","events_url":"https://api.github.com/users/droberts195/events{/privacy}","received_events_url":"https://api.github.com/users/droberts195/received_events","type":"User","site_admin":false},"created_at":"2018-10-30T09:23:56Z","updated_at":"2018-10-30T09:23:56Z","author_association":"CONTRIBUTOR","body":"Thanks @DaveCTurner.  There's no need to create a separate test case.  I'm happy to use this ML one for this purpose.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/434715900","html_url":"https://github.com/elastic/elasticsearch/issues/35052#issuecomment-434715900","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35052","id":434715900,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNDcxNTkwMA==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2018-10-31T14:48:21Z","updated_at":"2018-10-31T14:48:21Z","author_association":"CONTRIBUTOR","body":"I forgot that I left my CI running this job yesterday, but was just notified that iteration 10337 failed again with trace logging enabled, and the failure now makes sense despite the 3-second pinging delay. It is a consequence of how today's discovery implementation does not gossip symmetrically: it only shares pings that it has received, not their responses. In this case, only one node, `node_t1`, sees any seed addresses, presumably because the others start pinging before the discovery file has been written:\r\n\r\n```\r\n  1> [2018-10-31T15:55:34,510][DEBUG][o.e.d.z.FileBasedUnicastHostsProvider] [node_t0] seed addresses: []\r\n  1> [2018-10-31T15:55:37,689][DEBUG][o.e.d.z.FileBasedUnicastHostsProvider] [node_t3] seed addresses: []\r\n  1> [2018-10-31T15:55:37,691][DEBUG][o.e.d.z.FileBasedUnicastHostsProvider] [node_t4] seed addresses: []\r\n  1> [2018-10-31T15:55:37,691][DEBUG][o.e.d.z.FileBasedUnicastHostsProvider] [node_t2] seed addresses: []\r\n  1> [2018-10-31T15:55:37,697][DEBUG][o.e.d.z.FileBasedUnicastHostsProvider] [node_t1] seed addresses: [127.0.0.1:36535, 127.0.0.1:44463, 127.0.0.1:40167, 127.0.0.1:46343]\r\n```\r\n\r\nOnce a pinging round has started we do not check the unicast hosts provider again. `node_t1` pings all the nodes, and initially none of the other nodes can do anything. `node_t0` is a master so it responds but does not ping `node_t1` back, and all the other nodes do ping it back. This means that `node_t1` accumulates pings from all nodes except `node_t0` and broadcasts these to all the other nodes in subsequent pings, so that now `node_t{1,2,3,4}` all know about each other but only `node_t1` knows about `node_t0`. After the pinging round finishes, `node_t1` joins `node_t0` as it is already a master, but `node_t{2,3,4}` think there is no master, and decide that `node_t3` is the best choice, splitting the cluster in two.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/445022636","html_url":"https://github.com/elastic/elasticsearch/issues/35052#issuecomment-445022636","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35052","id":445022636,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NTAyMjYzNg==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2018-12-06T20:42:46Z","updated_at":"2018-12-06T20:42:46Z","author_association":"CONTRIBUTOR","body":"@DaveCTurner This looks like the same issue happening back in 5.6? (https://internal-ci.elastic.co/job/elastic+x-pack-elasticsearch+5.6+multijob-windows-compatibility/508/console).  I assume this won't be backported that far, but wanted to confirm.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/447938902","html_url":"https://github.com/elastic/elasticsearch/issues/35052#issuecomment-447938902","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/35052","id":447938902,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NzkzODkwMg==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2018-12-17T18:00:15Z","updated_at":"2018-12-17T18:00:15Z","author_association":"CONTRIBUTOR","body":"@jdconrad thanks for the ping. That failure is not the same issue, although 5.6 looks susceptible to this specific issue and you are right that the fix is not backported that far (indeed, #35136 wouldn't work in 5.6). I opened #36732 for the failure that you linked.","performed_via_github_app":null}]