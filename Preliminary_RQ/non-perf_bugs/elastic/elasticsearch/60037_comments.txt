[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/662322470","html_url":"https://github.com/elastic/elasticsearch/issues/60037#issuecomment-662322470","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60037","id":662322470,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjMyMjQ3MA==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2020-07-22T08:34:58Z","updated_at":"2020-07-22T08:34:58Z","author_association":"CONTRIBUTOR","body":"The bad consequences of a disk failure are likely much more widespread than searches alone. However I think the problem described here will be improved in 7.9 thanks to https://github.com/elastic/elasticsearch/pull/52680 which will remove a node from the cluster fairly promptly if its disk fails. Would you confirm or otherwise that this improves your experience?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/662322557","html_url":"https://github.com/elastic/elasticsearch/issues/60037#issuecomment-662322557","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60037","id":662322557,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjMyMjU1Nw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-07-22T08:35:09Z","updated_at":"2020-07-22T08:35:09Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-search (:Search/Search)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/662327910","html_url":"https://github.com/elastic/elasticsearch/issues/60037#issuecomment-662327910","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60037","id":662327910,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjMyNzkxMA==","user":{"login":"boicehuang","id":4607177,"node_id":"MDQ6VXNlcjQ2MDcxNzc=","avatar_url":"https://avatars3.githubusercontent.com/u/4607177?v=4","gravatar_id":"","url":"https://api.github.com/users/boicehuang","html_url":"https://github.com/boicehuang","followers_url":"https://api.github.com/users/boicehuang/followers","following_url":"https://api.github.com/users/boicehuang/following{/other_user}","gists_url":"https://api.github.com/users/boicehuang/gists{/gist_id}","starred_url":"https://api.github.com/users/boicehuang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/boicehuang/subscriptions","organizations_url":"https://api.github.com/users/boicehuang/orgs","repos_url":"https://api.github.com/users/boicehuang/repos","events_url":"https://api.github.com/users/boicehuang/events{/privacy}","received_events_url":"https://api.github.com/users/boicehuang/received_events","type":"User","site_admin":false},"created_at":"2020-07-22T08:46:42Z","updated_at":"2020-07-22T09:23:26Z","author_association":"CONTRIBUTOR","body":"@DaveCTurner. Thanks for your reply.  I think read-only filesystems is not enough. We also need to handle the Overload situation. Although the disk is heavily loaded and its %util may reach 95%, it can still handle write or read operation very slowly.  Will a heavy-load disk be treated as disk failure?\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/662329754","html_url":"https://github.com/elastic/elasticsearch/issues/60037#issuecomment-662329754","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60037","id":662329754,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjMyOTc1NA==","user":{"login":"Bukhtawar","id":12809319,"node_id":"MDQ6VXNlcjEyODA5MzE5","avatar_url":"https://avatars0.githubusercontent.com/u/12809319?v=4","gravatar_id":"","url":"https://api.github.com/users/Bukhtawar","html_url":"https://github.com/Bukhtawar","followers_url":"https://api.github.com/users/Bukhtawar/followers","following_url":"https://api.github.com/users/Bukhtawar/following{/other_user}","gists_url":"https://api.github.com/users/Bukhtawar/gists{/gist_id}","starred_url":"https://api.github.com/users/Bukhtawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bukhtawar/subscriptions","organizations_url":"https://api.github.com/users/Bukhtawar/orgs","repos_url":"https://api.github.com/users/Bukhtawar/repos","events_url":"https://api.github.com/users/Bukhtawar/events{/privacy}","received_events_url":"https://api.github.com/users/Bukhtawar/received_events","type":"User","site_admin":false},"created_at":"2020-07-22T08:50:42Z","updated_at":"2020-07-22T08:50:42Z","author_association":"CONTRIBUTOR","body":"This is interesting I opened https://github.com/elastic/elasticsearch/issues/59824. Not sure if that helps with your case @boicehuang ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/662347383","html_url":"https://github.com/elastic/elasticsearch/issues/60037#issuecomment-662347383","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60037","id":662347383,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjM0NzM4Mw==","user":{"login":"boicehuang","id":4607177,"node_id":"MDQ6VXNlcjQ2MDcxNzc=","avatar_url":"https://avatars3.githubusercontent.com/u/4607177?v=4","gravatar_id":"","url":"https://api.github.com/users/boicehuang","html_url":"https://github.com/boicehuang","followers_url":"https://api.github.com/users/boicehuang/followers","following_url":"https://api.github.com/users/boicehuang/following{/other_user}","gists_url":"https://api.github.com/users/boicehuang/gists{/gist_id}","starred_url":"https://api.github.com/users/boicehuang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/boicehuang/subscriptions","organizations_url":"https://api.github.com/users/boicehuang/orgs","repos_url":"https://api.github.com/users/boicehuang/repos","events_url":"https://api.github.com/users/boicehuang/events{/privacy}","received_events_url":"https://api.github.com/users/boicehuang/received_events","type":"User","site_admin":false},"created_at":"2020-07-22T09:26:52Z","updated_at":"2020-07-22T10:11:29Z","author_association":"CONTRIBUTOR","body":"In my experience, concurrent aggregation requests stuck in coordinate nodes can easily cause a lot of nodes of the cluster to full GC and become unresponsive in the situation of disk heavy-loads or failure. That is why I mentioned search requests as above.  ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/663331063","html_url":"https://github.com/elastic/elasticsearch/issues/60037#issuecomment-663331063","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60037","id":663331063,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzMzMTA2Mw==","user":{"login":"boicehuang","id":4607177,"node_id":"MDQ6VXNlcjQ2MDcxNzc=","avatar_url":"https://avatars3.githubusercontent.com/u/4607177?v=4","gravatar_id":"","url":"https://api.github.com/users/boicehuang","html_url":"https://github.com/boicehuang","followers_url":"https://api.github.com/users/boicehuang/followers","following_url":"https://api.github.com/users/boicehuang/following{/other_user}","gists_url":"https://api.github.com/users/boicehuang/gists{/gist_id}","starred_url":"https://api.github.com/users/boicehuang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/boicehuang/subscriptions","organizations_url":"https://api.github.com/users/boicehuang/orgs","repos_url":"https://api.github.com/users/boicehuang/repos","events_url":"https://api.github.com/users/boicehuang/events{/privacy}","received_events_url":"https://api.github.com/users/boicehuang/received_events","type":"User","site_admin":false},"created_at":"2020-07-24T03:26:01Z","updated_at":"2020-07-24T03:27:33Z","author_association":"CONTRIBUTOR","body":"@DaveCTurner Thanks for your reply. Let me explain more about my experience. The process is as follows.\r\n\r\n1. A big aggregation request is sent to the coordinating node with a timeout and split into 5 shard search queries. The Shard search requests were sent to the data nodes without any timeout.\r\n![image](https://user-images.githubusercontent.com/4607177/88356471-864be580-cd9a-11ea-9458-e0fc5d402fae.png)\r\n\r\n2. 4 of the data shards returned shard search responses quickly, but one data node machines became heavily loaded that elasticsearch handled shard search requests very slowly and returned its response after 5 minutes.  (In my experience, some type of disk failure just slows down i/o speed.)\r\n![image](https://user-images.githubusercontent.com/4607177/88356662-27d33700-cd9b-11ea-8fd1-25a7e401cec3.png)\r\n\r\n3. The coordinate node was still waiting for response of Shard 1. The client waited for 5s but still can't get any partial results. It discarded the request but the aggregation request is still stuck in elasticsearch with 4 shard search response and waiting for the only shard search response left.\r\n\r\n![image](https://user-images.githubusercontent.com/4607177/88357093-a4b2e080-cd9c-11ea-915a-4eb37109eaf4.png)\r\n\r\n4. after 5 minutes the left shard finally returned its response and the aggregation finally finished. \r\n![image](https://user-images.githubusercontent.com/4607177/88358219-a1b9ef00-cda0-11ea-9568-e5668a5de53e.png)\r\n\r\nMy question: \r\n\r\n1) Can we end up the aggr earlier and responded to the request with partial results, instead of waiting for a response or node health checker?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/663401013","html_url":"https://github.com/elastic/elasticsearch/issues/60037#issuecomment-663401013","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60037","id":663401013,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzQwMTAxMw==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2020-07-24T08:09:09Z","updated_at":"2020-07-24T08:09:09Z","author_association":"CONTRIBUTOR","body":"> Can we end up the aggr earlier and responded to the request with partial results, instead of waiting for a response or node health checker?\r\n\r\nIn theory we _could_ but it doesn't really help much. We'd carry on sending traffic to the bad node, all of which will have to wait for the same timeout, so latency would be terrible and a backlog would still form. Much better to stop sending requests to the node ASAP, i.e. to remove it from the cluster.\r\n\r\n> In my experience, some type of disk failure just slows down i/o speed.\r\n\r\nThis is the bit I am not understanding. Faulty disks fail IO requests quickly IME (assuming they're properly configured and don't retry for ages first) and you can detect that they're failing and remove the node from service yourself much earlier and more reliably than Elasticsearch can (e.g. by looking at SMART metrics).\r\n\r\nGiven that this is not an Elasticsearch-specific problem I've looked at how other similar systems handle this (e.g. MongoDB, Cassandra, CockroachDB). As far as I can tell, none of them have any special handling or health checks of this nature. I've spoken with our syseng folks internally and we don't see our own clusters failing like this either. I haven't been able to find any other research or documentation that suggests this is something that needs addressing at the application level either. Please help us understand what we've missed here.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/664350187","html_url":"https://github.com/elastic/elasticsearch/issues/60037#issuecomment-664350187","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60037","id":664350187,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDM1MDE4Nw==","user":{"login":"boicehuang","id":4607177,"node_id":"MDQ6VXNlcjQ2MDcxNzc=","avatar_url":"https://avatars3.githubusercontent.com/u/4607177?v=4","gravatar_id":"","url":"https://api.github.com/users/boicehuang","html_url":"https://github.com/boicehuang","followers_url":"https://api.github.com/users/boicehuang/followers","following_url":"https://api.github.com/users/boicehuang/following{/other_user}","gists_url":"https://api.github.com/users/boicehuang/gists{/gist_id}","starred_url":"https://api.github.com/users/boicehuang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/boicehuang/subscriptions","organizations_url":"https://api.github.com/users/boicehuang/orgs","repos_url":"https://api.github.com/users/boicehuang/repos","events_url":"https://api.github.com/users/boicehuang/events{/privacy}","received_events_url":"https://api.github.com/users/boicehuang/received_events","type":"User","site_admin":false},"created_at":"2020-07-27T11:50:49Z","updated_at":"2020-07-27T11:52:13Z","author_association":"CONTRIBUTOR","body":"@DaveCTurner. Thanks for your reply.\r\n\r\n> I haven't been able to find any other research or documentation that suggests this is something that needs addressing at the application level either. Please help us understand what we've missed here.\r\n\r\nAs far as I know, in HBase we limit how long a single RPC call can run by setting  [`hbase.rpc.timeout`](https://hbase.apache.org/book.html#config_timeouts). In MySQL, we can also use [`max_exection_time`](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_execution_time) to set a session-wide timeout, long-running query execution would be interrupted after timeout. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/664396225","html_url":"https://github.com/elastic/elasticsearch/issues/60037#issuecomment-664396225","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60037","id":664396225,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDM5NjIyNQ==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2020-07-27T13:27:50Z","updated_at":"2020-07-27T13:27:50Z","author_association":"CONTRIBUTOR","body":"Neither of those look relevant to the question of detecting and handling disk failures with a timeout. Repeating what I said above: timing out individual (sub-)requests does not prevent future (sub-)requests from going to the same faulty node. Much better to remove broken nodes from the cluster.\r\n\r\nIn terms of the more general question of timing out a search, you can already do this today in the client (#43332) and we're already discussing returning partial results on a timeout (#30897) too. You may also be looking for [adaptive replica selection](https://www.elastic.co/blog/improving-response-latency-in-elasticsearch-with-adaptive-replica-selection) to steer searches away from nodes that are simply busy. I don't think these are useful in the case of a genuinely broken node, the subject of this thread, but maybe they are helpful to you.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/689167371","html_url":"https://github.com/elastic/elasticsearch/issues/60037#issuecomment-689167371","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60037","id":689167371,"node_id":"MDEyOklzc3VlQ29tbWVudDY4OTE2NzM3MQ==","user":{"login":"cjcenizal","id":1238659,"node_id":"MDQ6VXNlcjEyMzg2NTk=","avatar_url":"https://avatars2.githubusercontent.com/u/1238659?v=4","gravatar_id":"","url":"https://api.github.com/users/cjcenizal","html_url":"https://github.com/cjcenizal","followers_url":"https://api.github.com/users/cjcenizal/followers","following_url":"https://api.github.com/users/cjcenizal/following{/other_user}","gists_url":"https://api.github.com/users/cjcenizal/gists{/gist_id}","starred_url":"https://api.github.com/users/cjcenizal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cjcenizal/subscriptions","organizations_url":"https://api.github.com/users/cjcenizal/orgs","repos_url":"https://api.github.com/users/cjcenizal/repos","events_url":"https://api.github.com/users/cjcenizal/events{/privacy}","received_events_url":"https://api.github.com/users/cjcenizal/received_events","type":"User","site_admin":false},"created_at":"2020-09-08T22:22:47Z","updated_at":"2020-09-08T22:22:47Z","author_association":"CONTRIBUTOR","body":"No further feedback received. @boicehuang if you have any more information for us please add it in a comment and we can look at re-opening this issue.","performed_via_github_app":null}]