[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/162924720","html_url":"https://github.com/elastic/elasticsearch/issues/14406#issuecomment-162924720","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14406","id":162924720,"node_id":"MDEyOklzc3VlQ29tbWVudDE2MjkyNDcyMA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2015-12-08T15:52:15Z","updated_at":"2015-12-08T15:52:15Z","author_association":"CONTRIBUTOR","body":"To make this clear:\nEven though 3.0.0 doesn't have to be wire compatible with any released projects we can forward port this to master and only create the \"current\" tests. These tests validate the BWC tests by running them against the current version.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172594824","html_url":"https://github.com/elastic/elasticsearch/issues/14406#issuecomment-172594824","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14406","id":172594824,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjU5NDgyNA==","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2016-01-18T17:13:38Z","updated_at":"2016-01-18T17:13:38Z","author_association":"CONTRIBUTOR","body":"Discussed with @rjernst and @nik9000 and we decided that best would be to first figure out how many of these actually need the infrastructure with the ExternalNodeService etc. because alternatively we might also just spin up a mixed version cluster and run the rest tests against that. It might even give us more coverage. Some test explicitly test rolling upgrade though. I'll make a list and then we can discuss further.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/173324055","html_url":"https://github.com/elastic/elasticsearch/issues/14406#issuecomment-173324055","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14406","id":173324055,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzMyNDA1NQ==","user":{"login":"brwe","id":4320215,"node_id":"MDQ6VXNlcjQzMjAyMTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4320215?v=4","gravatar_id":"","url":"https://api.github.com/users/brwe","html_url":"https://github.com/brwe","followers_url":"https://api.github.com/users/brwe/followers","following_url":"https://api.github.com/users/brwe/following{/other_user}","gists_url":"https://api.github.com/users/brwe/gists{/gist_id}","starred_url":"https://api.github.com/users/brwe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brwe/subscriptions","organizations_url":"https://api.github.com/users/brwe/orgs","repos_url":"https://api.github.com/users/brwe/repos","events_url":"https://api.github.com/users/brwe/events{/privacy}","received_events_url":"https://api.github.com/users/brwe/received_events","type":"User","site_admin":false},"created_at":"2016-01-20T18:56:13Z","updated_at":"2016-01-20T18:56:13Z","author_association":"CONTRIBUTOR","body":"I looked at all bwc tests and asked around what they actually test etc and here is a summary:\n\nWe can replace most of the tests with REST tests although we would lose a little bit of randomness. However, there are some things that cannot be testes with REST tests alone:\n- transport clients that connect to mixed version clusters (see TransportClientBackwardsCompatibilityIT.testSniffMode)\n- rolling upgrades, see BasicBackwardsCompatibilityIT.testIndexRollingUpgrade/testIndexUpgradeSingleNode\n- full cluster restarts and expected behavior afterwards, see RecoveryBackwardsCompatibilityIT.testReusePeerRecovery\n\nThese tests attempt to simulate real world behavior but the question is how successful this is. For example, with the current setup we cannot install plugins. Also, while we simulate some things these tests don't actually stress the cluster much. For example, we have a test that indexes, upgrades a node, indexes, upgrades a node and so forth but none that indexes while nodes are upgraded. \nIt seems wrong to to have these kind of tests in our current setup and we should rather have a dedicated way to simulate an actual cluster and check things like indexing while we upgrade, recovery, etc. As to how this should look like I do not know yet.\n\nIn any case, while I believe we would profit from a separation of stress tests and just mixed version cluster tests it will be a lot of work and we might also decide to postpone this and simply port the current mechanism to master (which will be much less work). \n\nBelow is a list with all test and what I think we should do with them. \n\nLet me know what you think!\n\nDetailed list of all current bwc tests and what I think should be done with them:\n\n## The following tests can be replaced by REST tests:\n\nBasicBackwardsCompatibilityIT:\n    public void testExternalVersion() throws Exception {\n    public void testInternalVersion() throws Exception {\n    public void testIndexAndSearch() throws Exception {\n    public void testNoRecoveryFromNewNodes() throws ExecutionException, InterruptedException {\n    public void testUnsupportedFeatures() throws IOException {\n    public void testExistsFilter() throws IOException, ExecutionException, InterruptedException {\n    public void testDeleteRoutingRequired() throws ExecutionException, InterruptedException, IOException {\n    public void testIndexGetAndDelete() throws ExecutionException, InterruptedException {\n    public void testUpdate() {\n    public void testAnalyze() {\n    public void testExplain() {\n    public void testGetTermVector() throws IOException {\n    public void testIndicesStats() {\n    public void testMultiGet() throws ExecutionException, InterruptedException {\n    public void testScroll() throws ExecutionException, InterruptedException {\n    public void testSimpleFunctionScoreParsingWorks() throws IOException, ExecutionException, InterruptedException {\n\nClusterStateBackwardsCompatIT:\n    public void testClusterState() throws Exception {\n    public void testClusterStateWithBlocks() {\n\nGetIndexBackwardsCompatibilityIT:\n    public void testGetAliases() throws Exception {\n    public void testGetMappings() throws Exception {\n    public void testGetSettings() throws Exception {\n    public void testGetWarmers() throws Exception {\n\nNodesStatsBasicBackwardsCompatIT:\n    public void testNodeStatsSetIndices() throws Exception {\n    public void testNodeStatsSetRandom() throws Exception {\n\nSignificantTermsBackwardCompatibilityIT:\n    public void testAggregateAndCheckFromSeveralShards() throws IOException, ExecutionException, InterruptedException {\n\nThese will be tricky to have as REST tests but the [repository hdfs plugin](https://github.com/elastic/elasticsearch/tree/master/plugins/repository-hdfs/src/test/resources/rest-api-spec/test/hdfs_repository) has some snapshot/restore REST tests already that we can make use of:\n\nSnapshotBackwardsCompatibilityIT\npublic void testBasicWorkflow() {\npublic void testSnapshotMoreThanOnce() throws Exception {\n\n## We need a dedicated test that connects clients to a mixed version cluster to replace \n\nTransportClientBackwardsCompatibilityIT:\n    public void testSniffMode() throws ExecutionException, InterruptedException {\nUnicastBackwardsCompatibilityIT:\n    public void testUnicastDiscovery() {\n\n## We need dedicated stresstests for:\n\nUpgradeIT:\n    public void testUpgrade() throws Exception {\n\nRecoveryBackwardsCompatibilityIT\n    public void testReusePeerRecovery() throws Exception {\n\nBasicBackwardsCompatibilityIT:\n    public void testIndexUpgradeSingleNode() throws Exception {\n    public void testIndexRollingUpgrade() throws Exception {\n    public void testRecoverFromPreviousVersion() throws ExecutionException, InterruptedException {\n\nFor the latter we should also add a regular Integration tests that indexes while a whole index with replicas is moved around.\n\n## I am unsure what to do with this one:\n\nBasicAnalysisBackwardCompatibilityIT:\npublic void testAnalyzerTokensAfterUpgrade() throws IOException, ExecutionException, InterruptedException {\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/173538922","html_url":"https://github.com/elastic/elasticsearch/issues/14406#issuecomment-173538922","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14406","id":173538922,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzUzODkyMg==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-01-21T11:04:43Z","updated_at":"2016-01-21T11:04:43Z","author_association":"MEMBER","body":"I think we can get rid of `UnicastBackwardsCompatibilityIT`, it was meant to test unicast discovery when we didn't use it by default. If we create a mixed cluster we will use unicast which gets then tested indirectly. Other way around, not sure if we need to write some bw comp test for multicast at this point.\n\n`TransportClientBackwardsCompatibilityIT` could be part of some different test infra for the java api (which would need more tests if we care). This specific test is about sniff mode, as we don't test sniffing elsewhere. If we move to a REST test infrastructure, we would also need a test for transport client without sniff, which is now tested indirectly by any of our bw comp tests as we use it to connect to the external cluster.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/215788148","html_url":"https://github.com/elastic/elasticsearch/issues/14406#issuecomment-215788148","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14406","id":215788148,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNTc4ODE0OA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-04-29T16:17:05Z","updated_at":"2016-04-29T16:17:05Z","author_association":"CONTRIBUTOR","body":"Comment copied from #18065:\n\n> The 2.x branch has a bunch of backwards compatibility tests and we need to examine each one and decide if we need to port it to the master branch (and then 5.x branch, if we've cut such a branch before doing this issue.)\n> \n> Many of them just want to run features against a mixed version cluster. We should get good enough coverage for those by running all the REST tests. Right now we run the core REST tests. I think all we have to do is run all the plugin REST tests for those tests.\n> \n> Others assert that things work during a rolling restart. Those are going to be harder to port.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/383886521","html_url":"https://github.com/elastic/elasticsearch/issues/14406#issuecomment-383886521","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14406","id":383886521,"node_id":"MDEyOklzc3VlQ29tbWVudDM4Mzg4NjUyMQ==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-04-24T10:41:59Z","updated_at":"2018-04-24T10:41:59Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/390506762","html_url":"https://github.com/elastic/elasticsearch/issues/14406#issuecomment-390506762","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14406","id":390506762,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MDUwNjc2Mg==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2018-05-20T19:52:51Z","updated_at":"2018-05-20T19:52:51Z","author_association":"MEMBER","body":"I'm closing this as our backwards compatibility testing has been improved considerably since switching to gradle, and forward porting any changes from this old issue would be very difficult and probably not add much of any additional coverage.","performed_via_github_app":null}]