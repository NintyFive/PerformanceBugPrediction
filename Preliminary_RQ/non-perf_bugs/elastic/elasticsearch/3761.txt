{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3761","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3761/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3761/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3761/events","html_url":"https://github.com/elastic/elasticsearch/issues/3761","id":19879470,"node_id":"MDU6SXNzdWUxOTg3OTQ3MA==","number":3761,"title":"Throwing exception from BulkProcessor.Listener.afterBulk results in closing down transport","user":{"login":"abhi-sanoujam","id":4243373,"node_id":"MDQ6VXNlcjQyNDMzNzM=","avatar_url":"https://avatars2.githubusercontent.com/u/4243373?v=4","gravatar_id":"","url":"https://api.github.com/users/abhi-sanoujam","html_url":"https://github.com/abhi-sanoujam","followers_url":"https://api.github.com/users/abhi-sanoujam/followers","following_url":"https://api.github.com/users/abhi-sanoujam/following{/other_user}","gists_url":"https://api.github.com/users/abhi-sanoujam/gists{/gist_id}","starred_url":"https://api.github.com/users/abhi-sanoujam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhi-sanoujam/subscriptions","organizations_url":"https://api.github.com/users/abhi-sanoujam/orgs","repos_url":"https://api.github.com/users/abhi-sanoujam/repos","events_url":"https://api.github.com/users/abhi-sanoujam/events{/privacy}","received_events_url":"https://api.github.com/users/abhi-sanoujam/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"assignees":[{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2013-09-22T21:07:01Z","updated_at":"2014-08-01T10:24:59Z","closed_at":"2014-08-01T10:24:59Z","author_association":"NONE","active_lock_reason":null,"body":"Throwing exception from the BulkProcessor.Listener.afterBulk results in transport getting closed. This results in all subsequent calls getting NoNodeAvailableException.\nIdeally it should throw ExecutionException on the caller thread or if the bulk action is executed by scheduled background thread, just log and eat up the exception probably.\n\nAdded unit test.\n\n``` java\nimport org.elasticsearch.action.bulk.BulkProcessor;\nimport org.elasticsearch.action.bulk.BulkRequest;\nimport org.elasticsearch.action.bulk.BulkResponse;\nimport org.elasticsearch.action.index.IndexRequest;\nimport org.elasticsearch.action.index.IndexRequestBuilder;\nimport org.elasticsearch.client.transport.TransportClient;\nimport org.elasticsearch.common.settings.ImmutableSettings;\nimport org.elasticsearch.common.transport.InetSocketTransportAddress;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class BulkProcessorTest {\n\n    private static final int NUM_DOCS = 10;\n    private static final String CONSTANT_ID = \"abcdef\";\n\n    @org.junit.Test\n    public void test() throws InterruptedException {\n        TransportClient client = createClient();\n        BulkProcessor bulkProcessor = BulkProcessor.builder(client, new BulkProcessorProblematicListener()).setBulkActions(NUM_DOCS).build();\n\n        List<Document> docs = createDocsWithSameId(NUM_DOCS);\n\n        int iter = 3;\n        for (int i = 0; i < iter; i++) {\n            System.out.println(\"Iteration #\" + i);\n            for (Document doc : docs) {\n                IndexRequestBuilder indexRequestBuilder = client.prepareIndex(\"test\", \"bulk\", doc.id);\n                indexRequestBuilder.setSource(doc.toJson());\n                // set op type to create for put-if-absent\n                indexRequestBuilder.setOpType(IndexRequest.OpType.CREATE);\n                bulkProcessor.add(indexRequestBuilder.request());\n            }\n            Thread.sleep(1000);\n        }\n    }\n\n    private List<Document> createDocsWithSameId(int n) {\n        List<Document> docs = new ArrayList<Document>();\n        for (int i = 0; i < n; i++) {\n            docs.add(createConstantIdDocument(i));\n        }\n        return docs;\n    }\n\n    private Document createConstantIdDocument(int id) {\n        Document doc = new Document();\n        doc.id = CONSTANT_ID;\n        doc.value = id;\n        return doc;\n    }\n\n    private static class Document {\n\n        private String id;\n        private int value;\n\n        public String toJson() {\n            return \"{\\\"value\\\":\\\"\" + value + \"\\\"}\";\n        }\n    }\n\n    private static class BulkProcessorProblematicListener implements BulkProcessor.Listener {\n        @Override\n        public void beforeBulk(long executionId, BulkRequest request) {\n\n        }\n\n        @Override\n        public void afterBulk(long executionId, BulkRequest request, BulkResponse response) {\n            if (response.hasFailures()) {\n                throw new RuntimeException(\"Failure in response - \" + response.buildFailureMessage());\n            }\n        }\n\n        @Override\n        public void afterBulk(long executionId, BulkRequest request, Throwable failure) {\n            // throwing exception here makes the transport close resulting in NoNodeAvailableException\n            throw new RuntimeException(\"Caught exception in bulk: \" + request + \", failure: \" + failure, failure);\n        }\n    }\n\n    private TransportClient createClient() {\n        ImmutableSettings.Builder settings = ImmutableSettings.settingsBuilder().put(\"cluster.name\", \"test-es-cluster\");\n        settings.put(\"nodes_sampler_interval\", \"10s\");\n        TransportClient client = new TransportClient(settings);\n        client.addTransportAddress(new InetSocketTransportAddress(\"localhost\", 9300));\n        return client;\n    }\n\n}\n\n```\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}