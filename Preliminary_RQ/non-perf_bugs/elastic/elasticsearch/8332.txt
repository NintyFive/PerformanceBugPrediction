{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/8332","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8332/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8332/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8332/events","html_url":"https://github.com/elastic/elasticsearch/issues/8332","id":47634963,"node_id":"MDU6SXNzdWU0NzYzNDk2Mw==","number":8332,"title":"Grouping on the _parent field influenced by the presence of other parent-child mappings","user":{"login":"acarstoiu","id":9536601,"node_id":"MDQ6VXNlcjk1MzY2MDE=","avatar_url":"https://avatars2.githubusercontent.com/u/9536601?v=4","gravatar_id":"","url":"https://api.github.com/users/acarstoiu","html_url":"https://github.com/acarstoiu","followers_url":"https://api.github.com/users/acarstoiu/followers","following_url":"https://api.github.com/users/acarstoiu/following{/other_user}","gists_url":"https://api.github.com/users/acarstoiu/gists{/gist_id}","starred_url":"https://api.github.com/users/acarstoiu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acarstoiu/subscriptions","organizations_url":"https://api.github.com/users/acarstoiu/orgs","repos_url":"https://api.github.com/users/acarstoiu/repos","events_url":"https://api.github.com/users/acarstoiu/events{/privacy}","received_events_url":"https://api.github.com/users/acarstoiu/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2014-11-03T19:42:10Z","updated_at":"2018-02-14T13:29:06Z","closed_at":"2016-05-05T11:31:59Z","author_association":"NONE","active_lock_reason":null,"body":"Not without surprise and after spending quite some time clueless in front of Sense, I have isolated yet another bug related to the parent-child relationship. It looks related to #5399.\nFact is that the following setup seems to work just fine (the example is simplified almost to the maximum):\n\n```\nPUT idx\n{\n    mappings:\n    {\n        Parent:\n        {\n            properties:\n            {\n                name: {type: \"string\", index: \"not_analyzed\"}\n            }\n        },\n        Child:\n        {\n            _parent: { type: \"Parent\"},\n            properties:\n            {\n                name: {type: \"string\", index: \"not_analyzed\"}\n            }\n        }\n    }\n}\n\nPOST idx/_bulk\n{create: {_id:\"A\", _type: \"Parent\"}}\n{name: \"A parent\"}\n{create: {_parent: \"A\", _type: \"Child\"}}\n{name: \"child\"}\n\nGET idx/Child/_search?pretty&fields=_parent&_source=*\n{\n    aggregations:\n    {\n        per_parent:\n        {\n            terms: {field: \"_parent\"},\n            aggs:\n            {\n                each_uid:\n                {\n                    terms: {field: \"_uid\"}\n                }\n            }\n        }\n    }\n}\n```\n\nThe aggregation on parent field values yields a single group containing a single document of type `Child`. If another child document type is brought into play\n\n```\nPUT idx/_mapping/Deeper\n{\n    _parent: { type: \"Child\"},\n    properties:\n    {\n        name: {type: \"string\", index: \"not_analyzed\"}\n    }\n}\n```\n\nthings go suddenly crazy. The above aggregation indicates the `Child` document is now also a child of itself and thus appears in a second resulting group.\nBut wait, the evil is persistent :exclamation: Even if the last introduced type is deleted via `DELETE idx/Deeper`, the aggregation still claims the same paradox. This is even more concerning than the bug itself since it shows that permanent changes to existing inverted indices are introduced along with the third document type.\n\nGiven that there's a way to avoid this bug in _1.4.0_, when is this upcoming version due? :smirk:\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}