{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/24592","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24592/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24592/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24592/events","html_url":"https://github.com/elastic/elasticsearch/issues/24592","id":227736556,"node_id":"MDU6SXNzdWUyMjc3MzY1NTY=","number":24592,"title":"Removing `{type}` from the index API","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"labels":[{"id":152517143,"node_id":"MDU6TGFiZWwxNTI1MTcxNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/REST%20API","name":":Core/Infra/REST API","color":"0e8a16","default":false,"description":"REST infrastructure and utilities"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"assignees":[{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false}],"milestone":null,"comments":12,"created_at":"2017-05-10T16:22:33Z","updated_at":"2017-07-25T13:40:34Z","closed_at":"2017-06-09T13:25:02Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"As part of the process of removing types (#15613), we need to remove `{type}` from the REST index API.  In other words:\r\n\r\n```\r\nPUT  {index}/{type}/{id}   -> PUT  {index}/{id}\r\nPOST {index}/{type}        -> POST {index}\r\n```\r\n\r\nFirst off, I don't like `POST {index}` as it is too easy to confuse with `PUT {index}` (which creates an index).  I think we should use `POST {index}/_append` instead, so we'd end up with:\r\n\r\n```\r\nPUT  {index}/{type}/{id}   -> PUT  {index}/{id}\r\nPOST {index}/{type}        -> POST {index}/_append\r\n```\r\n\r\nDuring 6.x, we need to **support both old and new URLs** as users will have some indices with types and some without.\r\n\r\nThe problem comes with how we defined the REST spec in `index.json`, where we specify `POST` and `PUT`:\r\n\r\n```\r\n    \"methods\": [\"POST\", \"PUT\"],\r\n    \"url\": {\r\n      \"paths\": [\"/{index}/{type}\", \"/{index}/{type}/{id}\"],\r\n```\r\n\r\nActually, `PUT` only works with the second URL, while `POST` works with both of them (so the clients always use `POST`).  This, however, leads to a conflict between `POST {index}/{type}` and `PUT {index}/{id}`.  The spec has no way of saying _\"use `PUT` with this URL and `POST` with the other\"_. Usually these would be separated into different specs.\r\n\r\nBelow are three possible solutions:\r\n\r\n# Add an `append()` method\r\n\r\nWe could separate out `index.json` into `index.json` (with IDs) and `append.json` (without IDs), so (in 6.x) we'd have:\r\n\r\n**index.json**:\r\n```\r\n    \"methods\": [\"PUT\"],\r\n    \"url\": {\r\n      \"paths\": [\"/{index}/{id}\", \"/{index}/{type}/{id}\"],\r\n```\r\n\r\nand\r\n\r\n**append.json**:\r\n```\r\n    \"methods\": [\"POST\"],\r\n    \"url\": {\r\n      \"paths\": [\"/{index}/_append\", \"/{index}/{type}\"],\r\n```\r\n\r\nThis would mean deprecating the `index()` method when used without IDs in 5.x in favour of the new `append()` method, so in 5.x the REST specs would look like this:\r\n\r\n**index.json**:\r\n```\r\n    \"methods\": [\"PUT\"],\r\n    \"url\": {\r\n      \"paths\": [\"/{index}/{type}\", \"/{index}/{type}/{id}\"],\r\n```\r\n\r\nand\r\n\r\n**append.json**:\r\n```\r\n    \"methods\": [\"POST\"],\r\n    \"url\": {\r\n      \"paths\": [\"/{index}/{type}\"],\r\n```\r\n\r\nand the clients would need custom code to issue a deprecation warning when the user uses `index()` without an ID.  From 6.0 onwards, the user would need to use `append()` instead of `index()`.\r\n\r\n# Default `type` to `doc`\r\n\r\nIn 6.x we could keep the old URLs only, but default `type` to `doc` (the dummy type name for 6.x indices with a single type):\r\n\r\n\r\n**index.json**:\r\n```\r\n    \"methods\": [\"POST\",\"PUT\"],\r\n    \"url\": {\r\n      \"paths\": [\"/{index}/{type}\", \"/{index}/{type}/{id}\", \"/{index}/doc/{id}\"],\r\n```\r\n\r\nbut users like to upgrade the server and the client separately, and the above wouldn't work in ES v7\r\n\r\n# QS parameter\r\n\r\nThe third option would be to add a query string parameter like `url_includes_type` (defaults to `true`), which the clients can set automatically depending on whether `type` was passed in or not.\r\n\r\nIn 6.x, `index.json` would look like this:\r\n\r\n```\r\n    \"methods\": [\"POST\", \"PUT\"],\r\n    \"url\": {\r\n      \"paths\": [ /{index}/_append, /{index}/{id}, /{index}/{type}\", \"/{index}/{type}/{id}\"],\r\n```\r\n\r\nIn ES 7 (which won't have any types), we could just ignore the setting (or throw an exception if it is set to `true`), and remove it in v8.\r\n\r\nThoughts?\r\n\r\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}