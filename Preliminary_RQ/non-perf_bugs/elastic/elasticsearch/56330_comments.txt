[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/625172033","html_url":"https://github.com/elastic/elasticsearch/issues/56330#issuecomment-625172033","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56330","id":625172033,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTE3MjAzMw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T10:34:09Z","updated_at":"2020-05-07T10:34:09Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-core-infra (:Core/Infra/Build)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/625466365","html_url":"https://github.com/elastic/elasticsearch/issues/56330#issuecomment-625466365","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56330","id":625466365,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTQ2NjM2NQ==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T19:59:37Z","updated_at":"2020-05-07T20:00:21Z","author_association":"CONTRIBUTOR","body":"Maybe you just update to version 3.0, Ryan has it prepared already. Task Avoidance works and all your complaints regarding the input output annotations are fixed.\r\n\r\nNo need to fork the project.\r\n\r\nNo deprecated warnings anymore. What's the issue?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/625469513","html_url":"https://github.com/elastic/elasticsearch/issues/56330#issuecomment-625469513","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56330","id":625469513,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTQ2OTUxMw==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T20:06:02Z","updated_at":"2020-05-07T20:06:02Z","author_association":"CONTRIBUTOR","body":"I closed the issue on the forbiddenapis side. The only thing is the dynamically compiled Groovy script on apply. But that's neglevtible, look at your absolute numbers. Parsing signature files is a much higher overhead. I would like to work on that and caching them in the plugin, not on some minimal startup cost of a millisecond.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/625504994","html_url":"https://github.com/elastic/elasticsearch/issues/56330#issuecomment-625504994","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56330","id":625504994,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTUwNDk5NA==","user":{"login":"breskeby","id":77300,"node_id":"MDQ6VXNlcjc3MzAw","avatar_url":"https://avatars3.githubusercontent.com/u/77300?v=4","gravatar_id":"","url":"https://api.github.com/users/breskeby","html_url":"https://github.com/breskeby","followers_url":"https://api.github.com/users/breskeby/followers","following_url":"https://api.github.com/users/breskeby/following{/other_user}","gists_url":"https://api.github.com/users/breskeby/gists{/gist_id}","starred_url":"https://api.github.com/users/breskeby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/breskeby/subscriptions","organizations_url":"https://api.github.com/users/breskeby/orgs","repos_url":"https://api.github.com/users/breskeby/repos","events_url":"https://api.github.com/users/breskeby/events{/privacy}","received_events_url":"https://api.github.com/users/breskeby/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T21:23:27Z","updated_at":"2020-05-07T21:23:27Z","author_association":"CONTRIBUTOR","body":"Thanks Uwe for the fast and thorough feedback. We’ll upgrade to the latest release and then will revisit this issue from there. I _think_ though that the groovy compilation stuff in the plugin is a bit more expensive in certain scenarios than _a few_ miliseconds. Again, I’ll do the update and i want to run some tests to proof or disproof this believe. \n\n> On 7. May 2020, at 22:06, Uwe Schindler <notifications@github.com> wrote:\n> \n> ﻿\n> I closed the issue on the forbiddenapis side. The only thing is the dynamically compiled Groovy script on apply. But that's neglevtible, look at your absolute numbers. Parsing signature files is a much higher overhead. I would like to work on that and caching them in the plugin, not on some minimal startup cost of a millisecond.\n> \n> —\n> You are receiving this because you were assigned.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/625510067","html_url":"https://github.com/elastic/elasticsearch/issues/56330#issuecomment-625510067","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56330","id":625510067,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTUxMDA2Nw==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T21:36:34Z","updated_at":"2020-05-07T21:36:34Z","author_association":"CONTRIBUTOR","body":"Ok. The compilation only happens one time on loading of the plugin java class. So it's must be a static cost and should not be relevant for a huge project like Elasticsearch.\r\n\r\nIf you see some cost per project apply(), it could be because of another bottleneck. Currently it does some reflection on each apply. I can move that up and do once static (it creates a convention mapping for all extension props). That's easy to fix, could come with next version.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/625514722","html_url":"https://github.com/elastic/elasticsearch/issues/56330#issuecomment-625514722","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56330","id":625514722,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTUxNDcyMg==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T21:49:23Z","updated_at":"2020-05-07T21:49:23Z","author_association":"CONTRIBUTOR","body":"It would be nice to get access to the link posted above with the build analysis so I can look at the graphs. I know much better what's going on and could figure out what you are seeing. In addition, most benchmarks have problems with one time costs (cold jvm, all takes long, and stupidly forbiddenapis is the first one using groovy parser and compiler. On the other hand later code also using dynamic groovy isz faster, forbiddenapis is just the bad guy because it was the first). Working the whole day on such stuff when optimizing Lucene and developing bytecode optimizers like painless compiler (a lot of its code was written by me), one should focus on real problems not startup costs. Painless scripts are also slow on first run and therefore much slower on startup than previous groovy in Elasticsearch. But on.long run they are like 200 times faster.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/625522845","html_url":"https://github.com/elastic/elasticsearch/issues/56330#issuecomment-625522845","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56330","id":625522845,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTUyMjg0NQ==","user":{"login":"breskeby","id":77300,"node_id":"MDQ6VXNlcjc3MzAw","avatar_url":"https://avatars3.githubusercontent.com/u/77300?v=4","gravatar_id":"","url":"https://api.github.com/users/breskeby","html_url":"https://github.com/breskeby","followers_url":"https://api.github.com/users/breskeby/followers","following_url":"https://api.github.com/users/breskeby/following{/other_user}","gists_url":"https://api.github.com/users/breskeby/gists{/gist_id}","starred_url":"https://api.github.com/users/breskeby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/breskeby/subscriptions","organizations_url":"https://api.github.com/users/breskeby/orgs","repos_url":"https://api.github.com/users/breskeby/repos","events_url":"https://api.github.com/users/breskeby/events{/privacy}","received_events_url":"https://api.github.com/users/breskeby/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T22:11:24Z","updated_at":"2020-05-07T22:11:42Z","author_association":"CONTRIBUTOR","body":"@uschindler I cannot grant you access to this Gradle Enterprise instance, but what the link shows is that the application of the plugin to the benchmark subproject took 1.596s configuration time. Again this is done with the older plugin version and does not take into account the improvements done in 3.0.\r\n\r\nThe link is not a prober benchmark though just a certain ci build I saw in our build pipeline. the way we setup the elastic ci infrastructure (with transient docker based ci workers) makes it likely to have a build started with a fresh daemon (as in this example here).\r\n\r\nAgain, let me get back to you with a proper benchmarking. I'll use the Gradle-profiler project (https://github.com/gradle/gradle-profiler) for that, which also allows testing different scenarios (simple build, vs full build, vs IDE sync with and without daemons). ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/625550014","html_url":"https://github.com/elastic/elasticsearch/issues/56330#issuecomment-625550014","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56330","id":625550014,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTU1MDAxNA==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T23:37:56Z","updated_at":"2020-05-07T23:38:09Z","author_association":"CONTRIBUTOR","body":"I added a PR to forbiddenapis with my previous optimization idea. Maybe you can test this after upgrade to 3.0 (just try snapshot version from sonatype or compile locally and use `gradle -Dmaven.local=true' when running ES build.\r\n\r\nStill the 1.5 seconds must come from somewhere else. I think it's caused by the fact that the task was initialized on `project.apply()` without task avoidance support - and it was therefore initializing too much stuff like JVM properties, signatures,...","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/625565072","html_url":"https://github.com/elastic/elasticsearch/issues/56330#issuecomment-625565072","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56330","id":625565072,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTU2NTA3Mg==","user":{"login":"rjernst","id":289412,"node_id":"MDQ6VXNlcjI4OTQxMg==","avatar_url":"https://avatars3.githubusercontent.com/u/289412?v=4","gravatar_id":"","url":"https://api.github.com/users/rjernst","html_url":"https://github.com/rjernst","followers_url":"https://api.github.com/users/rjernst/followers","following_url":"https://api.github.com/users/rjernst/following{/other_user}","gists_url":"https://api.github.com/users/rjernst/gists{/gist_id}","starred_url":"https://api.github.com/users/rjernst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjernst/subscriptions","organizations_url":"https://api.github.com/users/rjernst/orgs","repos_url":"https://api.github.com/users/rjernst/repos","events_url":"https://api.github.com/users/rjernst/events{/privacy}","received_events_url":"https://api.github.com/users/rjernst/received_events","type":"User","site_admin":false},"created_at":"2020-05-08T00:32:06Z","updated_at":"2020-05-08T00:32:06Z","author_association":"MEMBER","body":"It looks to me task configuration avoidance completely removes the slowdown.\r\n\r\nFrom the linked build here, running the tar distribution's assemble task:\r\n```\r\nde.thetaphi.forbiddenapis | Plugin | 2.196s |   | Applied to 239 projects | 861 tasks created | \r\n  | :benchmarks | 1.596s |   |   | 4 tasks created\r\n\r\n```\r\n\r\nAnd from the same task with my upgrade to 3.0:\r\n```\r\nde.thetaphi.forbiddenapis | Plugin | 0.137s |   | Applied to 239 projects |  \r\n  | :benchmarks | 0.080s |   |  \r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/625740437","html_url":"https://github.com/elastic/elasticsearch/issues/56330#issuecomment-625740437","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56330","id":625740437,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTc0MDQzNw==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2020-05-08T10:00:05Z","updated_at":"2020-05-08T10:00:05Z","author_association":"CONTRIBUTOR","body":"OK thanks for feedback! I still committed the PR on forbiddenapis, so it will come with next version, but I did not expect much difference. Great Work @rjernst, it was good to work wih you! You PR (https://github.com/policeman-tools/forbidden-apis/pull/162) a month ago was really cool. And in combination with the dynamically compiled script this is fully flexible.\r\n\r\n@breskeby the problem with gradle is really that it changes all the time and sometimes a major release with backwards compatibility only exists for like 12 months. Because of this you sometimes need to release a new version of plugins quite often. As I can't do this all the time, please excuse: Users must live with deprecation warnings from time to time. That's not the plugin developer's fault, it's just that release cycles are too fast. For a one-man show this is to short.\r\n\r\nIn addition as there's also Maven and Ant and sometimes minimum Java version constraints, in addition to fixed requirements on ASM versions, so you can't always rely on latest Gradle version or use stuff like `compile gradleApi()`. Because of this the dynamic plugin initialization is perfect. We only compile against a minimum Gradle API from a Gradle's Maven Repo, which was IMHO a good design decision. In the early stage, the script was indeed compiled per project, but if you read the code now, the way how it's setup does not bring a per project overhead, the compilation phase of the dynamic script is only once on class loading. And that's not more expensive than loading a class in Java; it's a one-time cost.\r\n\r\nNevertheless, thanks for the feedback. \r\n\r\nI just committed a \"import\" statement cleanup as folowup to yesterday: https://github.com/policeman-tools/forbidden-apis/commit/0613f4de8afc0330550fe8d0330f5aee3c2f1bd1","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/625744558","html_url":"https://github.com/elastic/elasticsearch/issues/56330#issuecomment-625744558","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56330","id":625744558,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTc0NDU1OA==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2020-05-08T10:11:30Z","updated_at":"2020-05-08T10:13:52Z","author_association":"CONTRIBUTOR","body":"But there's one question I have for @breskeby , a bit unrelated: There are some class unloading problems in Gradle causing issues if forbiddenapis is used with the gradle daemon. So it defaults to disable internal classloader URI caching, because otherwise you have problems like stale class files when underlying jar file of your build is repackaged (may also lead to JVM crash in Java 8).\r\n\r\nNow with recent Gradle versions, the daemon is always used, also when you explicitely disable it - the only difference is that its shutdown after build. But the detection code in forbiddenapis detects daemon usage and then disables the caching, although it's not a problem for the single-use case.\r\n\r\nDo you know a good way how to detect if Gradle is running in the daemon, and if it's single-use. Current detection code is:\r\n\r\nhttps://github.com/policeman-tools/forbidden-apis/blob/master/src/main/java/de/thetaphi/forbiddenapis/gradle/ForbiddenApisPlugin.java#L122-L133\r\n\r\nThe linked stackoverflow question has now a new answer that looks like it allows to detect the \"single use\" daemon.\r\n\r\n```\r\nval daemonScanInfo: DaemonScanInfo? = (project as DefaultProject).services.get(DaemonScanInfo::class.java)\r\nval runningAsDaemon = !daemonScanInfo.isSingleUse\r\n```\r\n\r\nWhat do you think? I don't like to discuss about pros/cons of Gradle Daemon, I just want to detect it and if I have detected it, if its \"single-use\". Because if that's the case, I can enable more optmization, not possible with multiple-use gradle daemon.\r\n\r\nThis would speed up CI builds by a certain amount, as scanning would be faster, if the Daemon is disabled anyways for CI builds.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/625909099","html_url":"https://github.com/elastic/elasticsearch/issues/56330#issuecomment-625909099","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56330","id":625909099,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTkwOTA5OQ==","user":{"login":"breskeby","id":77300,"node_id":"MDQ6VXNlcjc3MzAw","avatar_url":"https://avatars3.githubusercontent.com/u/77300?v=4","gravatar_id":"","url":"https://api.github.com/users/breskeby","html_url":"https://github.com/breskeby","followers_url":"https://api.github.com/users/breskeby/followers","following_url":"https://api.github.com/users/breskeby/following{/other_user}","gists_url":"https://api.github.com/users/breskeby/gists{/gist_id}","starred_url":"https://api.github.com/users/breskeby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/breskeby/subscriptions","organizations_url":"https://api.github.com/users/breskeby/orgs","repos_url":"https://api.github.com/users/breskeby/repos","events_url":"https://api.github.com/users/breskeby/events{/privacy}","received_events_url":"https://api.github.com/users/breskeby/received_events","type":"User","site_admin":false},"created_at":"2020-05-08T16:48:22Z","updated_at":"2020-05-08T16:48:22Z","author_association":"CONTRIBUTOR","body":"> @breskeby the problem with gradle is really that it changes all the time and sometimes a major release with backwards compatibility only exists for like 12 months. Because of this you sometimes need to release a new version of plugins quite often. As I can't do this all the time, please excuse: Users must live with deprecation warnings from time to time. That's not the plugin developer's fault, it's just that release cycles are too fast. For a one-man show this is to short.\r\n\r\n@uschindler I can totally see your point and I really appreciate the work you do here as open source. At Gradle we really try and invest a lot (they try, I _tried_, as I'm not an active gradle core committer anymore) to stay backwards compatible, but as you said the release cycle is relative _aggressive_ which I think is good to keep the innovation going fast and which allowed bringing a lot of good things to gradle over the last years. The typical cycle usually is one major version per year. \r\nThough I can see how that can be too fast for open source contributors who mostly do that in their spare time or as a hobby and with other priorities that gradle integration. Obviously no one can expect you to be on top of all the changes in Gradle with every 6 weeks. Thats why I also offered my help in the initial issue raised in your repo.\r\n\r\nRegarding the daemon issue. `daemonInfo.isSingleUse` is indeed what you're looking for. Likely the reason for single use daemons to be started is, that there is a `org.gradle.jvmargs` property set in the gradle.properties that cannot be matched with the already started jvm. Most likely a memory setting like `-Xmx` or `-Xms`. Java does not allow to change that for an already running process thats why another processed is forked here. To avoid that behaviour you could pass those settings by using a `GRADLE_OPTS` environment variable. This is passed to the initial gradle process and should make the gradle build to not fork a daemon. \r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/625968553","html_url":"https://github.com/elastic/elasticsearch/issues/56330#issuecomment-625968553","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56330","id":625968553,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTk2ODU1Mw==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2020-05-08T19:02:41Z","updated_at":"2020-05-08T19:02:41Z","author_association":"CONTRIBUTOR","body":"The current forbiddenapis release cycle is about 6 months maximum, because whenever a new Java Version comes out some changes or updates are needed.\r\n\r\nThis is also the time when I merge most pull requests, unless it's something urgent. This should be enough time to update and remove deprecations in Gradle code.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/626644134","html_url":"https://github.com/elastic/elasticsearch/issues/56330#issuecomment-626644134","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/56330","id":626644134,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjY0NDEzNA==","user":{"login":"breskeby","id":77300,"node_id":"MDQ6VXNlcjc3MzAw","avatar_url":"https://avatars3.githubusercontent.com/u/77300?v=4","gravatar_id":"","url":"https://api.github.com/users/breskeby","html_url":"https://github.com/breskeby","followers_url":"https://api.github.com/users/breskeby/followers","following_url":"https://api.github.com/users/breskeby/following{/other_user}","gists_url":"https://api.github.com/users/breskeby/gists{/gist_id}","starred_url":"https://api.github.com/users/breskeby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/breskeby/subscriptions","organizations_url":"https://api.github.com/users/breskeby/orgs","repos_url":"https://api.github.com/users/breskeby/repos","events_url":"https://api.github.com/users/breskeby/events{/privacy}","received_events_url":"https://api.github.com/users/breskeby/received_events","type":"User","site_admin":false},"created_at":"2020-05-11T11:26:33Z","updated_at":"2020-05-11T11:26:33Z","author_association":"CONTRIBUTOR","body":"quick update. After the update to 3.0 with the changes from @rjernst I see that the initialising cost of the plugin went down to around ~350ms. Given this is only happening against a cold daemon I think we can close this issue for now. when opening it I didn't realise there was already a PR and a newer version with the made changes avaiable. The update to 3.0 is a nice improvement. ","performed_via_github_app":null}]