[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/516317046","html_url":"https://github.com/elastic/elasticsearch/issues/44995#issuecomment-516317046","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44995","id":516317046,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNjMxNzA0Ng==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2019-07-30T08:20:14Z","updated_at":"2019-07-30T08:20:14Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/516334613","html_url":"https://github.com/elastic/elasticsearch/issues/44995#issuecomment-516334613","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44995","id":516334613,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNjMzNDYxMw==","user":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"created_at":"2019-07-30T09:08:42Z","updated_at":"2019-07-30T09:08:42Z","author_association":"CONTRIBUTOR","body":"I'm all for reducing allocations and streamlining things where appropriate, but the compatibility (particularly BWC) implications of such a change to the wire format make me very uneasy. It's already reasonably tricky to pin down some serialisation issues, and having the on-the-wire format be dependent on some earlier handshake would make this much much worse.\r\n\r\n> the two nodes could simply exchange\r\n\r\n\"simply\" ðŸ˜­ \r\n\r\nI am pretty unconvinced that the 20-30 bytes of action on the wire has a significant performance impact. I'd like to suggest keeping the strings on the wire and looking for a way to process them without as many allocations. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/516461524","html_url":"https://github.com/elastic/elasticsearch/issues/44995#issuecomment-516461524","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44995","id":516461524,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNjQ2MTUyNA==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2019-07-30T15:07:46Z","updated_at":"2019-07-30T15:07:46Z","author_association":"MEMBER","body":"> \"simply\" :sob: \r\n\r\nI apologize :) \r\n\r\n> I am pretty unconvinced that the 20-30 bytes of action on the wire has a significant performance impact. \r\n\r\nIn isolation this doesn't matter much probably, I agree. On the other hand, this would reduce the cost of ideas like application level keep-alives quite a bit.  Also, with compressed transport enabled, we currently have to decompress (at least a block of it which costs buffers etc.) the message on the IO thread-pool to figure out what where to handle the message (and if we may circuit break it!).\r\nI think the value of this is more in the applications it enables without adding overhead.\r\n\r\nCould also use this for proxy-type situations that were recently discussed, where having the ability to just put the type of a message in a fixed size header might be pretty neat?\r\n\r\nAdmittedly, the most of the possible applications could be enabled pretty cheaply by just moving the action string before the compressed section of the message (and yes we could 0-GC look up the transport action as well). \r\nMaybe it just seemed more aesthetically pleasing to do what most other protocols do (Kafka, Cassandra etc.) than to send clear text strings in our internal protocol. Fixed size request headers are just always nice I guess when trying to do some routing/prioritization  (looking at you replication requests).","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/516861248","html_url":"https://github.com/elastic/elasticsearch/issues/44995#issuecomment-516861248","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/44995","id":516861248,"node_id":"MDEyOklzc3VlQ29tbWVudDUxNjg2MTI0OA==","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"created_at":"2019-07-31T13:59:39Z","updated_at":"2019-07-31T13:59:45Z","author_association":"MEMBER","body":"Closing here, we discussed it and decided the complication isn't worth the gain.","performed_via_github_app":null}]