{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/14414","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14414/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14414/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14414/events","html_url":"https://github.com/elastic/elasticsearch/issues/14414","id":114401471,"node_id":"MDU6SXNzdWUxMTQ0MDE0NzE=","number":14414,"title":"Expand testing of queries","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":60445228,"node_id":"MDU6TGFiZWw2MDQ0NTIyOA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest","name":">test","color":"5319e7","default":false,"description":"Issues or PRs that are addressing/adding tests"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null},{"id":110815527,"node_id":"MDU6TGFiZWwxMTA4MTU1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/help%20wanted","name":"help wanted","color":"207de5","default":true,"description":"adoptme"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-10-31T10:03:19Z","updated_at":"2018-07-10T12:07:08Z","closed_at":"2018-07-10T12:07:08Z","author_association":"MEMBER","active_lock_reason":null,"body":"Similar to what we attempted with #11608, we should find a way to expand the range of queries that we test against in our query tests. Our random query generator currently generates a query out of a very limited set of supported queries. Also those queries are always leaf queries. See https://github.com/elastic/elasticsearch/blob/master/core/src/test/java/org/elasticsearch/index/query/RandomQueryBuilder.java#L41 .\n\nWe should expand the set of random queries, at the same time without going nuts otherwise or we'll end up with too complicated queries that make test failures super tricky to debug. For instance it's important to set a reasonable maximum depth in case we introduce compound queries.\n\nThis might end up being a big-ish change to the query test infra given that at the moment our tests depend on each other (e.g. to generate a random term on any test query we do `new TermQueryBuilderTests().createTestQueryBuilder()`). Maybe we should extract that logic from the tests like I tried to do in #11608, not sure.\n\nAlso, we should do the same for span queries. At the moment we only create span_term queries, but span queries can be combined together (e.g. span_or that contains span_not etc.) and we never test that (besides few specific tests that have been written).\n\nAlso, while we make changes we should take into account some todos that are currently in `SearchSourceBuilderTests` (see https://github.com/elastic/elasticsearch/blob/master/core/src/test/java/org/elasticsearch/search/builder/SearchSourceBuilderTests.java#L214). Seems like we should find a way to test against random queries when generating a random search source too. Maybe we just need to make the query generation a little more generic.\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}