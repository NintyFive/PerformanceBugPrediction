[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/373472197","html_url":"https://github.com/elastic/elasticsearch/issues/22537#issuecomment-373472197","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/22537","id":373472197,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MzQ3MjE5Nw==","user":{"login":"markharwood","id":170925,"node_id":"MDQ6VXNlcjE3MDkyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/170925?v=4","gravatar_id":"","url":"https://api.github.com/users/markharwood","html_url":"https://github.com/markharwood","followers_url":"https://api.github.com/users/markharwood/followers","following_url":"https://api.github.com/users/markharwood/following{/other_user}","gists_url":"https://api.github.com/users/markharwood/gists{/gist_id}","starred_url":"https://api.github.com/users/markharwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markharwood/subscriptions","organizations_url":"https://api.github.com/users/markharwood/orgs","repos_url":"https://api.github.com/users/markharwood/repos","events_url":"https://api.github.com/users/markharwood/events{/privacy}","received_events_url":"https://api.github.com/users/markharwood/received_events","type":"User","site_admin":false},"created_at":"2018-03-15T18:09:53Z","updated_at":"2018-03-15T18:09:53Z","author_association":"CONTRIBUTOR","body":">if the reduce phase is each shard returning (NumberActions, count)\r\n> then implementation is efficient.\r\n\r\nBut inaccurate. It would fail to provide a globally accurate count for each thing as it loses the key to sum thing1's counts from multiple shards. Given the typical randomised routing of documents to shards each thing's reported global number of actions would be, roughly speaking, 1/numShards of its true value.\r\n\r\nThe problem keeps coming back to the age-old issue of attempting behavioural analysis of high-cardinality entities on an event-centric store where each entity's related events are scattered around a network. There's too much cost and resources involved in joining the related data together at query time so maintaining an entity-centric index where related data is indexed locally is the only sensible approach. \r\n\r\n>The thread on #21962 went so fast that I couldn't discuss.\r\n\r\nThis issue has been open a year without any discussion and I would suggest the same solution [proposed on the previous related issue](https://github.com/elastic/elasticsearch/issues/21962#issuecomment-265217574) so will close this.\r\n\r\n\r\n\r\n","performed_via_github_app":null}]