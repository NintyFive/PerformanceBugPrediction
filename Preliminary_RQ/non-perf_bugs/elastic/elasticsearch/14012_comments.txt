[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/146541696","html_url":"https://github.com/elastic/elasticsearch/issues/14012#issuecomment-146541696","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14012","id":146541696,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjU0MTY5Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-10-08T13:16:09Z","updated_at":"2015-10-08T13:16:09Z","author_association":"CONTRIBUTOR","body":"Hi @dblado \n\nSo much has changed since then.  Would it be possible to copy the index into a node with 1.7.2 and try the query there, to see if the problem still exists?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/146655616","html_url":"https://github.com/elastic/elasticsearch/issues/14012#issuecomment-146655616","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14012","id":146655616,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjY1NTYxNg==","user":{"login":"dblado","id":926459,"node_id":"MDQ6VXNlcjkyNjQ1OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/926459?v=4","gravatar_id":"","url":"https://api.github.com/users/dblado","html_url":"https://github.com/dblado","followers_url":"https://api.github.com/users/dblado/followers","following_url":"https://api.github.com/users/dblado/following{/other_user}","gists_url":"https://api.github.com/users/dblado/gists{/gist_id}","starred_url":"https://api.github.com/users/dblado/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dblado/subscriptions","organizations_url":"https://api.github.com/users/dblado/orgs","repos_url":"https://api.github.com/users/dblado/repos","events_url":"https://api.github.com/users/dblado/events{/privacy}","received_events_url":"https://api.github.com/users/dblado/received_events","type":"User","site_admin":false},"created_at":"2015-10-08T19:02:27Z","updated_at":"2015-10-08T19:02:27Z","author_association":"NONE","body":"@clintongormley sure thing. I am using 1.6.0 locally just haven't needed to upgrade prod yet.\n\nLoading my full dataset (~5.5mln documents) into 1.7.2 and running the same query shows 4/5 shards failing.\n\nresponse error:\n\n```\n\"failures\": [\n{\n\"index\": \"vendop_v1\",\n\"shard\": 0,\n\"status\": 500,\n\"reason\": \"QueryPhaseExecutionException[[vendop_v1][0]: query[filtered(filtered((function score (name.lower_raw:molding,function=boost[20.0]) function score (name:molding~2,function=boost[10.0]) _all:molding function score (ConstantScore(*:*),function=org.elasticsearch.common.lucene.search.function.FieldValueFactorFunction@6267d318) function score (services:523e900941233f628f8eee71 services:523e900941233f628f8eee72 services:54359cfeae304c2f77d6adb6 services:523e900941233f628f8eee70 services:53dfabeb2a2dfa23de430fcf services:547ba915ae304c5e979f40f0 services:5227a9b0c64c8c1739698315 services:5328a646c61e3610d056ca90 services:52450165a4283d7aaa000000 services:533afb1fc61e3662d1cecdc2 services:523e900941233f628f8eee6f services:53dfabcd2a2dfa23de430fcd services:523e900941233f628f8eee74 services:547a7a6d2a2dfa2aaac69fb3 services:523e900941233f628f8eee75 services:53f39ac2ae304c77eaa2289e services:53dfabde2a2dfa23de430fce,function=boost[25.0]))~3)->BooleanFilter(+GeoDistanceFilter(location2.coordinates, SLOPPY_ARC, 80467.2, 37.7749295, -122.4194155)))->cache(+_type:vendor +org.elasticsearch.index.search.nested.NonNestedDocsFilter@20b3a141)],from[0],size[20]: Query Failed [Failed to execute main query]]; nested: ElasticsearchException[Missing value for field [reviews_length]]; \"\n}\n```\n\nlog error:\n\n```\n[2015-10-08 11:59:40,681][DEBUG][action.search.type       ] [Battletide] [vendop_v1][0], node[6e1xCs4yTU-uzvFvZeWp_A], [P], s[STARTED]: Failed to execute [org.elasticsearch.action.search.SearchRequest@67a2443a] lastShard [true]\norg.elasticsearch.search.query.QueryPhaseExecutionException: [vendop_v1][0]: query[filtered(filtered((function score (name.lower_raw:molding,function=boost[20.0]) function score (name:molding~2,function=boost[10.0]) _all:molding function score (ConstantScore(*:*),function=org.elasticsearch.common.lucene.search.function.FieldValueFactorFunction@6267d318) function score (services:523e900941233f628f8eee71 services:523e900941233f628f8eee72 services:54359cfeae304c2f77d6adb6 services:523e900941233f628f8eee70 services:53dfabeb2a2dfa23de430fcf services:547ba915ae304c5e979f40f0 services:5227a9b0c64c8c1739698315 services:5328a646c61e3610d056ca90 services:52450165a4283d7aaa000000 services:533afb1fc61e3662d1cecdc2 services:523e900941233f628f8eee6f services:53dfabcd2a2dfa23de430fcd services:523e900941233f628f8eee74 services:547a7a6d2a2dfa2aaac69fb3 services:523e900941233f628f8eee75 services:53f39ac2ae304c77eaa2289e services:53dfabde2a2dfa23de430fce,function=boost[25.0]))~3)->BooleanFilter(+GeoDistanceFilter(location2.coordinates, SLOPPY_ARC, 80467.2, 37.7749295, -122.4194155)))->cache(+_type:vendor +org.elasticsearch.index.search.nested.NonNestedDocsFilter@20b3a141)],from[0],size[20]: Query Failed [Failed to execute main query]\n    at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:163)\n    at org.elasticsearch.search.SearchService.loadOrExecuteQueryPhase(SearchService.java:301)\n    at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:312)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$5.call(SearchServiceTransportAction.java:231)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$5.call(SearchServiceTransportAction.java:228)\n    at org.elasticsearch.search.action.SearchServiceTransportAction$23.run(SearchServiceTransportAction.java:559)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: org.elasticsearch.ElasticsearchException: Missing value for field [reviews_length]\n    at org.elasticsearch.common.lucene.search.function.FieldValueFactorFunction.score(FieldValueFactorFunction.java:71)\n    at org.elasticsearch.common.lucene.search.function.FunctionScoreQuery$FunctionFactorScorer.innerScore(FunctionScoreQuery.java:170)\n    at org.elasticsearch.common.lucene.search.function.CustomBoostFactorScorer$AnyNextDoc.score(CustomBoostFactorScorer.java:133)\n    at org.elasticsearch.common.lucene.search.function.CustomBoostFactorScorer.score(CustomBoostFactorScorer.java:71)\n    at org.apache.lucene.search.MinShouldMatchSumScorer.evaluateSmallestDocInHeap(MinShouldMatchSumScorer.java:170)\n    at org.apache.lucene.search.MinShouldMatchSumScorer.nextDoc(MinShouldMatchSumScorer.java:142)\n    at org.apache.lucene.search.FilteredQuery$QueryFirstScorer.nextDoc(FilteredQuery.java:176)\n    at org.apache.lucene.search.FilteredQuery$QueryFirstScorer.advance(FilteredQuery.java:187)\n    at org.apache.lucene.search.FilteredQuery$LeapFrogScorer.advanceToNextCommonDoc(FilteredQuery.java:274)\n    at org.apache.lucene.search.FilteredQuery$LeapFrogScorer.nextDoc(FilteredQuery.java:286)\n    at org.apache.lucene.search.Weight$DefaultBulkScorer.scoreAll(Weight.java:192)\n    at org.apache.lucene.search.Weight$DefaultBulkScorer.score(Weight.java:163)\n    at org.apache.lucene.search.BulkScorer.score(BulkScorer.java:35)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:621)\n    at org.elasticsearch.search.internal.ContextIndexSearcher.search(ContextIndexSearcher.java:191)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:491)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:448)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:281)\n    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:269)\n    at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:157)\n    ... 8 more\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/146661709","html_url":"https://github.com/elastic/elasticsearch/issues/14012#issuecomment-146661709","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14012","id":146661709,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjY2MTcwOQ==","user":{"login":"dblado","id":926459,"node_id":"MDQ6VXNlcjkyNjQ1OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/926459?v=4","gravatar_id":"","url":"https://api.github.com/users/dblado","html_url":"https://github.com/dblado","followers_url":"https://api.github.com/users/dblado/followers","following_url":"https://api.github.com/users/dblado/following{/other_user}","gists_url":"https://api.github.com/users/dblado/gists{/gist_id}","starred_url":"https://api.github.com/users/dblado/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dblado/subscriptions","organizations_url":"https://api.github.com/users/dblado/orgs","repos_url":"https://api.github.com/users/dblado/repos","events_url":"https://api.github.com/users/dblado/events{/privacy}","received_events_url":"https://api.github.com/users/dblado/received_events","type":"User","site_admin":false},"created_at":"2015-10-08T19:22:04Z","updated_at":"2015-10-08T19:22:04Z","author_association":"NONE","body":"@clintongormley FYI, on 1.7.2, If I add the range filter, there are no errors and hits.total = 33 (expected):\n\n```\n            {\n              \"range\": {\n                \"reviews_length\": {\n                  \"gte\": 0\n                }\n              }\n            }\n```\n\nOn 1.6.0, adding the range filter shows an error on one shard and hits.total = 26\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/146709964","html_url":"https://github.com/elastic/elasticsearch/issues/14012#issuecomment-146709964","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14012","id":146709964,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjcwOTk2NA==","user":{"login":"jimfingal","id":442224,"node_id":"MDQ6VXNlcjQ0MjIyNA==","avatar_url":"https://avatars2.githubusercontent.com/u/442224?v=4","gravatar_id":"","url":"https://api.github.com/users/jimfingal","html_url":"https://github.com/jimfingal","followers_url":"https://api.github.com/users/jimfingal/followers","following_url":"https://api.github.com/users/jimfingal/following{/other_user}","gists_url":"https://api.github.com/users/jimfingal/gists{/gist_id}","starred_url":"https://api.github.com/users/jimfingal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimfingal/subscriptions","organizations_url":"https://api.github.com/users/jimfingal/orgs","repos_url":"https://api.github.com/users/jimfingal/repos","events_url":"https://api.github.com/users/jimfingal/events{/privacy}","received_events_url":"https://api.github.com/users/jimfingal/received_events","type":"User","site_admin":false},"created_at":"2015-10-08T22:50:45Z","updated_at":"2015-10-08T22:50:45Z","author_association":"NONE","body":"On 1.7.1, I have a similar error with a query involving function scores and a `geo_bounding_box` filter. I have the same behavior where I get an error that says the field was missing, even though I confirm with a query + \"missing\" filter that no documents in this doctype have this field missing. (I have documents across other doctypes with this field not present.)\n\nWhat is strange, is if I removed the `geo_bounding_box` filter, I get results back fine and no longer see the error. Behavior persists after I cleared the cache.\n\nError root cause was a similar: `Query Failed [Failed to execute main query]]; nested: ElasticsearchException[Missing value for field [a4]];`\n\n@dblado -- kind of curious, if you don't have that range filter, and you remove the `geo_distance` filter, do you still get the error?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/146712401","html_url":"https://github.com/elastic/elasticsearch/issues/14012#issuecomment-146712401","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14012","id":146712401,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjcxMjQwMQ==","user":{"login":"dblado","id":926459,"node_id":"MDQ6VXNlcjkyNjQ1OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/926459?v=4","gravatar_id":"","url":"https://api.github.com/users/dblado","html_url":"https://github.com/dblado","followers_url":"https://api.github.com/users/dblado/followers","following_url":"https://api.github.com/users/dblado/following{/other_user}","gists_url":"https://api.github.com/users/dblado/gists{/gist_id}","starred_url":"https://api.github.com/users/dblado/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dblado/subscriptions","organizations_url":"https://api.github.com/users/dblado/orgs","repos_url":"https://api.github.com/users/dblado/repos","events_url":"https://api.github.com/users/dblado/events{/privacy}","received_events_url":"https://api.github.com/users/dblado/received_events","type":"User","site_admin":false},"created_at":"2015-10-08T23:07:44Z","updated_at":"2015-10-08T23:17:46Z","author_association":"NONE","body":"Hi @jimmytheleaf I do still get the error but not on all shards. I didn't notice the error because some shards succeeded and returned results.\n\nIf I remove my minimum_should_match or the field_value_factor should clause, all shards are successful. Playing w/ minimum_shoud_match, values of 1 and 3 do not error, value of 2 does.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/146951617","html_url":"https://github.com/elastic/elasticsearch/issues/14012#issuecomment-146951617","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14012","id":146951617,"node_id":"MDEyOklzc3VlQ29tbWVudDE0Njk1MTYxNw==","user":{"login":"jimfingal","id":442224,"node_id":"MDQ6VXNlcjQ0MjIyNA==","avatar_url":"https://avatars2.githubusercontent.com/u/442224?v=4","gravatar_id":"","url":"https://api.github.com/users/jimfingal","html_url":"https://github.com/jimfingal","followers_url":"https://api.github.com/users/jimfingal/followers","following_url":"https://api.github.com/users/jimfingal/following{/other_user}","gists_url":"https://api.github.com/users/jimfingal/gists{/gist_id}","starred_url":"https://api.github.com/users/jimfingal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimfingal/subscriptions","organizations_url":"https://api.github.com/users/jimfingal/orgs","repos_url":"https://api.github.com/users/jimfingal/repos","events_url":"https://api.github.com/users/jimfingal/events{/privacy}","received_events_url":"https://api.github.com/users/jimfingal/received_events","type":"User","site_admin":false},"created_at":"2015-10-09T18:13:36Z","updated_at":"2015-10-09T18:13:36Z","author_association":"NONE","body":"Another datapoint, and suggestion for me that there is something odd going on with the way filters are being applied -- I'm doing a query that involves a `geo_bounding_box` filter and a set of `field_value_factor` functions on an index + doctype. I.E. `POST /<index-name>/<doctype>/_search`.\n\nIf I add a term filter for the doctype, i.e.:\n\n``` javascript\n{ \"term\" : { \"_type\": <doctype>}}\n```\n\nI no longer get the spurious `ElasticsearchException[Missing value for field [<fieldname>]];` Issue.\n\nKinda suggests for me that something about the geo filter is causing my query to funnel documents from other doctypes (where that field is missing) into the function scoring, and causing it to barf when the field I'm scoring on doesn't exist?\n\nMy query that triggers the error looks like:\n\n``` javascript\n// POST /index-name/doc-type/_search\n{\n   \"query\": {\n      \"filtered\": {\n         \"filter\": {\n            \"bool\": {\n               \"must\": [\n                  {\n                     \"nested\": {\n                        \"filter\": {\n                           \"geo_bounding_box\": {\n                              \"_cache\": false,\n                              \"type\": \"indexed\",\n                              \"point\": {\n                                 \"bottom_right\": {\n                                    \"lat\": 36.00621805925558,\n                                    \"lon\": -120.33803214814795\n                                 },\n                                 \"top_left\": {\n                                    \"lat\": 38.90084254074442,\n                                    \"lon\": -124.98458605185203\n                                 }\n                              }\n                           }\n                        },\n                        \"path\": \"foo\"\n                     }\n                  }\n               ]\n            }\n         },\n         \"query\": {\n            \"nested\": {\n               \"path\": \"bar\",\n               \"score_mode\": \"max\",\n               \"inner_hits\": {\n                  \"size\": 1\n               },\n               \"query\": {\n                  \"function_score\": {\n                     \"query\": {\n                        \"filtered\": {}\n                     },\n                     \"functions\": [\n                        {\n                           \"field_value_factor\": {\n                              \"field\": \"a1\",\n                              \"factor\": 0.004342221095126581\n                           }\n                        },\n                        {\n                           \"field_value_factor\": {\n                              \"field\": \"a2\",\n                              \"factor\": 0.2212504591677979\n                           }\n                        },\n                        {\n                           \"field_value_factor\": {\n                              \"field\": \"a3\",\n                              \"factor\": 0.723225250366149\n                           }\n                        },\n                        {\n                           \"field_value_factor\": {\n                              \"field\": \"a4\",\n                              \"factor\": 0.051182069370926446\n                           }\n                        }\n                     ],\n                     \"score_mode\": \"sum\"\n                  }\n               }\n            }\n         }\n      }\n   }\n}\n```\n\nError disappears with either:\n\n``` javascript\n// POST /index-name/doc-type/_search\n{\n   \"query\": {\n      \"filtered\": {\n         \"filter\": {\n            \"bool\": {\n               \"must\": []\n            }\n         },\n         \"query\": {\n            \"nested\": {\n               \"path\": \"bar\",\n               \"score_mode\": \"max\",\n               \"inner_hits\": {\n                  \"size\": 1\n               },\n               \"query\": {\n                  \"function_score\": {\n                     \"query\": {\n                        \"filtered\": {}\n                     },\n                     \"functions\": [\n                        {\n                           \"field_value_factor\": {\n                              \"field\": \"a1\",\n                              \"factor\": 0.004342221095126581\n                           }\n                        },\n                        {\n                           \"field_value_factor\": {\n                              \"field\": \"a2\",\n                              \"factor\": 0.2212504591677979\n                           }\n                        },\n                        {\n                           \"field_value_factor\": {\n                              \"field\": \"a3\",\n                              \"factor\": 0.723225250366149\n                           }\n                        },\n                        {\n                           \"field_value_factor\": {\n                              \"field\": \"a4\",\n                              \"factor\": 0.051182069370926446\n                           }\n                        }\n                     ],\n                     \"score_mode\": \"sum\"\n                  }\n               }\n            }\n         }\n      }\n   }\n}\n```\n\nor:\n\n``` javascript\n// POST /index-name/doc-type/_search\n{\n   \"query\": {\n      \"filtered\": {\n         \"filter\": {\n            \"bool\": {\n               \"must\": [\n                  { \"term\": {\"_type\": \"doc-type\"} },\n                  {\n                     \"nested\": {\n                        \"filter\": {\n                           \"geo_bounding_box\": {\n                              \"_cache\": false,\n                              \"type\": \"indexed\",\n                              \"point\": {\n                                 \"bottom_right\": {\n                                    \"lat\": 36.00621805925558,\n                                    \"lon\": -120.33803214814795\n                                 },\n                                 \"top_left\": {\n                                    \"lat\": 38.90084254074442,\n                                    \"lon\": -124.98458605185203\n                                 }\n                              }\n                           }\n                        },\n                        \"path\": \"foo\"\n                     }\n                  }\n               ]\n            }\n         },\n         \"query\": {\n            \"nested\": {\n               \"path\": \"bar\",\n               \"score_mode\": \"max\",\n               \"inner_hits\": {\n                  \"size\": 1\n               },\n               \"query\": {\n                  \"function_score\": {\n                     \"query\": {\n                        \"filtered\": {}\n                     },\n                     \"functions\": [\n                        {\n                           \"field_value_factor\": {\n                              \"field\": \"a1\",\n                              \"factor\": 0.004342221095126581\n                           }\n                        },\n                        {\n                           \"field_value_factor\": {\n                              \"field\": \"a2\",\n                              \"factor\": 0.2212504591677979\n                           }\n                        },\n                        {\n                           \"field_value_factor\": {\n                              \"field\": \"a3\",\n                              \"factor\": 0.723225250366149\n                           }\n                        },\n                        {\n                           \"field_value_factor\": {\n                              \"field\": \"a4\",\n                              \"factor\": 0.051182069370926446\n                           }\n                        }\n                     ],\n                     \"score_mode\": \"sum\"\n                  }\n               }\n            }\n         }\n      }\n   }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/146985622","html_url":"https://github.com/elastic/elasticsearch/issues/14012#issuecomment-146985622","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14012","id":146985622,"node_id":"MDEyOklzc3VlQ29tbWVudDE0Njk4NTYyMg==","user":{"login":"dblado","id":926459,"node_id":"MDQ6VXNlcjkyNjQ1OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/926459?v=4","gravatar_id":"","url":"https://api.github.com/users/dblado","html_url":"https://github.com/dblado","followers_url":"https://api.github.com/users/dblado/followers","following_url":"https://api.github.com/users/dblado/following{/other_user}","gists_url":"https://api.github.com/users/dblado/gists{/gist_id}","starred_url":"https://api.github.com/users/dblado/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dblado/subscriptions","organizations_url":"https://api.github.com/users/dblado/orgs","repos_url":"https://api.github.com/users/dblado/repos","events_url":"https://api.github.com/users/dblado/events{/privacy}","received_events_url":"https://api.github.com/users/dblado/received_events","type":"User","site_admin":false},"created_at":"2015-10-09T21:03:57Z","updated_at":"2015-10-09T21:03:57Z","author_association":"NONE","body":"interesting -- if I update my failed query to include:\n\n```\n          \"must\": [\n            {\n              \"term\": {\n                \"_type\": \"vendor\"\n              }\n            },\n            {\n              \"geo_distance\": {\n                \"distance\": \"50mi\",\n                \"location2.coordinates\": [\n                  -122.4194155,\n                  37.7749295\n                ]\n              }\n            }\n          ]\n```\n\nI still get an error but only on 1 shard instead of all 5.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/147017766","html_url":"https://github.com/elastic/elasticsearch/issues/14012#issuecomment-147017766","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14012","id":147017766,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NzAxNzc2Ng==","user":{"login":"dblado","id":926459,"node_id":"MDQ6VXNlcjkyNjQ1OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/926459?v=4","gravatar_id":"","url":"https://api.github.com/users/dblado","html_url":"https://github.com/dblado","followers_url":"https://api.github.com/users/dblado/followers","following_url":"https://api.github.com/users/dblado/following{/other_user}","gists_url":"https://api.github.com/users/dblado/gists{/gist_id}","starred_url":"https://api.github.com/users/dblado/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dblado/subscriptions","organizations_url":"https://api.github.com/users/dblado/orgs","repos_url":"https://api.github.com/users/dblado/repos","events_url":"https://api.github.com/users/dblado/events{/privacy}","received_events_url":"https://api.github.com/users/dblado/received_events","type":"User","site_admin":false},"created_at":"2015-10-10T00:43:48Z","updated_at":"2015-10-10T00:43:48Z","author_association":"NONE","body":"Some more experimenting...\n\nI changed my mapping and rebuilt the index. My reviews_length field is now:\n\n```\n        \"reviews_length\": {\n          \"type\": \"short\",\n        }\n```\n\nas long as I add reviews_length range filter:\n\n```\n            {\n              \"range\": {\n                \"reviews_length\": {\n                  \"gte\": 0\n                }\n              }\n            }\n```\n\nall 5 shards succeed! Without the range filter, 4/5 shards fail with missing value for field.\n\nI built a second index w/ the mapping set as:\n\n```\n        \"reviews_length\": {\n          \"type\": \"short\",\n          \"null_value\": 0\n        }\n```\n\nAgain, as long as I have the reviews_length range filter, the query succeeds.  Interesting that without the range filter on reviews_length, all shards fail w/ null_value set in the mapping. I find this odd since the field should always exist since there is a null_value specified in the mapping. Did I misunderstand the null_value setting?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/147663798","html_url":"https://github.com/elastic/elasticsearch/issues/14012#issuecomment-147663798","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14012","id":147663798,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NzY2Mzc5OA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-10-13T09:37:07Z","updated_at":"2015-10-13T09:37:07Z","author_association":"CONTRIBUTOR","body":"These errors are due to the fact that `MinShouldMatchScorer` sometimes evaluates the score on sub scorers even if there might not be enough matching clauses for the boolean query (which has min_should_match set) to match. This scorer was changed in Lucene 5.1 to compute scores lazily (https://issues.apache.org/jira/browse/LUCENE-6201) so it should be fixed in Elasticsearch 2.0, which will be based on Lucene 5.2.1. The only work-around that I can think of for 1.x would be to filter the query wrapped by the `function_score` query that has the `field_value_factor` function so that it cannot match a document that doesn't have a value for `reviews_length`.\n\nHaving reindexed with the `null_value` set on the `reviews_length` field should have worked. If it didn't, I guess it is because you have other types on the same index that either don't have the `reviews_length` field or have it but don't have a `null_value` configured.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/147886644","html_url":"https://github.com/elastic/elasticsearch/issues/14012#issuecomment-147886644","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14012","id":147886644,"node_id":"MDEyOklzc3VlQ29tbWVudDE0Nzg4NjY0NA==","user":{"login":"dblado","id":926459,"node_id":"MDQ6VXNlcjkyNjQ1OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/926459?v=4","gravatar_id":"","url":"https://api.github.com/users/dblado","html_url":"https://github.com/dblado","followers_url":"https://api.github.com/users/dblado/followers","following_url":"https://api.github.com/users/dblado/following{/other_user}","gists_url":"https://api.github.com/users/dblado/gists{/gist_id}","starred_url":"https://api.github.com/users/dblado/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dblado/subscriptions","organizations_url":"https://api.github.com/users/dblado/orgs","repos_url":"https://api.github.com/users/dblado/repos","events_url":"https://api.github.com/users/dblado/events{/privacy}","received_events_url":"https://api.github.com/users/dblado/received_events","type":"User","site_admin":false},"created_at":"2015-10-13T23:51:08Z","updated_at":"2015-10-13T23:51:08Z","author_association":"NONE","body":"@jpountz thanks for the feedback. I find it odd that the same query works when the reviews_length field is set to a different data type (short vs long).\n\nI do have other types in the same index, but the search is to /index/type/_search...doesn't that mean it shouldn't matter if other types don't have that field defined?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/147972886","html_url":"https://github.com/elastic/elasticsearch/issues/14012#issuecomment-147972886","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14012","id":147972886,"node_id":"MDEyOklzc3VlQ29tbWVudDE0Nzk3Mjg4Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-10-14T08:28:39Z","updated_at":"2015-10-14T08:28:39Z","author_association":"CONTRIBUTOR","body":"> I do have other types in the same index, but the search is to /index/type/_search...doesn't that mean it shouldn't matter if other types don't have that field defined?\n\nit's a whole lot more complex than that.  lucene has no concept of types, it just sees a list of fields (which may or may not be in your type).  queries and filters do not necessarily operate on just the subset of documents that other query/filter clauses have included, but may well hit unrelated documents.\n\nThis all gets a whole lot neater and cleaner in 2.0\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/208328651","html_url":"https://github.com/elastic/elasticsearch/issues/14012#issuecomment-208328651","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/14012","id":208328651,"node_id":"MDEyOklzc3VlQ29tbWVudDIwODMyODY1MQ==","user":{"login":"EmilAlipiev","id":10422347,"node_id":"MDQ6VXNlcjEwNDIyMzQ3","avatar_url":"https://avatars1.githubusercontent.com/u/10422347?v=4","gravatar_id":"","url":"https://api.github.com/users/EmilAlipiev","html_url":"https://github.com/EmilAlipiev","followers_url":"https://api.github.com/users/EmilAlipiev/followers","following_url":"https://api.github.com/users/EmilAlipiev/following{/other_user}","gists_url":"https://api.github.com/users/EmilAlipiev/gists{/gist_id}","starred_url":"https://api.github.com/users/EmilAlipiev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EmilAlipiev/subscriptions","organizations_url":"https://api.github.com/users/EmilAlipiev/orgs","repos_url":"https://api.github.com/users/EmilAlipiev/repos","events_url":"https://api.github.com/users/EmilAlipiev/events{/privacy}","received_events_url":"https://api.github.com/users/EmilAlipiev/received_events","type":"User","site_admin":false},"created_at":"2016-04-11T12:59:46Z","updated_at":"2016-04-11T14:14:53Z","author_association":"NONE","body":"I am using 2.0.2 version and I have exactly similar query and same error. I went to through my integer field which OrderCount as below. and all have value 0 or greater than 0. How can I solve this problem?\n\n```\n{\n   \"query\": {\n      \"function_score\": {\n         \"query\": {\n            \"bool\": {\n               \"should\": [\n                  {\n                     \"multi_match\": {\n                        \"type\": \"best_fields\",\n                        \"query\": \"tinte\",\n                        \"fields\": [                          \n                           \"Name^7\",\n                           \"ShortDescription^6\"\n                        ]\n                     }\n                  }\n               ]\n            }\n         },\n         \"field_value_factor\": {\n            \"field\": \"OrderCount\"\n         }\n      }\n   }\n}\n```\n\nIn my Mapping I even added.\n\n```\n},\n\"OrderCount\": {\n\"null_value\": 0,\n\"index\": \"no\",\n\"store\": true,\n\"type\": \"integer\"\n},\n```\n\nI tried also \"long\" but result didnt change for me.\n","performed_via_github_app":null}]