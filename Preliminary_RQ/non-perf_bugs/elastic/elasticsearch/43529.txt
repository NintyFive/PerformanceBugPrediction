{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/43529","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43529/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43529/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/43529/events","html_url":"https://github.com/elastic/elasticsearch/issues/43529","id":459807184,"node_id":"MDU6SXNzdWU0NTk4MDcxODQ=","number":43529,"title":"Bug in ES SQL - LIMIT applied before ORDER BY","user":{"login":"mcouthon","id":844807,"node_id":"MDQ6VXNlcjg0NDgwNw==","avatar_url":"https://avatars2.githubusercontent.com/u/844807?v=4","gravatar_id":"","url":"https://api.github.com/users/mcouthon","html_url":"https://github.com/mcouthon","followers_url":"https://api.github.com/users/mcouthon/followers","following_url":"https://api.github.com/users/mcouthon/following{/other_user}","gists_url":"https://api.github.com/users/mcouthon/gists{/gist_id}","starred_url":"https://api.github.com/users/mcouthon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcouthon/subscriptions","organizations_url":"https://api.github.com/users/mcouthon/orgs","repos_url":"https://api.github.com/users/mcouthon/repos","events_url":"https://api.github.com/users/mcouthon/events{/privacy}","received_events_url":"https://api.github.com/users/mcouthon/received_events","type":"User","site_admin":false},"labels":[{"id":912794284,"node_id":"MDU6TGFiZWw5MTI3OTQyODQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Query%20Languages/SQL","name":":Query Languages/SQL","color":"0e8a16","default":false,"description":"SQL querying"}],"state":"closed","locked":false,"assignee":{"login":"matriv","id":5058131,"node_id":"MDQ6VXNlcjUwNTgxMzE=","avatar_url":"https://avatars1.githubusercontent.com/u/5058131?v=4","gravatar_id":"","url":"https://api.github.com/users/matriv","html_url":"https://github.com/matriv","followers_url":"https://api.github.com/users/matriv/followers","following_url":"https://api.github.com/users/matriv/following{/other_user}","gists_url":"https://api.github.com/users/matriv/gists{/gist_id}","starred_url":"https://api.github.com/users/matriv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matriv/subscriptions","organizations_url":"https://api.github.com/users/matriv/orgs","repos_url":"https://api.github.com/users/matriv/repos","events_url":"https://api.github.com/users/matriv/events{/privacy}","received_events_url":"https://api.github.com/users/matriv/received_events","type":"User","site_admin":false},"assignees":[{"login":"matriv","id":5058131,"node_id":"MDQ6VXNlcjUwNTgxMzE=","avatar_url":"https://avatars1.githubusercontent.com/u/5058131?v=4","gravatar_id":"","url":"https://api.github.com/users/matriv","html_url":"https://github.com/matriv","followers_url":"https://api.github.com/users/matriv/followers","following_url":"https://api.github.com/users/matriv/following{/other_user}","gists_url":"https://api.github.com/users/matriv/gists{/gist_id}","starred_url":"https://api.github.com/users/matriv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matriv/subscriptions","organizations_url":"https://api.github.com/users/matriv/orgs","repos_url":"https://api.github.com/users/matriv/repos","events_url":"https://api.github.com/users/matriv/events{/privacy}","received_events_url":"https://api.github.com/users/matriv/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2019-06-24T10:13:47Z","updated_at":"2019-06-24T17:33:42Z","closed_at":"2019-06-24T10:46:52Z","author_association":"NONE","active_lock_reason":null,"body":"I'm running ES in the official docker container: `docker.elastic.co/elasticsearch/elasticsearch:7.1.1`\r\n\r\n**Description of the problem including expected versus actual behavior**: \r\n\r\nRunning an SQL query with both `ORDER BY` and `LIMIT` seems to apply `LIMIT` before `ORDER BY`. The expected behavior would be to do it in the opposite order.\r\n\r\n**Steps to reproduce**:\r\n\r\nI'm using the Shakespeare DB.\r\n\r\nThese are the actual steps which I took to create the cluster and load data into it:\r\n\r\n```bash\r\ndocker pull docker.elastic.co/elasticsearch/elasticsearch:7.1.1\r\ndocker run -d -p 9200:9200 -p 9300:9300 -e \"discovery.type=single-node\" docker.elastic.co/elasticsearch/elasticsearch:7.1.1\r\n\r\ncurl -O https://download.elastic.co/demos/kibana/gettingstarted/7.x/shakespeare.json\r\n\r\necho \"Waiting for ES cluster to be up\"\r\nuntil $(curl --output /dev/null --silent --head --fail localhost:9200); do\r\n    printf '.'\r\n    sleep 1\r\ndone\r\n\r\ncurl -X PUT \"localhost:9200/shakespeare\" -H 'Content-Type: application/json' -d'\r\n{\r\n  \"mappings\": {\r\n    \"properties\": {\r\n    \"speaker\": {\"type\": \"keyword\"},\r\n    \"play_name\": {\"type\": \"keyword\"},\r\n    \"line_id\": {\"type\": \"integer\"},\r\n    \"speech_number\": {\"type\": \"integer\"}\r\n    }\r\n  }\r\n}\r\n'\r\ncurl -X GET -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/shakespeare/_bulk?pretty' --data-binary @shakespeare.json\r\n```\r\n\r\nRunning the query:\r\n```bash\r\ncurl -X GET \"localhost:9200/_xpack/sql?format=txt\" -H 'Content-Type: application/json' -d'\r\n{\r\n    \"query\": \"SELECT play_name, COUNT(*) as line_count FROM shakespeare GROUP BY play_name ORDER BY line_count DESC\"\r\n}\r\n'\r\n```\r\n\r\nGives this result:\r\n\r\n```\r\n       play_name        |  line_count\r\n------------------------+---------------\r\nHamlet                  |4244\r\nCoriolanus              |3992\r\nCymbeline               |3958\r\nRichard III             |3941\r\nAntony and Cleopatra    |3862\r\nKing Lear               |3766\r\nOthello                 |3762\r\nTroilus and Cressida    |3711\r\nA Winters Tale          |3489\r\nHenry VIII              |3419\r\nHenry V                 |3395\r\nHenry VI Part 2         |3334\r\nRomeo and Juliet        |3313\r\nHenry IV                |3205\r\nHenry VI Part 3         |3138\r\nAlls well that ends well|3083\r\nMeasure for measure     |2998\r\nLoves Labours Lost      |2986\r\nHenry VI Part 1         |2983\r\nRichard II              |2937\r\nMerry Wives of Windsor  |2831\r\nAs you like it          |2822\r\nTaming of the Shrew     |2806\r\nMerchant of Venice      |2802\r\nJulius Caesar           |2771\r\nKing John               |2766\r\nTitus Andronicus        |2726\r\nMuch Ado about nothing  |2704\r\nTimon of Athens         |2662\r\nTwelfth Night           |2648\r\nPericles                |2641\r\nmacbeth                 |2586\r\nThe Tempest             |2403\r\nTwo Gentlemen of Verona |2357\r\nA Midsummer nights dream|2300\r\nA Comedy of Errors      |2055\r\n```\r\n\r\nI would expect that running (i.e. adding `LIMIT 3`):\r\n```bash\r\ncurl -X GET \"localhost:9200/_xpack/sql?format=txt\" -H 'Content-Type: application/json' -d'\r\n{\r\n    \"query\": \"SELECT play_name, COUNT(*) as line_count FROM shakespeare GROUP BY play_name ORDER BY line_count DESC LIMIT 3\"\r\n}\r\n'\r\n```\r\n\r\nWould return the top 3 lines. Meaning:\r\n\r\n```\r\n       play_name        |  line_count\r\n------------------------+---------------\r\nHamlet                  |4244\r\nCoriolanus              |3992\r\nCymbeline               |3958\r\n```\r\n\r\nBut in reality what's returned is (`ORDER BY` seems to be completely ignored):\r\n\r\n```\r\n       play_name        |  line_count\r\n------------------------+---------------\r\nA Winters Tale          |3489\r\nA Midsummer nights dream|2300\r\nA Comedy of Errors      |2055\r\n```","closed_by":{"login":"matriv","id":5058131,"node_id":"MDQ6VXNlcjUwNTgxMzE=","avatar_url":"https://avatars1.githubusercontent.com/u/5058131?v=4","gravatar_id":"","url":"https://api.github.com/users/matriv","html_url":"https://github.com/matriv","followers_url":"https://api.github.com/users/matriv/followers","following_url":"https://api.github.com/users/matriv/following{/other_user}","gists_url":"https://api.github.com/users/matriv/gists{/gist_id}","starred_url":"https://api.github.com/users/matriv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matriv/subscriptions","organizations_url":"https://api.github.com/users/matriv/orgs","repos_url":"https://api.github.com/users/matriv/repos","events_url":"https://api.github.com/users/matriv/events{/privacy}","received_events_url":"https://api.github.com/users/matriv/received_events","type":"User","site_admin":false},"performed_via_github_app":null}