{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1528","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1528/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1528/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1528/events","html_url":"https://github.com/elastic/elasticsearch/issues/1528","id":2497265,"node_id":"MDU6SXNzdWUyNDk3MjY1","number":1528,"title":"Consider merging release branch commits into master","user":{"login":"erickt","id":84711,"node_id":"MDQ6VXNlcjg0NzEx","avatar_url":"https://avatars3.githubusercontent.com/u/84711?v=4","gravatar_id":"","url":"https://api.github.com/users/erickt","html_url":"https://github.com/erickt","followers_url":"https://api.github.com/users/erickt/followers","following_url":"https://api.github.com/users/erickt/following{/other_user}","gists_url":"https://api.github.com/users/erickt/gists{/gist_id}","starred_url":"https://api.github.com/users/erickt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erickt/subscriptions","organizations_url":"https://api.github.com/users/erickt/orgs","repos_url":"https://api.github.com/users/erickt/repos","events_url":"https://api.github.com/users/erickt/events{/privacy}","received_events_url":"https://api.github.com/users/erickt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2011-12-09T01:06:03Z","updated_at":"2020-10-25T08:18:18Z","closed_at":"2013-07-05T10:28:44Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"When exploring elasticsearch's master branch, it can be a little difficult to separate out the commits cherry picked from the release branch from the commits unique to the master branch. Instead of cherry-picking commits onto master, could the release commits be merged instead?\n\nThere's an even more elaborate version of this branching strategy called [git flow](http://nvie.com/posts/a-successful-git-branching-model). That link explains this merging strategy a bit more, and fleshes things out into a full release management cycle. There's even a [git plugin](https://github.com/nvie/gitflow) for it too.\n","closed_by":{"login":"spinscale","id":667544,"node_id":"MDQ6VXNlcjY2NzU0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/667544?v=4","gravatar_id":"","url":"https://api.github.com/users/spinscale","html_url":"https://github.com/spinscale","followers_url":"https://api.github.com/users/spinscale/followers","following_url":"https://api.github.com/users/spinscale/following{/other_user}","gists_url":"https://api.github.com/users/spinscale/gists{/gist_id}","starred_url":"https://api.github.com/users/spinscale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spinscale/subscriptions","organizations_url":"https://api.github.com/users/spinscale/orgs","repos_url":"https://api.github.com/users/spinscale/repos","events_url":"https://api.github.com/users/spinscale/events{/privacy}","received_events_url":"https://api.github.com/users/spinscale/received_events","type":"User","site_admin":false},"performed_via_github_app":null}