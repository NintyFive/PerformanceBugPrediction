{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/2089","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2089/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2089/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2089/events","html_url":"https://github.com/elastic/elasticsearch/issues/2089","id":5468569,"node_id":"MDU6SXNzdWU1NDY4NTY5","number":2089,"title":"Confirming use of 'path' and 'index_name' in objects","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2012-07-06T16:19:41Z","updated_at":"2013-10-18T13:28:14Z","closed_at":"2013-10-18T13:28:14Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hiya\n\nI'm using `index_name` and `path` in what feels like a hacky way, and just want to confirm that the way it works is intended, and won't change in the future.\n\nI'm using a `UID` object to reference other objects stored in other types in ElasticSearch. That `UID` has an `index`, `type` and `id` attribute.  I'd like to be able to access those as `uid.index`, `uid.type` etc, even thought the path may be:\n\n```\n{ employees: { managers: { uid: { index: 'foo' .....}}}}\n```\n\n I'm using a mapping like this:\n\n```\ncurl -XPUT 'http://127.0.0.1:9200/test/?pretty=1'  -d '\n{\n   \"mappings\" : {\n      \"test\" : {\n         \"properties\" : {\n            \"baz\" : {\n               \"type\" : \"object\",\n               \"properties\" : {\n                  \"foo\" : {\n                     \"type\" : \"object\",\n                     \"properties\" : {\n                        \"uid\" : {\n                           \"path\" : \"just_name\",\n                           \"type\" : \"object\",\n                           \"properties\" : {\n                              \"index\" : {\n                                 \"index_name\" : \"uid.index\",\n                                 \"type\" : \"string\"\n                              }\n                           }\n                        }\n                     }\n                  }\n               }\n            }\n         }\n      }\n   }\n}\n'\n```\n\nNote the `index_name: \"uid.index\"` and `path: \"just_name\"`.\n\nThis mapping makes these fields queryable:\n- index\n- uid.index\n- baz.foo.uid.index\n\nThat suits my purposes, but I'd like to make sure that it isn't going to change :)\n\n```\ncurl -XPUT 'http://127.0.0.1:9200/test/test/1?pretty=1'  -d '\n{\n   \"baz\" : {\n      \"foo\" : {\n         \"uid\" : {\n            \"index\" : \"bar\"\n         }\n      }\n   }\n}\n'\n```\n# index = 1\n\n```\ncurl -XGET 'http://127.0.0.1:9200/test/test/_count?pretty=1'  -d '\n{\n   \"text\" : {\n      \"index\" : \"bar\"\n   }\n}\n'\n```\n# uid.index = 1\n\n```\ncurl -XGET 'http://127.0.0.1:9200/test/test/_count?pretty=1'  -d '\n{\n   \"text\" : {\n      \"uid.index\" : \"bar\"\n   }\n}\n'\n```\n# foo.uid.index = 0\n\n```\ncurl -XGET 'http://127.0.0.1:9200/test/test/_count?pretty=1'  -d '\n{\n   \"text\" : {\n      \"foo.uid.index\" : \"bar\"\n   }\n}\n'\n```\n# baz.foo.uid.index = 1\n\n```\ncurl -XGET 'http://127.0.0.1:9200/test/test/_count?pretty=1'  -d '\n{\n   \"text\" : {\n      \"baz.foo.uid.index\" : \"bar\"\n   }\n}\n'\n```\n","closed_by":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"performed_via_github_app":null}