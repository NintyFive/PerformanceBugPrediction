{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/13684","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13684/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13684/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13684/events","html_url":"https://github.com/elastic/elasticsearch/issues/13684","id":107555621,"node_id":"MDU6SXNzdWUxMDc1NTU2MjE=","number":13684,"title":"scrolled searches silently ignore 'from' search parameter","user":{"login":"drallax","id":14543491,"node_id":"MDQ6VXNlcjE0NTQzNDkx","avatar_url":"https://avatars1.githubusercontent.com/u/14543491?v=4","gravatar_id":"","url":"https://api.github.com/users/drallax","html_url":"https://github.com/drallax","followers_url":"https://api.github.com/users/drallax/followers","following_url":"https://api.github.com/users/drallax/following{/other_user}","gists_url":"https://api.github.com/users/drallax/gists{/gist_id}","starred_url":"https://api.github.com/users/drallax/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drallax/subscriptions","organizations_url":"https://api.github.com/users/drallax/orgs","repos_url":"https://api.github.com/users/drallax/repos","events_url":"https://api.github.com/users/drallax/events{/privacy}","received_events_url":"https://api.github.com/users/drallax/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-09-21T17:02:35Z","updated_at":"2016-02-01T17:23:17Z","closed_at":"2016-01-28T17:42:51Z","author_association":"NONE","active_lock_reason":null,"body":"Our application happily creates scrolled search requests with a 'from' parameter > 0.\nIt looks like the value of 'from' is silently ignored, as the following test, demonstrates:\n- indexes some documents\n- request sorted results with from > 0, e.g. 4\n- search normally: the first four matches are skipped, as expected\n- search with scroll enabled: the first four matches are not skipped, this is not expected\n\nreproduceable testcase (for ES-1.7.1, it seems to fail in ES-2.0.0-beta2 too)\n\n``` java\n@Seed(\"1\")\n@ClusterScope(scope = ElasticsearchIntegrationTest.Scope.SUITE, numDataNodes = 1, numClientNodes = 1, transportClientRatio = 0, randomDynamicTemplates = false)\npublic class ESScrollIT extends ElasticsearchIntegrationTest {\n    @Override\n    protected Settings nodeSettings(final int nodeOrdinal) {\n        return ImmutableSettings.settingsBuilder()\n            .put(\"path.home\", \"target/es\")\n            .put(\"path.data\", \"target/es/data\")\n            .put(\"path.logs\", \"target/es/logs\")\n            .put(super.nodeSettings(nodeOrdinal))\n            .build();\n    }\n\n    @Test\n    public void testSortFromScroll() throws Exception {\n        //index some documents\n        createIndex(\"test\");\n        final Client client = dataNodeClient();\n        client.prepareIndex(\"test\", \"test\", \"0\").setSource(\"{ name: \\\"0\\\"}\").execute().actionGet();\n        client.prepareIndex(\"test\", \"test\", \"1\").setSource(\"{ name: \\\"1\\\"}\").execute().actionGet();\n        client.prepareIndex(\"test\", \"test\", \"2\").setSource(\"{ name: \\\"2\\\"}\").execute().actionGet();\n        client.prepareIndex(\"test\", \"test\", \"3\").setSource(\"{ name: \\\"3\\\"}\").execute().actionGet();\n        client.prepareIndex(\"test\", \"test\", \"4\").setSource(\"{ name: \\\"4\\\"}\").execute().actionGet();\n        client.prepareIndex(\"test\", \"test\", \"5\").setSource(\"{ name: \\\"5\\\"}\").execute().actionGet();\n        refresh();\n        ensureGreen(\"test\");\n\n        //sort by name and return the 5th result, once with scrolling, once without\n        final SearchResponse normal = client.prepareSearch(\"test\")\n            .setTypes(\"test\")\n            .addSort(\"name\", ASC)\n            .setFrom(4)\n            .setSize(1)\n            .execute()\n            .actionGet();\n        final SearchResponse scroll = client.prepareSearch(\"test\")\n            .setTypes(\"test\")\n            .addSort(\"name\", ASC)\n            .setFrom(4)\n            .setSize(1)\n            .setScroll(timeValueMinutes(1))\n            .execute()\n            .actionGet();\n\n        //make sure we get the same results from normal & scrolled searches\n        assertEquals(6, normal.getHits().getTotalHits());\n        assertEquals(6, scroll.getHits().getTotalHits());\n        assertEquals(1, normal.getHits().getHits().length);\n        assertEquals(1, scroll.getHits().getHits().length);\n        assertEquals(\"4\", normal.getHits().getHits()[0].id());\n\n        //the next assertion fails with \"expected <[4]> but was:<[0]\"\n        //setFrom(4) has silently been ignored?\n        assertEquals(\"4\", scroll.getHits().getHits()[0].id());\n    }\n}\n```\n\nI would have expected either\n1) the same result for scrolled searches vs non scrolled 'normal' searches, or alternatively\n2) an error message indicating that 'from' is not supported for scrolled searches\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}