[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/4900972","html_url":"https://github.com/elastic/elasticsearch/issues/1839#issuecomment-4900972","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1839","id":4900972,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MDA5NzI=","user":{"login":"snazy","id":957468,"node_id":"MDQ6VXNlcjk1NzQ2OA==","avatar_url":"https://avatars0.githubusercontent.com/u/957468?v=4","gravatar_id":"","url":"https://api.github.com/users/snazy","html_url":"https://github.com/snazy","followers_url":"https://api.github.com/users/snazy/followers","following_url":"https://api.github.com/users/snazy/following{/other_user}","gists_url":"https://api.github.com/users/snazy/gists{/gist_id}","starred_url":"https://api.github.com/users/snazy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/snazy/subscriptions","organizations_url":"https://api.github.com/users/snazy/orgs","repos_url":"https://api.github.com/users/snazy/repos","events_url":"https://api.github.com/users/snazy/events{/privacy}","received_events_url":"https://api.github.com/users/snazy/received_events","type":"User","site_admin":false},"created_at":"2012-04-03T13:21:39Z","updated_at":"2012-04-03T13:21:39Z","author_association":"NONE","body":"Verified with elasticsearch 0.18.7 and 0.19.1\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/4954340","html_url":"https://github.com/elastic/elasticsearch/issues/1839#issuecomment-4954340","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1839","id":4954340,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTQzNDA=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2012-04-04T14:22:07Z","updated_at":"2012-04-04T14:22:07Z","author_association":"MEMBER","body":"Hey, can you help write a standalone test case, and the scenario (i.e. start 4 nodes, restart one node while test case is bulk indexing data), that recreates it? It will help speed things up to see where the problem is.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/4974197","html_url":"https://github.com/elastic/elasticsearch/issues/1839#issuecomment-4974197","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1839","id":4974197,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQxOTc=","user":{"login":"snazy","id":957468,"node_id":"MDQ6VXNlcjk1NzQ2OA==","avatar_url":"https://avatars0.githubusercontent.com/u/957468?v=4","gravatar_id":"","url":"https://api.github.com/users/snazy","html_url":"https://github.com/snazy","followers_url":"https://api.github.com/users/snazy/followers","following_url":"https://api.github.com/users/snazy/following{/other_user}","gists_url":"https://api.github.com/users/snazy/gists{/gist_id}","starred_url":"https://api.github.com/users/snazy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/snazy/subscriptions","organizations_url":"https://api.github.com/users/snazy/orgs","repos_url":"https://api.github.com/users/snazy/repos","events_url":"https://api.github.com/users/snazy/events{/privacy}","received_events_url":"https://api.github.com/users/snazy/received_events","type":"User","site_admin":false},"created_at":"2012-04-05T10:45:05Z","updated_at":"2012-04-05T10:45:05Z","author_association":"NONE","body":"OK\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/4975010","html_url":"https://github.com/elastic/elasticsearch/issues/1839#issuecomment-4975010","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1839","id":4975010,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzUwMTA=","user":{"login":"snazy","id":957468,"node_id":"MDQ6VXNlcjk1NzQ2OA==","avatar_url":"https://avatars0.githubusercontent.com/u/957468?v=4","gravatar_id":"","url":"https://api.github.com/users/snazy","html_url":"https://github.com/snazy","followers_url":"https://api.github.com/users/snazy/followers","following_url":"https://api.github.com/users/snazy/following{/other_user}","gists_url":"https://api.github.com/users/snazy/gists{/gist_id}","starred_url":"https://api.github.com/users/snazy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/snazy/subscriptions","organizations_url":"https://api.github.com/users/snazy/orgs","repos_url":"https://api.github.com/users/snazy/repos","events_url":"https://api.github.com/users/snazy/events{/privacy}","received_events_url":"https://api.github.com/users/snazy/received_events","type":"User","site_admin":false},"created_at":"2012-04-05T11:47:48Z","updated_at":"2012-04-05T11:47:48Z","author_association":"NONE","body":"OK - here it is.\n\nJust edit and execute the class (with a dependency to elasticsearch 0.19.1 jar).\n1. Setup a cluster with 4 nodes\n2. Start the class (it will automatically re-create index and mapping)\n3. Wait until the index has about 1000000 docs (means: relocation of the shards will take some time)\n4. Gracefully stop one node (I did it using elasticsearch head's SHUTDOWN functionality)\n5. Main class still runs\n6. Restart the stopped node\n7. Node appears (without any shards)\n8. Some shards will be relocated (purple color in elasticsearch head)\n9. Bang - indexer hangs ... forever\n\nHere's the code:\n\npackage org.elasticsearch.issue1839;\n\nimport org.elasticsearch.action.bulk.BulkRequestBuilder;\nimport org.elasticsearch.action.index.IndexRequestBuilder;\nimport org.elasticsearch.client.IndicesAdminClient;\nimport org.elasticsearch.client.transport.TransportClient;\nimport org.elasticsearch.common.settings.ImmutableSettings;\nimport org.elasticsearch.common.transport.InetSocketTransportAddress;\nimport org.elasticsearch.indices.IndexMissingException;\nimport org.elasticsearch.node.NodeBuilder;\n\nimport java.util.Date;\nimport java.util.Random;\n\npublic final class Main {\n    public static void main(String[] args) {\n        new Main().doit();\n    }\n\n```\nstatic final int THREADS = 4;\nstatic final String CLUSTER = \"elasticsearch\";\nstatic final String NAME = \"issue1839\";\n\nprivate void doit() {\n\n    NodeBuilder nodeBuilder = NodeBuilder.nodeBuilder().client(true);\n    ImmutableSettings.Builder settings = nodeBuilder.settings();\n    settings = settings.\n            put(\"cluster.name\", CLUSTER).//\n            //\n            put(\"client.transport.sniff\", \"false\").//\n            put(\"transport.tcp.compress\", true).//\n            put(\"transport.tcp.connect_timeout\", \"10s\").//\n            put(\"network.tcp.keep_alive\", \"true\").//\n            put(\"network.tcp.send_buffer_size\", \"64k\").//\n            put(\"network.tcp.receive_buffer_size\", \"64k\");\n\n    TransportClient client = new TransportClient(settings);\n\n    client.addTransportAddress(new InetSocketTransportAddress(\"10.40.101.211\", 9300));\n    client.addTransportAddress(new InetSocketTransportAddress(\"10.40.101.212\", 9300));\n    client.addTransportAddress(new InetSocketTransportAddress(\"10.40.101.213\", 9300));\n    client.addTransportAddress(new InetSocketTransportAddress(\"10.40.101.214\", 9300));\n\n    IndicesAdminClient indicesAdmin = client.admin().indices();\n\n    try {\n        indicesAdmin.prepareDelete(NAME).execute().actionGet();\n    }\n    catch (IndexMissingException ignore) {\n        //\n    }\n\n    String indexSettings = \"{\\\"index\\\": {\" +//\n            \"    \\\"number_of_shards\\\" : \\\"32\\\",\" +//\n            \"    \\\"number_of_replicas\\\" : \\\"1\\\"\" +//\n            \"  }\" +//\n            '}';\n    indicesAdmin.prepareCreate(NAME).setSettings(indexSettings).execute().actionGet();\n\n    String indexMapping = \"{\\\"\" + NAME + \"\\\": {\" +//\n            \"  \\\"properties\\\": {\" +//\n            \"    \\\"my_text_1\\\" : {\" +//\n            \"      \\\"type\\\" : \\\"string\\\",\" +//\n            \"      \\\"store\\\" : \\\"yes\\\",\" +//\n            \"      \\\"index\\\" : \\\"analyzed\\\",\" +//\n            \"      \\\"include_in_all\\\" : \\\"true\\\"\" +//\n            \"    },\" +//\n            \"    \\\"my_text_2\\\" : {\" +//\n            \"      \\\"type\\\" : \\\"string\\\",\" +//\n            \"      \\\"store\\\" : \\\"yes\\\",\" +//\n            \"      \\\"index\\\" : \\\"analyzed\\\",\" +//\n            \"      \\\"include_in_all\\\" : \\\"true\\\"\" +//\n            \"    },\" +//\n            \"    \\\"my_text_3\\\" : {\" +//\n            \"      \\\"type\\\" : \\\"string\\\",\" +//\n            \"      \\\"store\\\" : \\\"yes\\\",\" +//\n            \"      \\\"index\\\" : \\\"analyzed\\\",\" +//\n            \"      \\\"include_in_all\\\" : \\\"true\\\"\" +//\n            \"    },\" +//\n            \"    \\\"when\\\" : {\" +//\n            \"      \\\"type\\\" : \\\"date\\\",\" +//\n            \"      \\\"store\\\" : \\\"yes\\\",\" +//\n            \"      \\\"include_in_all\\\" : \\\"true\\\"\" +//\n            \"    }\" +//\n            \"  }\" +// properties\n            '}' +// issue1839\n            '}';\n    indicesAdmin.preparePutMapping(NAME).setType(NAME).setSource(indexMapping).execute().actionGet();\n\n    for (int n = 0; n < THREADS; n++)\n        new Thread(new Indexer(client), \"indexer#\" + n).start();\n\n    while (true)\n        try {\n            Thread.sleep(500);\n        }\n        catch (InterruptedException e) {\n            break;\n        }\n}\n\n@SuppressWarnings(\"UseOfSystemOutOrSystemErr\")\nstatic final class Indexer implements Runnable {\n    private final TransportClient client;\n    private final Random rand = new Random(System.currentTimeMillis() + System.nanoTime());\n\n    Indexer(TransportClient client) {\n        this.client = client;\n    }\n\n    @Override\n    public void run() {\n        while (true) {\n            try {\n                Thread.sleep(10);\n            }\n            catch (InterruptedException e) {\n                break;\n            }\n\n            BulkRequestBuilder bulk = client.prepareBulk();\n            for (int n = 0; n < 2500; n++)\n                bulk.add(createIndexRequest());\n            System.out.println(new Date().toString() + \" : \" + Thread.currentThread().getName() + \" indexing 2500 docs\");\n            bulk.execute().actionGet();\n            System.out.println(new Date().toString() + \" : \" + Thread.currentThread().getName() + \" indexed 2500 docs\");\n        }\n    }\n\n    private IndexRequestBuilder createIndexRequest() {\n        StringBuilder document = new StringBuilder().//\n                append('{').//\n                append(\"  \\\"\").append(NAME).append(\"\\\" : {\").//\n                append(\"    \\\"my_text_1\\\" : \\\"\").append(createSomeText()).append(\"\\\", \").//\n                append(\"    \\\"my_text_2\\\" : \\\"\").append(createSomeText()).append(\"\\\", \").//\n                append(\"    \\\"my_text_3\\\" : \\\"\").append(createSomeText()).append(\"\\\", \").//\n                append(\"    \\\"when\\\" : \\\"\").append(System.currentTimeMillis()).append(\"\\\" \").//\n                append(\"  }\").//\n                append('}');\n        return client.prepareIndex(NAME, NAME).setSource(document.toString());\n    }\n\n    private String createSomeText() {\n        StringBuilder text = new StringBuilder();\n        for (int n = 0; n < rand.nextInt(40) + 3; n++) {\n            for (int m = 0; m < rand.nextInt(15) + 3; m++)\n                text.append((char) (rand.nextInt(26) + 65));\n            text.append(' ');\n        }\n        return text.append(rand.nextInt(10000000)).toString();\n    }\n}\n```\n\n}\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/4981334","html_url":"https://github.com/elastic/elasticsearch/issues/1839#issuecomment-4981334","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1839","id":4981334,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODEzMzQ=","user":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"created_at":"2012-04-05T17:24:49Z","updated_at":"2012-04-05T17:24:49Z","author_association":"MEMBER","body":"Hi, thanks for the recreation, I managed to recreate it locally as well. I found the problem, it revolves around not properly handling a relocation of a primary shard when just when the one we relocated from gets closed. I will post a fix in both 0.19 and master branches (closing this issue in the commit, so we can keep track of the change). If you can check it yourself as well it would be great.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/4984215","html_url":"https://github.com/elastic/elasticsearch/issues/1839#issuecomment-4984215","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1839","id":4984215,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODQyMTU=","user":{"login":"snazy","id":957468,"node_id":"MDQ6VXNlcjk1NzQ2OA==","avatar_url":"https://avatars0.githubusercontent.com/u/957468?v=4","gravatar_id":"","url":"https://api.github.com/users/snazy","html_url":"https://github.com/snazy","followers_url":"https://api.github.com/users/snazy/followers","following_url":"https://api.github.com/users/snazy/following{/other_user}","gists_url":"https://api.github.com/users/snazy/gists{/gist_id}","starred_url":"https://api.github.com/users/snazy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/snazy/subscriptions","organizations_url":"https://api.github.com/users/snazy/orgs","repos_url":"https://api.github.com/users/snazy/repos","events_url":"https://api.github.com/users/snazy/events{/privacy}","received_events_url":"https://api.github.com/users/snazy/received_events","type":"User","site_admin":false},"created_at":"2012-04-05T19:48:18Z","updated_at":"2012-04-05T19:48:18Z","author_association":"NONE","body":"Cool - that was fast :-)\n\nI'll try it when 0.19.3 is released - so I can rollback my \"timeout loop\".\n","performed_via_github_app":null}]