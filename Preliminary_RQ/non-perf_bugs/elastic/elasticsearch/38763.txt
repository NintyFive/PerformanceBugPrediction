{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/38763","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38763/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38763/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/38763/events","html_url":"https://github.com/elastic/elasticsearch/issues/38763","id":409173704,"node_id":"MDU6SXNzdWU0MDkxNzM3MDQ=","number":38763,"title":"Forbid allocate_empty_primary if Stale Copy Exists?","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"labels":[{"id":837246479,"node_id":"MDU6TGFiZWw4MzcyNDY0Nzk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Allocation","name":":Distributed/Allocation","color":"0e8a16","default":false,"description":"All issues relating to the decision making around placing a shard (both master logic & on the nodes)"},{"id":929267538,"node_id":"MDU6TGFiZWw5MjkyNjc1Mzg=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/team-discuss","name":"team-discuss","color":"fbca04","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-02-12T08:20:59Z","updated_at":"2019-02-20T14:50:06Z","closed_at":"2019-02-20T14:50:06Z","author_association":"MEMBER","active_lock_reason":null,"body":"Currently, it appears that if we have a stale copy of some unassigned shard on `node_a`, we can force allocate an empty primary on `node_b` and needless forgo the data that is still on `node_a`.\r\n\r\nI think just like we [added a check](https://github.com/elastic/elasticsearch/pull/37226) for the existence of stale data on a node for `allocate_stale_primary` we should add a check for the non-existence of any stale data before allowing `allocate_empty_primary`.\r\nThere isn't really a scenario in which it would be advantageous to allow forgoing a stale shard-copy by allocating an empty primary on a node when one could at least allocate a stale primary on another node is there?","closed_by":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"performed_via_github_app":null}