{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/17771","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17771/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17771/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17771/events","html_url":"https://github.com/elastic/elasticsearch/issues/17771","id":148530122,"node_id":"MDU6SXNzdWUxNDg1MzAxMjI=","number":17771,"title":"MultiSearch floods ES console with EsRejectedExecutionException stack traces","user":{"login":"rnagappan","id":8610755,"node_id":"MDQ6VXNlcjg2MTA3NTU=","avatar_url":"https://avatars3.githubusercontent.com/u/8610755?v=4","gravatar_id":"","url":"https://api.github.com/users/rnagappan","html_url":"https://github.com/rnagappan","followers_url":"https://api.github.com/users/rnagappan/followers","following_url":"https://api.github.com/users/rnagappan/following{/other_user}","gists_url":"https://api.github.com/users/rnagappan/gists{/gist_id}","starred_url":"https://api.github.com/users/rnagappan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnagappan/subscriptions","organizations_url":"https://api.github.com/users/rnagappan/orgs","repos_url":"https://api.github.com/users/rnagappan/repos","events_url":"https://api.github.com/users/rnagappan/events{/privacy}","received_events_url":"https://api.github.com/users/rnagappan/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-04-15T01:39:48Z","updated_at":"2016-04-22T10:28:02Z","closed_at":"2016-04-22T10:28:01Z","author_association":"NONE","active_lock_reason":null,"body":"**Elasticsearch version**: 2.2.2 and 2.3.1\n\n**JVM version**: 1.8.0_51 64-bit\n\n**OS version**: Windows 10 64-bit\n\n**Description of the problem including expected versus actual behavior**:\n\nI am trying use the multisearch API to run a large number of independent searches in a batch. I expect all the searches to run on the localhost cluster and to return, as per the API description. Instead I get heaps of EsRejectedExecutionExceptions in my ES console window.\n\n_I would expect that the multisearch API could manage its queue of requests so as to not flood Elasticsearch. The main reason I am trying to use this is to reduce the round-trip latency of each network request-response cycle. For even 1000 queries that adds up to a lot of waiting just for each transport back and forth._\n\n**Steps to reproduce**:\n\nMy code (using the Java Transport client) just queries for the counts of documents containing 1000 different terms and returns those terms present in at least 5 docs each:\n\n```\n    List<String> terms = new ArrayList<>(1000);\n    Random random = new Random();\n    for (int i = 0; i < 1000; i++)\n    {\n        terms.add(Integer.toString(random.nextInt()));\n    }\n\n    MultiSearchRequestBuilder requestBuilder = getEsClient().prepareMultiSearch();\n    terms.forEach(term -> {\n        SearchRequestBuilder query = getEsClient().prepareSearch()\n                                                  .setSize(0)\n                                                  .setNoFields()\n                                                  .setFetchSource(false)\n                                                  .setTypes(ElasticSearchSchema.DOCS_TYPE)\n                                                  .setQuery(termQuery(LuceneFields.CONTENT.getName(), term));\n        requestBuilder.add(query);\n    });\n\n    MultiSearchResponse.Item[] responses = requestBuilder.get()\n                                                         .getResponses();\n\n    Set<String> result = new HashSet<>(1000);\n    List<Integer> failedResponses = new ArrayList<>();\n    for (int i = 0; i < responses.length; i++)\n    {\n        MultiSearchResponse.Item response = responses[i];\n        try\n        {\n            if (response.getResponse().getHits().getTotalHits() >= 5)\n            {\n                result.add(terms.get(i));\n            }\n        }\n        catch (NullPointerException e)\n        {\n            failedResponses.add(i);\n        }\n    }\n    System.out.println(\"\" + failedResponses.size() + \" responses failed: \" + Joiner.on(\", \").join(failedResponses));\n```\n\nThe request returns eventually but the logs are spammed with hundreds of failure messages (see below). Occasionally one of the queries will return a failure response like this that matches the ES cluster console output but the number of failures is tiny compared to the log spam:\n\n```\nEsRejectedExecutionException[rejected execution of org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction$2@5d935160 on EsThreadPoolExecutor[search, queue capacity = 1000, org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor@25ba6eb[Running, pool size = 37, active threads = 37, queued tasks = 1000, completed tasks = 312998]]] \n```\n\nAfter a typical run with hundreds of messages on the log only one query returned a failed result in the end:\n\n```\n1 responses failed: 847\n```\n\n**Provide logs (if relevant)**:\n\n... but the ES console contains lots of entries like this, even if all the queries eventually succeeded:\n\n```\n[2016-04-15 11:00:29,114][DEBUG][action.search.type       ] [SYD-NAGAPPR-WS] [nuix-334f4c30941040ee894bde64ef3cc932][4], node[i_7E_ZZ8TYGZ9jXfnhaeig], [P], v[14], s[STARTED], a[id=_7pFXxtcSpir1j5nZAkLmQ]: Failed to execute [org.elasticsearch.action.search.SearchRequest@219198fc] lastShard [true]\nRemoteTransportException[[SYD-NAGAPPR-WS][127.0.0.1:9300][indices:data/read/search[phase/query]]]; nested: EsRejectedExecutionException[rejected execution of org.elasticsearch.transport.TransportService$4@5b94e2b8 on EsThreadPoolExecutor[search, queue capacity = 1000, org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor@25ba6eb[Running, pool size = 37, active threads = 37, queued tasks = 996, completed tasks = 129578]]];\nCaused by: EsRejectedExecutionException[rejected execution of org.elasticsearch.transport.TransportService$4@5b94e2b8 on EsThreadPoolExecutor[search, queue capacity = 1000, org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor@25ba6eb[Running, pool size = 37, active threads = 37, queued tasks = 996, completed tasks = 129578]]]\n    at org.elasticsearch.common.util.concurrent.EsAbortPolicy.rejectedExecution(EsAbortPolicy.java:50)\n    at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:823)\n    at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1369)\n    at org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor.execute(EsThreadPoolExecutor.java:85)\n    at org.elasticsearch.transport.TransportService.sendLocalRequest(TransportService.java:346)\n    at org.elasticsearch.transport.TransportService.sendRequest(TransportService.java:310)\n    at org.elasticsearch.transport.TransportService.sendRequest(TransportService.java:282)\n    at org.elasticsearch.search.action.SearchServiceTransportAction.sendExecuteQuery(SearchServiceTransportAction.java:142)\n    at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction.sendExecuteFirstPhase(TransportSearchQueryThenFetchAction.java:85)\n    at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.performFirstPhase(TransportSearchTypeAction.java:166)\n    at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.start(TransportSearchTypeAction.java:148)\n    at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction.doExecute(TransportSearchQueryThenFetchAction.java:64)\n    at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction.doExecute(TransportSearchQueryThenFetchAction.java:53)\n    at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:70)\n    at org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:99)\n    at org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:44)\n    at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:70)\n    at org.elasticsearch.action.search.TransportMultiSearchAction.doExecute(TransportMultiSearchAction.java:63)\n    at org.elasticsearch.action.search.TransportMultiSearchAction.doExecute(TransportMultiSearchAction.java:39)\n    at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:70)\n    at org.elasticsearch.action.support.HandledTransportAction$TransportHandler.messageReceived(HandledTransportAction.java:45)\n    at org.elasticsearch.action.support.HandledTransportAction$TransportHandler.messageReceived(HandledTransportAction.java:41)\n    at org.elasticsearch.transport.netty.MessageChannelHandler.handleRequest(MessageChannelHandler.java:244)\n    at org.elasticsearch.transport.netty.MessageChannelHandler.messageReceived(MessageChannelHandler.java:114)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)\n    at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:462)\n    at org.jboss.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:443)\n    at org.jboss.netty.handler.codec.frame.FrameDecoder.messageReceived(FrameDecoder.java:310)\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\n    at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:75)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\n    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)\n    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)\n    at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)\n    at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)\n    at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)\n    at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\n    at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n```\n","closed_by":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"performed_via_github_app":null}