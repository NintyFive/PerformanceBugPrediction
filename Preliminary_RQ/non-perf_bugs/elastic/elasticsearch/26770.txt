{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/26770","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26770/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26770/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/26770/events","html_url":"https://github.com/elastic/elasticsearch/issues/26770","id":260202970,"node_id":"MDU6SXNzdWUyNjAyMDI5NzA=","number":26770,"title":"Make the ability to create `exists` queries work on a per-field basis","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"assignees":[{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2017-09-25T09:07:03Z","updated_at":"2017-11-01T10:46:59Z","closed_at":"2017-11-01T10:46:59Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Today, our approach to handling `exists`queries is to index the names of all indexed/doc-valued fields under the `_field_names` field and later use that field in order to execute `exists` queries.\r\n\r\nHowever, now that doc values have good iterators, we could use them in order to execute `exists`queries. So I'm considering adding a new `MappedFieldType#existsQuery` API and changing mapping parsing logic so that it would roughly look like that for keyword fields:\r\n\r\n```java\r\n    @Override\r\n    public Query existsQuery(QueryShardContext context) {\r\n        if (hasDocValues()) {\r\n            return new DocValuesFieldExistsQuery(name());\r\n        } else {\r\n            // this fails if _field_names is disabled\r\n            return context.fieldMapper(FieldNamesFieldMapper.NAME).termQuery(name(), context);\r\n        }\r\n    }\r\n\r\n    [...]\r\n\r\n    @Override\r\n    protected void parseCreateField(ParseContext context, List<IndexableField> fields) throws IOException {\r\n        [...] // handling of parsing, indexed and stored values\r\n        if (fieldType().hasDocValues()) {\r\n            fields.add(new SortedSetDocValuesField(fieldType().name(), binaryValue));\r\n        } else if (fieldNamesIsEnabled) {\r\n            fields.add(new StringField(FieldNamesFieldMapper.NAME, fieldType().name());\r\n        }\r\n    }\r\n```\r\n\r\nThis way, we would index way fewer values into the `_field_names` field, probably even none with the default mappings since we could find text fields that have a value with norms (which are on by default), and other fields have doc values by default.","closed_by":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"performed_via_github_app":null}