{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/24871","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24871/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24871/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/24871/events","html_url":"https://github.com/elastic/elasticsearch/issues/24871","id":231150586,"node_id":"MDU6SXNzdWUyMzExNTA1ODY=","number":24871,"title":"Improved, unified, sniffing heuristics","user":{"login":"andrewvc","id":131427,"node_id":"MDQ6VXNlcjEzMTQyNw==","avatar_url":"https://avatars2.githubusercontent.com/u/131427?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewvc","html_url":"https://github.com/andrewvc","followers_url":"https://api.github.com/users/andrewvc/followers","following_url":"https://api.github.com/users/andrewvc/following{/other_user}","gists_url":"https://api.github.com/users/andrewvc/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewvc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewvc/subscriptions","organizations_url":"https://api.github.com/users/andrewvc/orgs","repos_url":"https://api.github.com/users/andrewvc/repos","events_url":"https://api.github.com/users/andrewvc/events{/privacy}","received_events_url":"https://api.github.com/users/andrewvc/received_events","type":"User","site_admin":false},"labels":[{"id":152517143,"node_id":"MDU6TGFiZWwxNTI1MTcxNDM=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Core/Infra/REST%20API","name":":Core/Infra/REST API","color":"0e8a16","default":false,"description":"REST infrastructure and utilities"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2017-05-24T19:45:14Z","updated_at":"2017-05-25T13:25:27Z","closed_at":"2017-05-25T13:25:27Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Currently, sniffing can be problematic due to its reliance of `http` endpoints meaning the node is sniffable. Part of this has bled through in https://github.com/elastic/elasticsearch/issues/12792 . Its also complicated in that its hard or impossible for users to define arbitrary sniffing criteria.\r\n\r\n## Goals\r\n\r\nI think a good set of sniffing heuristics would have the following heuristics:\r\n\r\n1. Simple: It should do the right thing for most people out of the box without them having to think too much about it\r\n2. Powerful: It should let users who want to customize it be able to\r\n3. Safe: It should make doing bad things (e.g. directing traffic toward master only nodes) difficult or impossible.\r\n\r\n## The Proposal\r\n\r\nI propose that clients alter their sniffing logic to one of two modes:\r\n\r\n1. Match everything except dedicated masters\r\n2. Match everything, filtered by node metadata, except dedicated masters\r\n\r\nSo, we would use the same node metadata that is normally used for rack awareness to restrict sniffing based on a custom user defined property. A client, such as the logstash elasticsearch output, might expose the following config options:\r\n\r\n```\r\nelasticsearch {\r\n  sniffing => true\r\n  sniffing_filter => { my_key => myvalue }\r\n}\r\n```\r\n\r\nA client would construct the list of sniffed nodes by:\r\n\r\n1. Querying the `/_nodes/http` API\r\n2. Including only nodes that have either:\r\n    1.  a roles array that includes data \r\n    1.  a roles array that does not include master\r\n3. Filter that list down further based on exact matches of `key == value` in the node metadata if present. If the user has not enabled this option then all results will be returned.\r\n\r\nI think this algorithm meets all the goals discussed earlier.","closed_by":{"login":"andrewvc","id":131427,"node_id":"MDQ6VXNlcjEzMTQyNw==","avatar_url":"https://avatars2.githubusercontent.com/u/131427?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewvc","html_url":"https://github.com/andrewvc","followers_url":"https://api.github.com/users/andrewvc/followers","following_url":"https://api.github.com/users/andrewvc/following{/other_user}","gists_url":"https://api.github.com/users/andrewvc/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewvc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewvc/subscriptions","organizations_url":"https://api.github.com/users/andrewvc/orgs","repos_url":"https://api.github.com/users/andrewvc/repos","events_url":"https://api.github.com/users/andrewvc/events{/privacy}","received_events_url":"https://api.github.com/users/andrewvc/received_events","type":"User","site_admin":false},"performed_via_github_app":null}