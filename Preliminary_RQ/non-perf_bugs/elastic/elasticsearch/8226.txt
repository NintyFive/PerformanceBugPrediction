{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/8226","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8226/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8226/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/8226/events","html_url":"https://github.com/elastic/elasticsearch/issues/8226","id":46799586,"node_id":"MDU6SXNzdWU0Njc5OTU4Ng==","number":8226,"title":"Empty index corrupts sort order","user":{"login":"matthughes","id":173132,"node_id":"MDQ6VXNlcjE3MzEzMg==","avatar_url":"https://avatars1.githubusercontent.com/u/173132?v=4","gravatar_id":"","url":"https://api.github.com/users/matthughes","html_url":"https://github.com/matthughes","followers_url":"https://api.github.com/users/matthughes/followers","following_url":"https://api.github.com/users/matthughes/following{/other_user}","gists_url":"https://api.github.com/users/matthughes/gists{/gist_id}","starred_url":"https://api.github.com/users/matthughes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthughes/subscriptions","organizations_url":"https://api.github.com/users/matthughes/orgs","repos_url":"https://api.github.com/users/matthughes/repos","events_url":"https://api.github.com/users/matthughes/events{/privacy}","received_events_url":"https://api.github.com/users/matthughes/received_events","type":"User","site_admin":false},"labels":[{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":133685408,"node_id":"MDU6TGFiZWwxMzM2ODU0MDg=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v1.3.5","name":"v1.3.5","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"assignees":[{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2014-10-25T02:25:37Z","updated_at":"2014-10-27T12:22:12Z","closed_at":"2014-10-27T12:22:12Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I've been trying to track down some strange sorting results and have narrowed it down to having an empty index.  I have multiple indexes all aliased to the same value.  Sort order works fine, but once you add an empty index, the order is corrupted.  Reproduction below:\n\n```\n#!/bin/bash\n\n# Create index with no docs with alias test\ncurl -s -XPOST \"http://localhost:9200/test-1\"     -d '{ \"aliases\" : { \"test\" : {} }}' > /dev/null\n\n# Then create a bunch of indices with alias test\ncurl -s XPOST \"http://localhost:9200/test-2\"     -d '{ \"aliases\" : { \"test\" : {} }}' > /dev/null\ncurl -s -XPOST \"http://localhost:9200/test-2/doc\" -d \"{ \\\"entry\\\": 1 }\"\n\ncurl -s -XPOST \"http://localhost:9200/test-3\"     -d '{ \"aliases\" : { \"test\" : {} }}' > /dev/null\ncurl -s -XPOST \"http://localhost:9200/test-3/doc\" -d \"{ \\\"entry\\\": 2 }\"\n\ncurl -s -XPOST \"http://localhost:9200/test-4\"     -d '{ \"aliases\" : { \"test\" : {} }}' > /dev/null\ncurl -s -XPOST \"http://localhost:9200/test-4/doc\" -d \"{ \\\"entry\\\": 3 }\"\n\ncurl -s -XPOST \"http://localhost:9200/test-5\"     -d '{ \"aliases\" : { \"test\" : {} }}' > /dev/null\ncurl -s -XPOST \"http://localhost:9200/test-5/doc\" -d \"{ \\\"entry\\\": 4 }\"\n\ncurl -s -XPOST \"http://localhost:9200/test-6\"     -d '{ \"aliases\" : { \"test\" : {} }}' > /dev/null\ncurl -s -XPOST \"http://localhost:9200/test-6/doc\" -d \"{ \\\"entry\\\": 5 }\"\n\ncurl -s -XPOST \"http://localhost:9200/test-7\"     -d '{ \"aliases\" : { \"test\" : {} }}' > /dev/null\ncurl -s -XPOST \"http://localhost:9200/test-7/doc\" -d \"{ \\\"entry\\\": 6 }\"\n\nsleep 2\n\n# Perform a sorted query, descending on field 'entry'\ncurl -XPOST 'http://localhost:9200/test/_search?pretty' -d '{\n  \"query\": {\n    \"filtered\": {\n      \"query\": {\n        \"bool\": {\n          \"should\": [\n            {\n              \"query_string\": {\n                \"query\": \"*\"\n              }\n            }\n          ]\n        }\n      },\n      \"filter\": {\n        \"bool\": {\n          \"must\": [\n            {\n              \"match_all\": {}\n            }\n          ]\n        }\n      }\n    }\n  },\n  \"highlight\": {\n    \"fields\": {},\n    \"fragment_size\": 2147483647,\n    \"pre_tags\": [\n      \"@start-highlight@\"\n    ],\n    \"post_tags\": [\n      \"@end-highlight@\"\n    ]\n  },\n  \"size\": 500,\n  \"sort\": [\n    {\n      \"entry\": {\n        \"order\": \"desc\",\n        \"ignore_unmapped\": true\n      }\n    }\n  ]\n}' | jq \".hits.hits[] | ._source.entry\"\n```\n\nResults:\n\n```\n5\n1\n3\n2\n6\n4\n```\n\nI can fix sort order in two ways: 1) remove the empty index or 2) change \"ignore_unmapped\" to false.\n\nBut IMO an empty index should no affect sort results.  I'm also confused on why \"ignore_unmapped\": false, fixes things.  I would think you would want the reverse, but it fails when true.\n","closed_by":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"performed_via_github_app":null}