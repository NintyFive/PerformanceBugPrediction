{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1510","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1510/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1510/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1510/events","html_url":"https://github.com/elastic/elasticsearch/issues/1510","id":2386156,"node_id":"MDU6SXNzdWUyMzg2MTU2","number":1510,"title":"Weird behaviour and unexpected exceptions with nested queries","user":{"login":"314fc","id":1228024,"node_id":"MDQ6VXNlcjEyMjgwMjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/1228024?v=4","gravatar_id":"","url":"https://api.github.com/users/314fc","html_url":"https://github.com/314fc","followers_url":"https://api.github.com/users/314fc/followers","following_url":"https://api.github.com/users/314fc/following{/other_user}","gists_url":"https://api.github.com/users/314fc/gists{/gist_id}","starred_url":"https://api.github.com/users/314fc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/314fc/subscriptions","organizations_url":"https://api.github.com/users/314fc/orgs","repos_url":"https://api.github.com/users/314fc/repos","events_url":"https://api.github.com/users/314fc/events{/privacy}","received_events_url":"https://api.github.com/users/314fc/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2011-11-29T15:56:23Z","updated_at":"2011-12-14T13:05:51Z","closed_at":"2011-12-14T13:05:51Z","author_association":"NONE","active_lock_reason":null,"body":"I've met with some exceptions trying to execute some nested queries. It's an erratic bug, because sometimes it works fine and other it fails. I've tried it in a fresh ElasticSearch version 0.18.5.\n\nThe following commands will reproduce the exceptions sometimes. Most of the times the last two queries (nested query and mixed query) work fine, but suddenly they will fail.\n# First we delete indices\n\ncurl -XDELETE 'http://localhost:9200/users/'\ncurl -XDELETE 'http://localhost:9200/entities/'\n# First index creation (users)\n\ncurl -XPUT 'http://localhost:9200/users/' -d '\nindex :\n    number_of_shards : 10\n    number_of_replicas : 0\n'\n# Insert document in first index (users)\n\ncurl -XPUT http://localhost:9200/users/user/1 -d '{\n    \"name\": \"John\",\n    \"surname\": \"Doe\"\n}'\n# Second index creation (entities)\n\ncurl -XPUT 'http://localhost:9200/entities/' -d '\nindex :\n    number_of_shards : 10\n    number_of_replicas : 0\n'\n# Create Nested Mapping in \"entities\" index called \"nestedtest\"\n\ncurl -XPUT 'http://localhost:9200/entities/nestedtest/_mapping' -d '\n{\n    \"tweet\" : {\n        \"properties\" : {\n            \"name\" : {\"type\" : \"string\", \"store\" : \"yes\"},\n            \"tweets\": {\"type\": \"nested\"}\n        }\n    }\n}\n'\n# Created Not-Nested Mapping in \"entities\" index called \"notnestedtest\"\n\ncurl -XPUT 'http://localhost:9200/entities/notnestedtest/_mapping' -d '\n{\n    \"tweet\" : {\n        \"properties\" : {\n            \"name\" : {\"type\" : \"string\", \"store\" : \"yes\"},\n            \"text\" : {\"type\" : \"string\", \"store\" : \"yes\"}\n        }\n    }\n}\n'\n# Insert document of type nestedtest\n\ncurl -XPUT http://localhost:9200/entities/nestedtest/1 -d '{\n    \"name\": \"document1\",\n    \"tweets\": [{\"message\": \"this is a test message\", \"author\":\"author1\"}, \n               {\"message\": \"second message\", \"author\":\"author2\"}]\n}'\n# Insert document of type notnestedtest\n\ncurl -XPUT http://localhost:9200/entities/notnestedtest/2 -d '{\n    \"name\": \"document2\",\n    \"text\": \"Text of document2\"\n}'\n# Nested query\n\ncurl -XGET http://localhost:9200/entities/nestedtest/_search?pretty=true -d '{\n    \"query\" : {\n        \"nested\" : {\n            \"path\" : \"tweets\",\n            \"score_mode\" : \"avg\",\n            \"query\" : {\n                \"bool\" : {\n                    \"must\" : [\n                        {\n                            \"text\" : {\"tweets.message\" : \"message\"}\n                        },\n                        {\n                            \"text\" : {\"author\" : \"author2\"}\n                        }\n                    ]\n                }\n            }\n        }\n    }\n}'\n# Mixed nested - not nested query\n\ncurl -XGET http://localhost:9200/entities/_search?pretty=true -d '{\n    \"query\" : {\n                \"bool\" : {\n                    \"should\" : [\n                        {\n                            \"text\" : {\"name\" : \"document2\"}\n                        },\n                        {\n                    \"nested\" : {\n                            \"path\" : \"tweets\",\n                            \"score_mode\" : \"avg\",\n                            \"query\" : {\n                                \"bool\" : {\n                                    \"must\" : [\n                                        {\n                                            \"text\" : {\"tweets.message\" : \"second\"}\n                                        },\n                                        {\n                                            \"text\" : {\"tweets.message\" : \"message\"}\n                                        },\n                                        {\n                                            \"text\" : {\"author\" : \"author2\"}\n                                        }\n                                    ]\n                                }\n                            }\n                    }\n                        }\n                    ]\n                }\n    }\n}'\n# Exceptions\n\nThe resulting exceptions are similar to the next:\n...\n    \"failures\" : [ {\n      \"index\" : \"entities\",\n      \"shard\" : 4,\n      \"status\" : 500,\n      \"reason\" : \"QueryPhaseExecutionException[[entities][4]: query[+text:texto +BlockJoinQuery (filtered(+tweets.tweet_lists:[2 TO 2] +tweets.tweet_author:ogrisel)->FilterCacheFilterWrapper(_type:__tweets))],from[0],size[10]: Query Failed [Failed to execute main query]]; nested: \"\n    } ]\n  },\n...\n# Errors returned by ElasticSearch are similar to the next:\n\n[2011-11-29 16:43:55,544][DEBUG][action.search.type       ] [eiffel1] [entities][4], node[Dzm9UI1NQHCeDiwRuVfkvA], [P], s[STARTED]: Failed to execute [org.elasticsearch.action.search.SearchRequest@2c2166f2]\norg.elasticsearch.search.query.QueryPhaseExecutionException: [entities][4]: query[+text:texto +BlockJoinQuery (filtered(+tweets.tweet_lists:[2 TO 2] +tweets.tweet_author:ogrisel)->FilterCacheFilterWrapper(_type:__tweets))],from[0],size[10]: Query Failed [Failed to execute main query]\n        at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:221)\n        at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:238)\n        at org.elasticsearch.search.action.SearchServiceTransportAction.sendExecuteQuery(SearchServiceTransportAction.java:134)\n        at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction.sendExecuteFirstPhase(TransportSearchQueryThenFetchAction.java:80)\n        at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.performFirstPhase(TransportSearchTypeAction.java:205)\n        at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.performFirstPhase(TransportSearchTypeAction.java:192)\n        at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction$2.run(TransportSearchTypeAction.java:178)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:662)\nCaused by: java.lang.NullPointerException\n        at org.elasticsearch.index.query.NestedQueryParser$LateBindingParentFilter.getDocIdSet(NestedQueryParser.java:171)\n        at org.elasticsearch.index.search.nested.BlockJoinQuery$BlockJoinWeight.scorer(BlockJoinQuery.java:171)\n        at org.apache.lucene.search.BooleanQuery$BooleanWeight.scorer(BooleanQuery.java:298)\n        at org.apache.lucene.search.FilteredQuery$1.scorer(FilteredQuery.java:116)\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:524)\n        at org.elasticsearch.search.internal.ContextIndexSearcher.search(ContextIndexSearcher.java:198)\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:391)\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:298)\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:286)\n        at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:217)\n","closed_by":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"performed_via_github_app":null}