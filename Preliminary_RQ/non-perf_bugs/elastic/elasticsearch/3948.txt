{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3948","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3948/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3948/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3948/events","html_url":"https://github.com/elastic/elasticsearch/issues/3948","id":21394077,"node_id":"MDU6SXNzdWUyMTM5NDA3Nw==","number":3948,"title":"Weighted shard allocation","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2013-10-22T16:24:25Z","updated_at":"2014-08-08T18:07:44Z","closed_at":"2014-08-08T18:07:44Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"So let me describe my problem before trying to come up with a solution because I'm not sure I have a good solution:\n1.  I have machines that vary significantly:\n   1a.  Some have SSDs and have some spinning disks.\n   1b.  Some have 96GB of ram and some have 32GB.\n   1c.  Some have six core, some have twelve.  Maybe we'll get more later with more.\n2.  I have indexes that vary significantly:\n   2a.  Some are small and see very little search or update traffic.\n   2b.  Some are large and see very little search or update traffic.\n   2c.  Some are small and see tons of searches and updates.\n   2d.  Some are large and see tons of searches and updates.\n\nIt looks now like Elasticsearch treats all cluster members and all hosts equally.  Would it make sense to let the user set weights on factors on indexes and hosts?  Like:\n\nHost A: traffic weight = 2, size weight = 1\nHost B: traffic weight = 1, size weight = 2\nHost C: traffic weight = 2, size weight = 2\netc\n\nIndex A: traffic weight = 3, size weight = 2\nIndex B: traffic weight = .1, size weight = 1\netc\n\nI'm not sure exactly how the balancing would work from there.  Maybe just a single weight factor would be good enough.  It has to be user defined, though.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}