[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/209919044","html_url":"https://github.com/elastic/elasticsearch/issues/17750#issuecomment-209919044","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17750","id":209919044,"node_id":"MDEyOklzc3VlQ29tbWVudDIwOTkxOTA0NA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-04-14T12:42:55Z","updated_at":"2016-04-14T12:42:55Z","author_association":"CONTRIBUTOR","body":"> field stats will return the field type, and whether it is searchable (index ==true) and aggregatable (doc_values==true || (index==true && fielddata==true))\n\nThis will be an issue for some virtual fields like `_id`, which is searchable even though it is not indexed, and `_index`, which is aggregatable even though it does not have doc values.\n\nIn order not to make it too complicated, I think we can check whether a field is aggregatable by checking whether `MappedFieldType.fielddataBuilder()` throws an exception since it is the method that throws an exception eg. when a keyword field does not have doc values or when a text field has `fielddata=false`.\n\nI don't think we have anything similar for searchable fields, so we would probably have to start by checking `index=true`, plus a hardcoded list of fields that are known to be searchable even though not indexed like `_id` and `_index`.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/209970572","html_url":"https://github.com/elastic/elasticsearch/issues/17750#issuecomment-209970572","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17750","id":209970572,"node_id":"MDEyOklzc3VlQ29tbWVudDIwOTk3MDU3Mg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-04-14T14:29:41Z","updated_at":"2016-04-14T14:29:41Z","author_association":"CONTRIBUTOR","body":"> index==true && fielddata==true\n\nThis made me realize that it is a bug that you can set `fielddata=true` on a field which is not indexed, so I opened #17747.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/209985805","html_url":"https://github.com/elastic/elasticsearch/issues/17750#issuecomment-209985805","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17750","id":209985805,"node_id":"MDEyOklzc3VlQ29tbWVudDIwOTk4NTgwNQ==","user":{"login":"rashidkpc","id":1250387,"node_id":"MDQ6VXNlcjEyNTAzODc=","avatar_url":"https://avatars1.githubusercontent.com/u/1250387?v=4","gravatar_id":"","url":"https://api.github.com/users/rashidkpc","html_url":"https://github.com/rashidkpc","followers_url":"https://api.github.com/users/rashidkpc/followers","following_url":"https://api.github.com/users/rashidkpc/following{/other_user}","gists_url":"https://api.github.com/users/rashidkpc/gists{/gist_id}","starred_url":"https://api.github.com/users/rashidkpc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rashidkpc/subscriptions","organizations_url":"https://api.github.com/users/rashidkpc/orgs","repos_url":"https://api.github.com/users/rashidkpc/repos","events_url":"https://api.github.com/users/rashidkpc/events{/privacy}","received_events_url":"https://api.github.com/users/rashidkpc/received_events","type":"User","site_admin":false},"created_at":"2016-04-14T14:56:03Z","updated_at":"2016-04-14T14:56:31Z","author_association":"NONE","body":"> When ?level=cluster (the default), fields with the same name are collapsed into a single entry unless the fields have a different type, in which case the whole request returns an exception.\n\nThis won't work for us, assuming it means that the entire request to _field_stats will fail. Ideally we would just exclude the field, perhaps with a way of listing the fields that were excluded due to any exception\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/209986161","html_url":"https://github.com/elastic/elasticsearch/issues/17750#issuecomment-209986161","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17750","id":209986161,"node_id":"MDEyOklzc3VlQ29tbWVudDIwOTk4NjE2MQ==","user":{"login":"spalger","id":1329312,"node_id":"MDQ6VXNlcjEzMjkzMTI=","avatar_url":"https://avatars1.githubusercontent.com/u/1329312?v=4","gravatar_id":"","url":"https://api.github.com/users/spalger","html_url":"https://github.com/spalger","followers_url":"https://api.github.com/users/spalger/followers","following_url":"https://api.github.com/users/spalger/following{/other_user}","gists_url":"https://api.github.com/users/spalger/gists{/gist_id}","starred_url":"https://api.github.com/users/spalger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spalger/subscriptions","organizations_url":"https://api.github.com/users/spalger/orgs","repos_url":"https://api.github.com/users/spalger/repos","events_url":"https://api.github.com/users/spalger/events{/privacy}","received_events_url":"https://api.github.com/users/spalger/received_events","type":"User","site_admin":false},"created_at":"2016-04-14T14:57:05Z","updated_at":"2016-04-14T14:57:05Z","author_association":"MEMBER","body":"> unless the fields have a different type, in which case the whole request returns an exception\n\nI think this is a bit drastic. Ideally Kibana would be able to use this and not have to through some fatal error about the field types not matching. Could the conflicting field have \"conflict\" set for its type when types conflict? Perhaps we could do the same thing for searchable and aggregatable.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/210023168","html_url":"https://github.com/elastic/elasticsearch/issues/17750#issuecomment-210023168","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17750","id":210023168,"node_id":"MDEyOklzc3VlQ29tbWVudDIxMDAyMzE2OA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-04-14T16:09:20Z","updated_at":"2016-04-14T16:09:20Z","author_association":"CONTRIBUTOR","body":"> in which case the whole request returns an exception.\n\nthis is what it does today, but the bullet points beneath that line explain what we need to change it to do:\n\n> - An entry should be returned for fields with conflicting type, but with an error key which describes the error.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/211377969","html_url":"https://github.com/elastic/elasticsearch/issues/17750#issuecomment-211377969","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17750","id":211377969,"node_id":"MDEyOklzc3VlQ29tbWVudDIxMTM3Nzk2OQ==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-04-18T13:26:42Z","updated_at":"2016-04-18T13:26:42Z","author_association":"MEMBER","body":"> field stats will return the field type, and whether it is searchable (index ==true) and aggregatable (doc_values==true || (index==true && fielddata==true))\n\nCurrently the field stats API will not return any information if the field is not searchable or if there is no document indexed with a value in that field. It makes sense as none of the stats would be available in such cases. \n@clintongormley @jpountz should we add an entry for the \"non-searchable/no value yet\" fields ?\nThis could look like this:\n\n```\n      \"fields\": {\n         \"field_index_false\": {\n               \"max_doc\": 1000,\n               \"doc_count\": -1, // not searchable\n               \"density\": -1,\n               \"sum_doc_freq\": -1,\n               \"sum_total_term_freq\": -1,\n               \"searchable\": false,\n               \"aggregatable\": true,\n               \"min_value\": null,\n               \"min_value_as_string\": \"\",\n               \"max_value\": null,\n               \"max_value_as_string\": \"\"\n            }\n         },\n          \"field_index_true_no_value\": {\n               \"max_doc\": 1000,\n               \"doc_count\": 0, // the field is searchable but no value has been indexed yet.\n               \"density\": 0,\n               \"sum_doc_freq\": 0,\n               \"sum_total_term_freq\": 0,\n               \"searchable\": true,\n               \"aggregatable\": true,\n               \"min_value\": null,\n               \"min_value_as_string\": \"\",\n               \"max_value\": null,\n               \"max_value_as_string\": \"\"\n            }\n         }\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/211805646","html_url":"https://github.com/elastic/elasticsearch/issues/17750#issuecomment-211805646","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17750","id":211805646,"node_id":"MDEyOklzc3VlQ29tbWVudDIxMTgwNTY0Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-04-19T08:49:14Z","updated_at":"2016-04-19T08:49:14Z","author_association":"CONTRIBUTOR","body":"Hmm good question...  In fact, even if we can aggregate on a field because it has doc values, we can't return the min/max values unless it is also indexed (correct, @jpountz ?).  Today, the field stats API will ignore non-indexed fields.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/211808543","html_url":"https://github.com/elastic/elasticsearch/issues/17750#issuecomment-211808543","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17750","id":211808543,"node_id":"MDEyOklzc3VlQ29tbWVudDIxMTgwODU0Mw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-04-19T08:54:46Z","updated_at":"2016-04-19T08:54:46Z","author_association":"CONTRIBUTOR","body":"> even if we can aggregate on a field because it has doc values, we can't return the min/max values unless it is also indexed\n\nThis is correct: we need doc values to aggregate, but these stats either come from points or from the inverted index.\n\nIf a field is mapped, I agree there should be an entry regardless of whether it exists in the index or not.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/230103408","html_url":"https://github.com/elastic/elasticsearch/issues/17750#issuecomment-230103408","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17750","id":230103408,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDEwMzQwOA==","user":{"login":"Bargs","id":6239176,"node_id":"MDQ6VXNlcjYyMzkxNzY=","avatar_url":"https://avatars3.githubusercontent.com/u/6239176?v=4","gravatar_id":"","url":"https://api.github.com/users/Bargs","html_url":"https://github.com/Bargs","followers_url":"https://api.github.com/users/Bargs/followers","following_url":"https://api.github.com/users/Bargs/following{/other_user}","gists_url":"https://api.github.com/users/Bargs/gists{/gist_id}","starred_url":"https://api.github.com/users/Bargs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bargs/subscriptions","organizations_url":"https://api.github.com/users/Bargs/orgs","repos_url":"https://api.github.com/users/Bargs/repos","events_url":"https://api.github.com/users/Bargs/events{/privacy}","received_events_url":"https://api.github.com/users/Bargs/received_events","type":"User","site_admin":false},"created_at":"2016-07-02T14:07:53Z","updated_at":"2016-07-02T14:07:53Z","author_association":"NONE","body":"@clintongormley I started working on the Kibana code to consume this new info and I've realized there was a miss with the PR that closed this issue. Field stats still doesn't include the type of each field, and that info is critical for Kibana.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/230223772","html_url":"https://github.com/elastic/elasticsearch/issues/17750#issuecomment-230223772","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/17750","id":230223772,"node_id":"MDEyOklzc3VlQ29tbWVudDIzMDIyMzc3Mg==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2016-07-04T07:30:33Z","updated_at":"2016-07-04T07:30:33Z","author_association":"MEMBER","body":"@Bargs, sorry I missed this part in the initial PR. \nI submitted a new PR to fix this discrepancy: \nhttps://github.com/elastic/elasticsearch/pull/19241\nCould you please verify that it contains the information that you need ?\n","performed_via_github_app":null}]