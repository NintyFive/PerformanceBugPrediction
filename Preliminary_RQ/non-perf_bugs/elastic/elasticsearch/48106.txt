{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/48106","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48106/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48106/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/48106/events","html_url":"https://github.com/elastic/elasticsearch/issues/48106","id":507677295,"node_id":"MDU6SXNzdWU1MDc2NzcyOTU=","number":48106,"title":"Skip dangling indices checks on every cluster update","user":{"login":"Bukhtawar","id":12809319,"node_id":"MDQ6VXNlcjEyODA5MzE5","avatar_url":"https://avatars0.githubusercontent.com/u/12809319?v=4","gravatar_id":"","url":"https://api.github.com/users/Bukhtawar","html_url":"https://github.com/Bukhtawar","followers_url":"https://api.github.com/users/Bukhtawar/followers","following_url":"https://api.github.com/users/Bukhtawar/following{/other_user}","gists_url":"https://api.github.com/users/Bukhtawar/gists{/gist_id}","starred_url":"https://api.github.com/users/Bukhtawar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bukhtawar/subscriptions","organizations_url":"https://api.github.com/users/Bukhtawar/orgs","repos_url":"https://api.github.com/users/Bukhtawar/repos","events_url":"https://api.github.com/users/Bukhtawar/events{/privacy}","received_events_url":"https://api.github.com/users/Bukhtawar/received_events","type":"User","site_admin":false},"labels":[{"id":837246479,"node_id":"MDU6TGFiZWw4MzcyNDY0Nzk=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Allocation","name":":Distributed/Allocation","color":"0e8a16","default":false,"description":"All issues relating to the decision making around placing a shard (both master logic & on the nodes)"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-10-16T07:49:40Z","updated_at":"2019-10-16T09:52:43Z","closed_at":"2019-10-16T08:16:53Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## Problem Description\r\nAlthough optimized in 6.5 but still the check seems wasteful for dedicated master nodes. There is no point checking for indices directory. This can to a very insignificant slow down cluster state updates as this check is done at every update. This happened in ES 6.2 below is the hot threads o/p\r\n\r\n```\r\n23.4% (116.7ms out of 500ms) cpu usage by thread 'elasticsearch[tkCBQZW][clusterApplierService#updateTask][T#1]'\r\n     2/10 snapshots sharing following 37 elements\r\n       java.io.UnixFileSystem.canonicalize0(Native Method)\r\n       java.io.UnixFileSystem.canonicalize(UnixFileSystem.java:172)\r\n       java.io.File.getCanonicalPath(File.java:618)\r\n       java.io.FilePermission$1.run(FilePermission.java:215)\r\n       java.io.FilePermission$1.run(FilePermission.java:203)\r\n       java.security.AccessController.doPrivileged(Native Method)\r\n       java.io.FilePermission.init(FilePermission.java:203)\r\n       java.io.FilePermission.<init>(FilePermission.java:277)\r\n       java.lang.SecurityManager.checkRead(SecurityManager.java:888)\r\n       sun.nio.fs.UnixPath.checkRead(UnixPath.java:795)\r\n       sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:49)\r\n       sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:144)\r\n       sun.nio.fs.LinuxFileSystemProvider.readAttributes(LinuxFileSystemProvider.java:99)\r\n       java.nio.file.Files.readAttributes(Files.java:1737)\r\n       java.nio.file.Files.isDirectory(Files.java:2192)\r\n       org.elasticsearch.env.NodeEnvironment.availableIndexFoldersForPath(NodeEnvironment.java:790)\r\n       org.elasticsearch.env.NodeEnvironment.availableIndexFolders(NodeEnvironment.java:767)\r\n       org.elasticsearch.gateway.MetaStateService.loadIndicesStates(MetaStateService.java:89)\r\n       org.elasticsearch.gateway.DanglingIndicesState.findNewDanglingIndices(DanglingIndicesState.java:131)\r\n       org.elasticsearch.gateway.DanglingIndicesState.findNewAndAddDanglingIndices(DanglingIndicesState.java:116)\r\n       org.elasticsearch.gateway.DanglingIndicesState.processDanglingIndices(DanglingIndicesState.java:81)\r\n       org.elasticsearch.gateway.DanglingIndicesState.clusterChanged(DanglingIndicesState.java:185)\r\n       org.elasticsearch.cluster.service.ClusterApplierService.lambda$callClusterStateListeners$7(ClusterApplierService.java:509)\r\n       org.elasticsearch.cluster.service.ClusterApplierService$$Lambda$1712/1950969471.accept(Unknown Source)\r\n       java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\r\n       java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:742)\r\n       java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)\r\n       org.elasticsearch.cluster.service.ClusterApplierService.callClusterStateListeners(ClusterApplierService.java:506)\r\n       org.elasticsearch.cluster.service.ClusterApplierService.applyChanges(ClusterApplierService.java:489)\r\n       org.elasticsearch.cluster.service.ClusterApplierService.runTask(ClusterApplierService.java:432)\r\n       org.elasticsearch.cluster.service.ClusterApplierService$UpdateTask.run(ClusterApplierService.java:161)\r\n       org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:582)\r\n       org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:244)\r\n       org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:207)\r\n       java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n       java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n       java.lang.Thread.run(Thread.java:748)\r\n```\r\n","closed_by":{"login":"DaveCTurner","id":5058284,"node_id":"MDQ6VXNlcjUwNTgyODQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5058284?v=4","gravatar_id":"","url":"https://api.github.com/users/DaveCTurner","html_url":"https://github.com/DaveCTurner","followers_url":"https://api.github.com/users/DaveCTurner/followers","following_url":"https://api.github.com/users/DaveCTurner/following{/other_user}","gists_url":"https://api.github.com/users/DaveCTurner/gists{/gist_id}","starred_url":"https://api.github.com/users/DaveCTurner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaveCTurner/subscriptions","organizations_url":"https://api.github.com/users/DaveCTurner/orgs","repos_url":"https://api.github.com/users/DaveCTurner/repos","events_url":"https://api.github.com/users/DaveCTurner/events{/privacy}","received_events_url":"https://api.github.com/users/DaveCTurner/received_events","type":"User","site_admin":false},"performed_via_github_app":null}