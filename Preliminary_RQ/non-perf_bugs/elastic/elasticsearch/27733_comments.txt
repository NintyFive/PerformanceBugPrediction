[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/350688609","html_url":"https://github.com/elastic/elasticsearch/issues/27733#issuecomment-350688609","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27733","id":350688609,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDY4ODYwOQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-12-11T10:48:09Z","updated_at":"2017-12-11T10:48:09Z","author_association":"CONTRIBUTOR","body":"@Grinnz As the author of the Perl client, I felt similarly and have long defended truthy/falsey values, until I realised that 0 is true in ruby.  When you start looking at other languages, you realise that there is a mishmash of what is considered true vs false, so whatever you choose, it's going to be wrong (and thus surprising and confusing) for somebody.\r\n\r\nThis led me to put my weight behind strict booleans.  We're not going to add 0 and 1 as accepted values for the reason stated above (why choose the Perl way instead of the Ruby way?).\r\n\r\nThe Perl client converts truthy and falsey values to true/false in the query string parameter handling, and you can use `JSON::PP::True` and `JSON::PP::False` (or `\\0`/`\\1`) in the request body.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/350797146","html_url":"https://github.com/elastic/elasticsearch/issues/27733#issuecomment-350797146","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27733","id":350797146,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDc5NzE0Ng==","user":{"login":"Grinnz","id":5769356,"node_id":"MDQ6VXNlcjU3NjkzNTY=","avatar_url":"https://avatars3.githubusercontent.com/u/5769356?v=4","gravatar_id":"","url":"https://api.github.com/users/Grinnz","html_url":"https://github.com/Grinnz","followers_url":"https://api.github.com/users/Grinnz/followers","following_url":"https://api.github.com/users/Grinnz/following{/other_user}","gists_url":"https://api.github.com/users/Grinnz/gists{/gist_id}","starred_url":"https://api.github.com/users/Grinnz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Grinnz/subscriptions","organizations_url":"https://api.github.com/users/Grinnz/orgs","repos_url":"https://api.github.com/users/Grinnz/repos","events_url":"https://api.github.com/users/Grinnz/events{/privacy}","received_events_url":"https://api.github.com/users/Grinnz/received_events","type":"User","site_admin":false},"created_at":"2017-12-11T17:32:43Z","updated_at":"2017-12-11T17:37:13Z","author_association":"NONE","body":"I think you may have misinterpreted. I am not arguing for the \"Perl way\" or \"truthy/falsey values\", I agreed that removing these was a good idea. I am arguing specifically for 1 and 0 which are used as booleans in more than just Perl - SQL (at least MySQL) and C come to mind. Ruby has native booleans so would not need to use these. (I am also well aware of how to generate booleans in JSON.)","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/350820394","html_url":"https://github.com/elastic/elasticsearch/issues/27733#issuecomment-350820394","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/27733","id":350820394,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDgyMDM5NA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-12-11T18:51:56Z","updated_at":"2017-12-11T18:51:56Z","author_association":"CONTRIBUTOR","body":"> it would be convenient for instances where one is using various components with different boolean representations, in the case where '0' and '1' are the only representations that can be transparently used across all systems.\r\n\r\nExcept it would fail for Ruby. If you're talking interoperability then Ruby's native booleans don't count. That's my point.  This is why we scaled it right back to the most basic.","performed_via_github_app":null}]