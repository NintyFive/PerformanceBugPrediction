[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/445701977","html_url":"https://github.com/elastic/elasticsearch/issues/36402#issuecomment-445701977","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36402","id":445701977,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NTcwMTk3Nw==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-12-10T06:28:51Z","updated_at":"2018-12-10T06:28:51Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-analytics-geo","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/445914797","html_url":"https://github.com/elastic/elasticsearch/issues/36402#issuecomment-445914797","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36402","id":445914797,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NTkxNDc5Nw==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2018-12-10T18:11:18Z","updated_at":"2018-12-10T18:11:18Z","author_association":"MEMBER","body":"The reason `missing` doesn't work is because that only fills in values when a document is missing the particular field.  In this case, there are no documents in the bucket so there is nothing `missing` could be applied to.  The `NaN` that is being returned by the percentiles is basically an \"empty result\" (no values collected, so we can't calculate a percentile, so it's not-a-number.  In 7.0 it'll be a `null` in the JSON, but same idea).\r\n\r\nIt appears that `NaN`s are [explicitly ignored in the sub-agg comparator](https://github.com/elastic/elasticsearch/blob/master/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregator.java#L273-L275).  @colings86 looks like you reviewed the PR that added this functionality (waaaaay long ago), do you happen to remember if there's a reason for always pushing `NaN`s to the bottom?  Or was it just the way it's implemented and no particular reason?\r\n\r\nAnother approach could be using `bucket_sort` to do the sorting post-hoc, but it appears that `bucket_sort` strips out empty sort values so you end up removing the `NaN` bucket... :(","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/446128240","html_url":"https://github.com/elastic/elasticsearch/issues/36402#issuecomment-446128240","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36402","id":446128240,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NjEyODI0MA==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2018-12-11T09:16:19Z","updated_at":"2018-12-11T09:16:19Z","author_association":"MEMBER","body":"There is no technical reason for sorting the NaN values last but they need to be sorted to some position and I think last makes the most sense to me since if you are sorting buckets by a particular metric having the buckets with no value go to the end seems more convenient then having them sort to the beginning where they will get in the value of the value that most users are likely to want first. \r\n\r\nI am happy to change this so that adjusting the sort order surfaces these values to the top but I would strongly prefer that NaNs are sorted last when sort order is \"desc\" (the default) and I am also a little concerned that changing this may not be favourable to other use cases so it might be worth trying to solicit more feedback both for and against changing this before we proceed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/446204835","html_url":"https://github.com/elastic/elasticsearch/issues/36402#issuecomment-446204835","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36402","id":446204835,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NjIwNDgzNQ==","user":{"login":"itaydvir","id":10347224,"node_id":"MDQ6VXNlcjEwMzQ3MjI0","avatar_url":"https://avatars3.githubusercontent.com/u/10347224?v=4","gravatar_id":"","url":"https://api.github.com/users/itaydvir","html_url":"https://github.com/itaydvir","followers_url":"https://api.github.com/users/itaydvir/followers","following_url":"https://api.github.com/users/itaydvir/following{/other_user}","gists_url":"https://api.github.com/users/itaydvir/gists{/gist_id}","starred_url":"https://api.github.com/users/itaydvir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/itaydvir/subscriptions","organizations_url":"https://api.github.com/users/itaydvir/orgs","repos_url":"https://api.github.com/users/itaydvir/repos","events_url":"https://api.github.com/users/itaydvir/events{/privacy}","received_events_url":"https://api.github.com/users/itaydvir/received_events","type":"User","site_admin":false},"created_at":"2018-12-11T13:37:41Z","updated_at":"2018-12-11T13:37:41Z","author_association":"NONE","body":"@colings86 @polyfractal - after your comments and link to comparator source code, I realized your solution is the correct one. since we have no data, it will be wrong to sort them, and yes, changing it might cause problems (even to me) because actual results might not show up because the NaN's pushed them outside the result size limit.\r\n\r\nThank you for your time & clarification, and sorry for opening a bug which is not a bug.\r\nBest,\r\nItay\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/446206060","html_url":"https://github.com/elastic/elasticsearch/issues/36402#issuecomment-446206060","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36402","id":446206060,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NjIwNjA2MA==","user":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"created_at":"2018-12-11T13:41:46Z","updated_at":"2018-12-11T13:41:46Z","author_association":"MEMBER","body":"> Thank you for your time & clarification, and sorry for opening a bug which is not a bug.\r\n\r\nI think this was an important discussion to have to check that we are taking the right approach on this situation so please don't feel bad for opening this issue, I think it was great to have this discussion","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/446229422","html_url":"https://github.com/elastic/elasticsearch/issues/36402#issuecomment-446229422","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/36402","id":446229422,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NjIyOTQyMg==","user":{"login":"polyfractal","id":1224228,"node_id":"MDQ6VXNlcjEyMjQyMjg=","avatar_url":"https://avatars1.githubusercontent.com/u/1224228?v=4","gravatar_id":"","url":"https://api.github.com/users/polyfractal","html_url":"https://github.com/polyfractal","followers_url":"https://api.github.com/users/polyfractal/followers","following_url":"https://api.github.com/users/polyfractal/following{/other_user}","gists_url":"https://api.github.com/users/polyfractal/gists{/gist_id}","starred_url":"https://api.github.com/users/polyfractal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polyfractal/subscriptions","organizations_url":"https://api.github.com/users/polyfractal/orgs","repos_url":"https://api.github.com/users/polyfractal/repos","events_url":"https://api.github.com/users/polyfractal/events{/privacy}","received_events_url":"https://api.github.com/users/polyfractal/received_events","type":"User","site_admin":false},"created_at":"2018-12-11T14:51:22Z","updated_at":"2018-12-11T14:51:22Z","author_association":"MEMBER","body":"Agreed, it's good to discuss behaviors like this since they very well could be bugs :)\r\n\r\nI suspect we'll still want to fix how the `bucket_sort` behaves... it feels odd that trying to sort buckets will also have the side-effect of removing \"empty\" buckets.  And including `NaN` in the `bucket_sort` comparison feels like the correct thing to do, since the goal of the pipeline agg is to sort the final list of buckets.\r\n\r\nI'll open an issue so we can track that particular bug/oddity.  Going to close this issue now if that's OK, then link to it from the new issue re: `bucket_sort`\r\n\r\nThanks all!\r\n","performed_via_github_app":null}]