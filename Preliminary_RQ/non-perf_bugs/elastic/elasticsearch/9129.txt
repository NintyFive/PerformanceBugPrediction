{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/9129","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9129/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9129/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9129/events","html_url":"https://github.com/elastic/elasticsearch/issues/9129","id":53299328,"node_id":"MDU6SXNzdWU1MzI5OTMyOA==","number":9129,"title":"Invalid indexes getting created when master crashes due to OOM","user":{"login":"mosiddi","id":2240862,"node_id":"MDQ6VXNlcjIyNDA4NjI=","avatar_url":"https://avatars1.githubusercontent.com/u/2240862?v=4","gravatar_id":"","url":"https://api.github.com/users/mosiddi","html_url":"https://github.com/mosiddi","followers_url":"https://api.github.com/users/mosiddi/followers","following_url":"https://api.github.com/users/mosiddi/following{/other_user}","gists_url":"https://api.github.com/users/mosiddi/gists{/gist_id}","starred_url":"https://api.github.com/users/mosiddi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mosiddi/subscriptions","organizations_url":"https://api.github.com/users/mosiddi/orgs","repos_url":"https://api.github.com/users/mosiddi/repos","events_url":"https://api.github.com/users/mosiddi/events{/privacy}","received_events_url":"https://api.github.com/users/mosiddi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"assignees":[{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false}],"milestone":null,"comments":11,"created_at":"2015-01-03T09:27:16Z","updated_at":"2015-01-13T17:51:09Z","closed_at":"2015-01-13T17:51:09Z","author_association":"NONE","active_lock_reason":null,"body":"Recently in one of our ES cluster, we ran into an interesting issue. The below is the sequence of events that happened - \n\nES Cluster: 3 query, 3 master, 3 data nodes\n                   Azure VMs\n                   Masters are A2 machines with heap size set to 2 GB\n1. Around 1000 index create requests were sent to master 1 within a span of 15 minutes, master successfully created a set of indexes (~800) and failed with timeout exception for the rest\n   a. We were not waiting for create request to really complete from ES side, just ack was what we took dependency on. This is something we will fix at our end.\n   b. Above when I say 'successfully created', I mean we got proper ack and not timeout exception\n2. Master 1 crashed in the middle of processing # 1 above. 2 reasons - \n   a. Heap size grew and there was an OOM\n   b. In the call stack it was Marvel exporter\n   There were couple of GC collector calls for the initial create request timeouts we saw before master crashed.\n3. A new master (3) took the role of master and started looking into index shard rebalancing. It kept failing for a sizeable number of indexes (~500) with the below exeption\n\n[Failed to start shard, message [IndexShardGatewayRecoveryException[[**************_][2] failed to fetch index version after copying it over]; nested: IndexShardGatewayRecoveryException[[*************][2] shard allocated for local recovery (post api), should exist, but doesn't, current files: []]; nested: IndexNotFoundException[no segments_ file found in store(least_used[rate_limited(mmapfs(F:\\data\\***************_\\nodes\\0\\indices\\**_*******\\2\\index), type=MERGE, rate=20.0)]): files: []]; ]]\n1. This kept happening\n\nWhen we looked into the indexes for which the master was failing with shard initialization, what we noticed was either the indexes (folder and files in data nodes) didn't exist OR the folder exists with no files in any of the data nodes.\n\nCouple of Qs - \n1. How master maintains the admin write consistency quorum. When it adds a new index, does it update other master and syncs with them so the quorum is maintained?\n2. Does ES maintain the create index sub-states transaction ally (checkpoints) so whatever state the index creation was, when one master crashes the new master can pick maintain idempotency?\n3. Is this something we have seen earlier?\n","closed_by":{"login":"mosiddi","id":2240862,"node_id":"MDQ6VXNlcjIyNDA4NjI=","avatar_url":"https://avatars1.githubusercontent.com/u/2240862?v=4","gravatar_id":"","url":"https://api.github.com/users/mosiddi","html_url":"https://github.com/mosiddi","followers_url":"https://api.github.com/users/mosiddi/followers","following_url":"https://api.github.com/users/mosiddi/following{/other_user}","gists_url":"https://api.github.com/users/mosiddi/gists{/gist_id}","starred_url":"https://api.github.com/users/mosiddi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mosiddi/subscriptions","organizations_url":"https://api.github.com/users/mosiddi/orgs","repos_url":"https://api.github.com/users/mosiddi/repos","events_url":"https://api.github.com/users/mosiddi/events{/privacy}","received_events_url":"https://api.github.com/users/mosiddi/received_events","type":"User","site_admin":false},"performed_via_github_app":null}