{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/2417","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2417/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2417/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/2417/events","html_url":"https://github.com/elastic/elasticsearch/issues/2417","id":8418767,"node_id":"MDU6SXNzdWU4NDE4NzY3","number":2417,"title":"Add option to skip incompatible fields on multi_match query","user":{"login":"IlyaSemenov","id":128121,"node_id":"MDQ6VXNlcjEyODEyMQ==","avatar_url":"https://avatars1.githubusercontent.com/u/128121?v=4","gravatar_id":"","url":"https://api.github.com/users/IlyaSemenov","html_url":"https://github.com/IlyaSemenov","followers_url":"https://api.github.com/users/IlyaSemenov/followers","following_url":"https://api.github.com/users/IlyaSemenov/following{/other_user}","gists_url":"https://api.github.com/users/IlyaSemenov/gists{/gist_id}","starred_url":"https://api.github.com/users/IlyaSemenov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IlyaSemenov/subscriptions","organizations_url":"https://api.github.com/users/IlyaSemenov/orgs","repos_url":"https://api.github.com/users/IlyaSemenov/repos","events_url":"https://api.github.com/users/IlyaSemenov/events{/privacy}","received_events_url":"https://api.github.com/users/IlyaSemenov/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2012-11-16T12:56:15Z","updated_at":"2012-11-28T18:29:51Z","closed_at":"2012-11-28T18:29:51Z","author_association":"NONE","active_lock_reason":null,"body":"I believe this is a typical use case, we allow a user to type a search string and then use it to search against a set of fields. Unfortunately, currently that doesn't allow to include integer fields (say, document ID) in this set. Following a simple example:\n\n``` shell\n$ curl -XGET http://localhost:9200/gallery/item/_search -d '{query:\n  {multi_match: {fields: [\"id\", \"name\"], query: \"test\"}}\n}'\n```\n\nwhich gives:\n_{\"error\":\"SearchPhaseExecutionException[Failed to execute phase [query], total failure; shardFailures {[LJs6UPnTQ_u-Ws0SAna0zA][gallery][0]: SearchParseException[[gallery][0]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\\\"query\\\": {\\\"multi_match\\\": {\\\"fields\\\": [\\\"id\\\", \\\"name\\\"], query: \\\"test\\\"}}}]]]; nested: NumberFormatException[For input string: \\\"test\\\"]; }{[LJs6UPnTQ_u-Ws0SAna0zA][gallery][1]: SearchParseException[[gallery][1]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\\\"query\\\": {\\\"multi_match\\\": {\\\"fields\\\": [\\\"id\\\", \\\"name\\\"], query: \\\"test\\\"}}}]]]; nested: NumberFormatException[For input string: \\\"test\\\"]; }]\",\"status\":500}_\n\nI did read the discussions in Google Groups on that matter and I agree that it's not really correct to simply ignore those errors. However, since it **is** a typical use case which is very commonly used  indeed (for instance, that's how Django Admin search_fields works), I believe we need to have a multi_match query option (off by default) which will allow such queries to complete.\n\nSupposedly, that will be something like:\n\n``` shell\n$ curl -XGET http://localhost:9200/gallery/item/_search -d '{query:\n  {multi_match: {fields: [\"id\", \"name\"], query: \"test\", \"match_field_types\": true}}\n}'  # automatically remove 'id' from fields because of the incompatible type\n```\n","closed_by":{"login":"IlyaSemenov","id":128121,"node_id":"MDQ6VXNlcjEyODEyMQ==","avatar_url":"https://avatars1.githubusercontent.com/u/128121?v=4","gravatar_id":"","url":"https://api.github.com/users/IlyaSemenov","html_url":"https://github.com/IlyaSemenov","followers_url":"https://api.github.com/users/IlyaSemenov/followers","following_url":"https://api.github.com/users/IlyaSemenov/following{/other_user}","gists_url":"https://api.github.com/users/IlyaSemenov/gists{/gist_id}","starred_url":"https://api.github.com/users/IlyaSemenov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IlyaSemenov/subscriptions","organizations_url":"https://api.github.com/users/IlyaSemenov/orgs","repos_url":"https://api.github.com/users/IlyaSemenov/repos","events_url":"https://api.github.com/users/IlyaSemenov/events{/privacy}","received_events_url":"https://api.github.com/users/IlyaSemenov/received_events","type":"User","site_admin":false},"performed_via_github_app":null}