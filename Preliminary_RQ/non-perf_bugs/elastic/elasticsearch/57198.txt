{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/57198","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57198/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57198/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/57198/events","html_url":"https://github.com/elastic/elasticsearch/issues/57198","id":625570270,"node_id":"MDU6SXNzdWU2MjU1NzAyNzA=","number":57198,"title":"Snapshot Shard Directory in Repository Can Become Corrupted in Unlikely Corner Case","user":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"labels":[{"id":143077482,"node_id":"MDU6TGFiZWwxNDMwNzc0ODI=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Snapshot/Restore","name":":Distributed/Snapshot/Restore","color":"0e8a16","default":false,"description":"Anything directly related to the `_snapshot/*` APIs"},{"id":23173,"node_id":"MDU6TGFiZWwyMzE3Mw==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Ebug","name":">bug","color":"b60205","default":false,"description":null},{"id":1967496670,"node_id":"MDU6TGFiZWwxOTY3NDk2Njcw","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Distributed","name":"Team:Distributed","color":"fef2c0","default":false,"description":"Meta label for distributed team"}],"state":"closed","locked":false,"assignee":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"assignees":[{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2020-05-27T10:21:51Z","updated_at":"2020-05-29T13:51:29Z","closed_at":"2020-05-29T13:51:29Z","author_association":"MEMBER","active_lock_reason":null,"body":"There is one very unlikely scenario in which a repository can get into a corrupt state where new snapshots cannot be taken for a certain index (**no data loss though for existing snapshots**).\r\nThe way this can happen is as follows:\r\n\r\n1. Start to snapshot an index into a repository that does not yet contain a snapshot of an index by the same name\r\n2. Snapshot on the data node is written fully to the repository but fails to send the network request to the master to notify the master about the fact that the snapshot worked out and then disconnects\r\n\r\nWhat will happen in this scenario is that the master will write a new `index-N` blob (`RepositoryData`) that contains a the uuid for the index path in the repository but does not contain any shard generations for the shard that was just fully written.\r\n\r\nOn a subsequent snapshot, the master node will not interpret the index as newly created in the repository and will try to find the correct `index-{UUID/N}` blob for the shard in the shard directory. Since no shard generation is tracked in `RepositoryData` it assumes it will find an `index-N` blob where `N` is a number. Instead it will find the previously written but never referenced `index-{UUID}` blob from the snapshot that failed to signal completion back to master. This causes a safety mechanism to kick in and an exception is thrown:\r\n\r\n```\r\njava.lang.IllegalStateException: Could not find a readable index-N file in a non-empty shard snapshot directory \r\n```\r\n\r\nNOTE: it is fairly unlikely to get into this state in practice (data node has to disconnect from master at just the right time during the first snapshot of a multi-shard index) and it cannot cause any data loss so the impact of this bug should be very low. It affects all versions 7.6 and newer and so far we only had a single report of it. \r\nThe workaround is to delete all snapshot(s) that reference the so broken index in the repository to remove the broken shard directory.\r\n","closed_by":{"login":"original-brownbear","id":6490959,"node_id":"MDQ6VXNlcjY0OTA5NTk=","avatar_url":"https://avatars0.githubusercontent.com/u/6490959?v=4","gravatar_id":"","url":"https://api.github.com/users/original-brownbear","html_url":"https://github.com/original-brownbear","followers_url":"https://api.github.com/users/original-brownbear/followers","following_url":"https://api.github.com/users/original-brownbear/following{/other_user}","gists_url":"https://api.github.com/users/original-brownbear/gists{/gist_id}","starred_url":"https://api.github.com/users/original-brownbear/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/original-brownbear/subscriptions","organizations_url":"https://api.github.com/users/original-brownbear/orgs","repos_url":"https://api.github.com/users/original-brownbear/repos","events_url":"https://api.github.com/users/original-brownbear/events{/privacy}","received_events_url":"https://api.github.com/users/original-brownbear/received_events","type":"User","site_admin":false},"performed_via_github_app":null}