{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/18962","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18962/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18962/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/18962/events","html_url":"https://github.com/elastic/elasticsearch/issues/18962","id":161086254,"node_id":"MDU6SXNzdWUxNjEwODYyNTQ=","number":18962,"title":"NullPointerException when indexing in embedded node","user":{"login":"fhopf","id":470589,"node_id":"MDQ6VXNlcjQ3MDU4OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/470589?v=4","gravatar_id":"","url":"https://api.github.com/users/fhopf","html_url":"https://github.com/fhopf","followers_url":"https://api.github.com/users/fhopf/followers","following_url":"https://api.github.com/users/fhopf/following{/other_user}","gists_url":"https://api.github.com/users/fhopf/gists{/gist_id}","starred_url":"https://api.github.com/users/fhopf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fhopf/subscriptions","organizations_url":"https://api.github.com/users/fhopf/orgs","repos_url":"https://api.github.com/users/fhopf/repos","events_url":"https://api.github.com/users/fhopf/events{/privacy}","received_events_url":"https://api.github.com/users/fhopf/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-06-19T18:50:06Z","updated_at":"2016-06-19T22:39:57Z","closed_at":"2016-06-19T22:39:57Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Elasticsearch version**: 2.3.3/5.0.0-alpha3\n\n**JVM version**: 1.8.0_91\n\n**OS version**: Linux\n\n**Description of the problem including expected versus actual behavior**: When creating a new embedded Node (in my case for Testing) I constantly forget to start the Node. This will lead to a NullPointerException in TransportMasterNodeAction because no DiscoveryNode can be found.\nIt would be nice if there is a more descriptive error message hinting at starting the node.\n\n**Steps to reproduce**:\n\n```\n    public void testNullPointerException() {\n        String tmpDirPath = System.getProperty(\"java.io.tmpdir\");\n        File elasticsearchHome = new File(tmpDirPath, \"foo\");\n        elasticsearchHome.mkdir();\n        Settings.Builder settingsBuilder = Settings.builder().put(\"path.home\", elasticsearchHome.getAbsolutePath()).put(\"cluster.name\", \"clustername\");\n        Node elasticsearchNode = new Node(settingsBuilder.build());\n        Client elasticsearchClient = elasticsearchNode.client();\n        IndexResponse response = elasticsearchClient.prepareIndex(\"foo\", \"doc\").setSource(\"foo\", \"bar\").execute().actionGet();\n\n    }\n```\n\n**Provide logs (if relevant)**:\n\n```\njava.lang.NullPointerException\n    at __randomizedtesting.SeedInfo.seed([8BE59430520DB61D:7DFC028A35C0343E]:0)\n    at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.<init>(TransportMasterNodeAction.java:124)\n    at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:102)\n    at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:52)\n    at org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:178)\n    at org.elasticsearch.action.ingest.IngestActionFilter.apply(IngestActionFilter.java:80)\n    at org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:176)\n    at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:149)\n    at org.elasticsearch.action.index.TransportIndexAction.doExecute(TransportIndexAction.java:97)\n    at org.elasticsearch.action.index.TransportIndexAction.doExecute(TransportIndexAction.java:63)\n    at org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:178)\n    at org.elasticsearch.action.ingest.IngestActionFilter.apply(IngestActionFilter.java:66)\n    at org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:176)\n    at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:149)\n    at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:87)\n    at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:64)\n    at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:407)\n    at org.elasticsearch.action.ActionRequestBuilder.execute(ActionRequestBuilder.java:80)\n    at org.elasticsearch.action.ActionRequestBuilder.execute(ActionRequestBuilder.java:54)\n```\n","closed_by":{"login":"fhopf","id":470589,"node_id":"MDQ6VXNlcjQ3MDU4OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/470589?v=4","gravatar_id":"","url":"https://api.github.com/users/fhopf","html_url":"https://github.com/fhopf","followers_url":"https://api.github.com/users/fhopf/followers","following_url":"https://api.github.com/users/fhopf/following{/other_user}","gists_url":"https://api.github.com/users/fhopf/gists{/gist_id}","starred_url":"https://api.github.com/users/fhopf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fhopf/subscriptions","organizations_url":"https://api.github.com/users/fhopf/orgs","repos_url":"https://api.github.com/users/fhopf/repos","events_url":"https://api.github.com/users/fhopf/events{/privacy}","received_events_url":"https://api.github.com/users/fhopf/received_events","type":"User","site_admin":false},"performed_via_github_app":null}