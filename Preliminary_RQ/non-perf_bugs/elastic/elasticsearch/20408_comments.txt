[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/246266737","html_url":"https://github.com/elastic/elasticsearch/issues/20408#issuecomment-246266737","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20408","id":246266737,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NjI2NjczNw==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T07:15:24Z","updated_at":"2016-09-12T07:15:24Z","author_association":"MEMBER","body":"This looks very similar to #20093\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/246286081","html_url":"https://github.com/elastic/elasticsearch/issues/20408#issuecomment-246286081","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20408","id":246286081,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NjI4NjA4MQ==","user":{"login":"marfago","id":1191501,"node_id":"MDQ6VXNlcjExOTE1MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/1191501?v=4","gravatar_id":"","url":"https://api.github.com/users/marfago","html_url":"https://github.com/marfago","followers_url":"https://api.github.com/users/marfago/followers","following_url":"https://api.github.com/users/marfago/following{/other_user}","gists_url":"https://api.github.com/users/marfago/gists{/gist_id}","starred_url":"https://api.github.com/users/marfago/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marfago/subscriptions","organizations_url":"https://api.github.com/users/marfago/orgs","repos_url":"https://api.github.com/users/marfago/repos","events_url":"https://api.github.com/users/marfago/events{/privacy}","received_events_url":"https://api.github.com/users/marfago/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T08:50:07Z","updated_at":"2016-09-12T08:50:07Z","author_association":"NONE","body":"Yes I agree.  It affects v2.4 too. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/246296027","html_url":"https://github.com/elastic/elasticsearch/issues/20408#issuecomment-246296027","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20408","id":246296027,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NjI5NjAyNw==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T09:32:19Z","updated_at":"2016-09-12T09:32:19Z","author_association":"MEMBER","body":"thanks for pointing this out. Fixed by #20093 . Fix will be part of the next 5.0 release. 5.0.0-alpha5 is still affected. \n\nThe problem manifested only when _source was asked for explicitly. I am not too happy with not returning any error and simply skipping the _source part of the request, I would have rather thrown an error there. Thoughts?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/246299199","html_url":"https://github.com/elastic/elasticsearch/issues/20408#issuecomment-246299199","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20408","id":246299199,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NjI5OTE5OQ==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T09:45:52Z","updated_at":"2016-09-12T09:45:52Z","author_association":"MEMBER","body":"> The problem manifested only when _source was asked for explicitly. I am not too happy with not returning any error and simply skipping the _source part of the request, I would have rather thrown an error there. Thoughts?\n\nI hate to say that but I think it should be configurable on a per request basis? When querying multiple indices you might want to return `foo` for some docs and `bar` for other docs while searching on a third field. And sometimes you query well defined indices and a missing source field must just throw an error in that case.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/246303096","html_url":"https://github.com/elastic/elasticsearch/issues/20408#issuecomment-246303096","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20408","id":246303096,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NjMwMzA5Ng==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T10:02:11Z","updated_at":"2016-09-12T10:02:11Z","author_association":"MEMBER","body":"@tlrx what should be configurable? The behaviour? Either throw an error or skip without barfing? I am afraid I don't follow why skipping some part of the request that cannot be performed would help. You are going to run into problems when reading the response anyway as some part will be missing.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/246306397","html_url":"https://github.com/elastic/elasticsearch/issues/20408#issuecomment-246306397","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20408","id":246306397,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NjMwNjM5Nw==","user":{"login":"marfago","id":1191501,"node_id":"MDQ6VXNlcjExOTE1MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/1191501?v=4","gravatar_id":"","url":"https://api.github.com/users/marfago","html_url":"https://github.com/marfago","followers_url":"https://api.github.com/users/marfago/followers","following_url":"https://api.github.com/users/marfago/following{/other_user}","gists_url":"https://api.github.com/users/marfago/gists{/gist_id}","starred_url":"https://api.github.com/users/marfago/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marfago/subscriptions","organizations_url":"https://api.github.com/users/marfago/orgs","repos_url":"https://api.github.com/users/marfago/repos","events_url":"https://api.github.com/users/marfago/events{/privacy}","received_events_url":"https://api.github.com/users/marfago/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T10:17:55Z","updated_at":"2016-09-12T10:17:55Z","author_association":"NONE","body":"In my case, _source is disabled but some fields are still stored. So it is definitely still possible to retrieve some fields event though _source is disabled.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/246307156","html_url":"https://github.com/elastic/elasticsearch/issues/20408#issuecomment-246307156","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20408","id":246307156,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NjMwNzE1Ng==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T10:21:43Z","updated_at":"2016-09-12T10:21:43Z","author_association":"MEMBER","body":"@marfago then you should use `fields` rather than `_source`. `_source` will always try to extract fields out of the source field and will return only those rather than the whole source. Fields will instead get the stored fields from lucene directly. Not sure whether the spark integration supports any of this.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/246320581","html_url":"https://github.com/elastic/elasticsearch/issues/20408#issuecomment-246320581","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20408","id":246320581,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NjMyMDU4MQ==","user":{"login":"marfago","id":1191501,"node_id":"MDQ6VXNlcjExOTE1MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/1191501?v=4","gravatar_id":"","url":"https://api.github.com/users/marfago","html_url":"https://github.com/marfago","followers_url":"https://api.github.com/users/marfago/followers","following_url":"https://api.github.com/users/marfago/following{/other_user}","gists_url":"https://api.github.com/users/marfago/gists{/gist_id}","starred_url":"https://api.github.com/users/marfago/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marfago/subscriptions","organizations_url":"https://api.github.com/users/marfago/orgs","repos_url":"https://api.github.com/users/marfago/repos","events_url":"https://api.github.com/users/marfago/events{/privacy}","received_events_url":"https://api.github.com/users/marfago/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T11:31:41Z","updated_at":"2016-09-12T11:31:52Z","author_association":"NONE","body":"@javanna thank you for the clarification. \nWhat if:\n1)keep as default the current behaviour, just handling/wrapping the NPE with a more meaningful message/exception \n2)introduce a boolean query parameter (a sort of ignore_disabled_source) in order to change behaviour and silently ignore indexes with disabled _source\n3)open a new issue in elasticsearch-spark for handling the \"fields\" parameter.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/246327561","html_url":"https://github.com/elastic/elasticsearch/issues/20408#issuecomment-246327561","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20408","id":246327561,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NjMyNzU2MQ==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T12:07:20Z","updated_at":"2016-09-12T12:07:20Z","author_association":"MEMBER","body":"> 1)keep as default the current behaviour, just handling/wrapping the NPE with a more meaningful message/exception \n\nthe current behaviour after the fix is \"ignore the _source parameter if _source is disabled\", I don't like that\n\n> 2)introduce a boolean query parameter (a sort of ignore_disabled_source) in order to change behaviour and silently ignore indexes with disabled _source\n\nI tend to be against this, I don't think it is worth adding yet another request parameter for such an edge case, in the spirit of #11172.\n\n> 3)open a new issue in elasticsearch-spark for handling the \"fields\" parameter.\n\nthanks for doing that ;)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/246330528","html_url":"https://github.com/elastic/elasticsearch/issues/20408#issuecomment-246330528","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20408","id":246330528,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NjMzMDUyOA==","user":{"login":"tlrx","id":642733,"node_id":"MDQ6VXNlcjY0MjczMw==","avatar_url":"https://avatars1.githubusercontent.com/u/642733?v=4","gravatar_id":"","url":"https://api.github.com/users/tlrx","html_url":"https://github.com/tlrx","followers_url":"https://api.github.com/users/tlrx/followers","following_url":"https://api.github.com/users/tlrx/following{/other_user}","gists_url":"https://api.github.com/users/tlrx/gists{/gist_id}","starred_url":"https://api.github.com/users/tlrx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlrx/subscriptions","organizations_url":"https://api.github.com/users/tlrx/orgs","repos_url":"https://api.github.com/users/tlrx/repos","events_url":"https://api.github.com/users/tlrx/events{/privacy}","received_events_url":"https://api.github.com/users/tlrx/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T12:21:42Z","updated_at":"2016-09-12T12:21:42Z","author_association":"MEMBER","body":"> I tend to be against this, I don't think it is worth adding yet another request parameter for such an edge case, in the spirit of #11172.\n\nThis is a very good point @javanna and the rationale behind #11172 is good too. I agree we should throw an error here but I'd like to be sure how we handle similar case with `fields` or `stored_fields`.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/246330833","html_url":"https://github.com/elastic/elasticsearch/issues/20408#issuecomment-246330833","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20408","id":246330833,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NjMzMDgzMw==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T12:23:04Z","updated_at":"2016-09-12T12:23:04Z","author_association":"MEMBER","body":"thanks Tanguy, maybe @clintongormley has some opinion too on this\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/246339325","html_url":"https://github.com/elastic/elasticsearch/issues/20408#issuecomment-246339325","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20408","id":246339325,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NjMzOTMyNQ==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T12:59:42Z","updated_at":"2016-09-12T12:59:42Z","author_association":"CONTRIBUTOR","body":"++ to what @javanna said. If you disable source and you use a feature that needs it you fail. Hard!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/246372858","html_url":"https://github.com/elastic/elasticsearch/issues/20408#issuecomment-246372858","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20408","id":246372858,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NjM3Mjg1OA==","user":{"login":"marfago","id":1191501,"node_id":"MDQ6VXNlcjExOTE1MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/1191501?v=4","gravatar_id":"","url":"https://api.github.com/users/marfago","html_url":"https://github.com/marfago","followers_url":"https://api.github.com/users/marfago/followers","following_url":"https://api.github.com/users/marfago/following{/other_user}","gists_url":"https://api.github.com/users/marfago/gists{/gist_id}","starred_url":"https://api.github.com/users/marfago/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marfago/subscriptions","organizations_url":"https://api.github.com/users/marfago/orgs","repos_url":"https://api.github.com/users/marfago/repos","events_url":"https://api.github.com/users/marfago/events{/privacy}","received_events_url":"https://api.github.com/users/marfago/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T14:51:09Z","updated_at":"2016-09-12T14:51:09Z","author_association":"NONE","body":"@javanna and @s1monw In my use case (see the description), the first query succeeds returning an apparently valid scrollId, then the second query fails because the _source is disabled. \nI think it should fail earlier, preventing the scrollId to be created.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/246377046","html_url":"https://github.com/elastic/elasticsearch/issues/20408#issuecomment-246377046","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20408","id":246377046,"node_id":"MDEyOklzc3VlQ29tbWVudDI0NjM3NzA0Ng==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T15:03:15Z","updated_at":"2016-09-12T15:03:15Z","author_association":"MEMBER","body":"I see what you mean @marfago , I am afraid what you request is not that easy to achieve on our end, but I will check whether we already have some validation mechanism in place that we can leverage. The problem is that we throw the error once we try and fetch fields from the source, which is part of the fetch phase. The first phase of search, query, works without any issue. Once the top hits need to be fetched, the problem arises. That is why the first scroll request succeeds in your case, cause there is no fetch phase as part of that first step.\n","performed_via_github_app":null}]