[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/390845987","html_url":"https://github.com/elastic/elasticsearch/issues/30768#issuecomment-390845987","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30768","id":390845987,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MDg0NTk4Nw==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2018-05-22T02:49:02Z","updated_at":"2018-05-22T02:49:02Z","author_association":"MEMBER","body":"I would prefer that we stop adding these APIs that allow GET on a comma-separated list of resources. The problem that I have with them is that it complicates the API:\r\n - what status do we return if some but not all of the tasks are missing?\r\n - what status do we return if some but not all of the tasks cause an internal server error?\r\n - what status do we return if some of the tasks are present, some are missing, and some cause an internal server error?\r\n\r\nI have my take on this, but we have endlessly debated questions like this before and I don't think anyone is satisfied with the answers. I especially think that clients are unhappy no matter what we choose. Regardless of how we answer them, it also means that we have to have complicated responses to accommodate for these partial failure scenarios with a response body to account for errors and the details of such, and response for the tasks that exist. We end up with a ball of complicated code and a complicated API for a little convenience all to save multiple roundtrips. To me that tradeoff is not worth it and I would like us to go in the direction of simplicity here.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/390846022","html_url":"https://github.com/elastic/elasticsearch/issues/30768#issuecomment-390846022","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30768","id":390846022,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MDg0NjAyMg==","user":{"login":"elasticmachine","id":15837671,"node_id":"MDQ6VXNlcjE1ODM3Njcx","avatar_url":"https://avatars3.githubusercontent.com/u/15837671?v=4","gravatar_id":"","url":"https://api.github.com/users/elasticmachine","html_url":"https://github.com/elasticmachine","followers_url":"https://api.github.com/users/elasticmachine/followers","following_url":"https://api.github.com/users/elasticmachine/following{/other_user}","gists_url":"https://api.github.com/users/elasticmachine/gists{/gist_id}","starred_url":"https://api.github.com/users/elasticmachine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elasticmachine/subscriptions","organizations_url":"https://api.github.com/users/elasticmachine/orgs","repos_url":"https://api.github.com/users/elasticmachine/repos","events_url":"https://api.github.com/users/elasticmachine/events{/privacy}","received_events_url":"https://api.github.com/users/elasticmachine/received_events","type":"User","site_admin":false},"created_at":"2018-05-22T02:49:14Z","updated_at":"2018-05-22T02:49:14Z","author_association":"COLLABORATOR","body":"Pinging @elastic/es-distributed","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/390899367","html_url":"https://github.com/elastic/elasticsearch/issues/30768#issuecomment-390899367","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30768","id":390899367,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MDg5OTM2Nw==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2018-05-22T08:02:03Z","updated_at":"2018-05-22T08:02:03Z","author_association":"MEMBER","body":"Another complication here is that that specific API is currently geared towards a single task. If we want to return multiple tasks, we'll need to change the response format to be keyed by task id, which also means a BWC break. Not sure if it's worth it here. \r\n\r\n@joshuar can you share more about what you're building? it sounds like you'd need a kind of pagination on the `_tasks` API?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/391223221","html_url":"https://github.com/elastic/elasticsearch/issues/30768#issuecomment-391223221","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30768","id":391223221,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MTIyMzIyMQ==","user":{"login":"joshuar","id":7401,"node_id":"MDQ6VXNlcjc0MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/7401?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuar","html_url":"https://github.com/joshuar","followers_url":"https://api.github.com/users/joshuar/followers","following_url":"https://api.github.com/users/joshuar/following{/other_user}","gists_url":"https://api.github.com/users/joshuar/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuar/subscriptions","organizations_url":"https://api.github.com/users/joshuar/orgs","repos_url":"https://api.github.com/users/joshuar/repos","events_url":"https://api.github.com/users/joshuar/events{/privacy}","received_events_url":"https://api.github.com/users/joshuar/received_events","type":"User","site_admin":false},"created_at":"2018-05-23T05:17:39Z","updated_at":"2018-05-23T05:17:39Z","author_association":"MEMBER","body":"I was mainly just trying to avoid an expensive call to this API by specifying `detailed`.  My interpretation of the docs is that this could make the call expensive.\r\n\r\nMy main goal was a Watch that checked this API and reported on any long running tasks, where a task was running for longer than a given threshold.  For example for checking on long running searches I was intending on:\r\n\r\n1. Hitting `GET /_tasks?actions=*search`\r\n2. Filtering out any which are below the threshold based on running time.\r\n3. Hit `GET /_tasks/<taskid>?detailed` where `<taskid>` was a list of tasks.\r\n4. Act on the detailed task info.\r\n\r\nDoing this on a regular interval, I wanted to minimise getting detailed task information.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/391846682","html_url":"https://github.com/elastic/elasticsearch/issues/30768#issuecomment-391846682","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30768","id":391846682,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MTg0NjY4Mg==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2018-05-24T20:21:16Z","updated_at":"2018-05-24T20:21:16Z","author_association":"MEMBER","body":"@joshuar we recently added an ability to mark task groups using [X-Opaque-Id](https://www.elastic.co/guide/en/elasticsearch/reference/6.2/tasks.html#_identifying_running_tasks) header.  We don't have an ability to filter by this header yet, but if we implemented that, would it work better for you? What problem are you trying to solve by this feature?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/391907949","html_url":"https://github.com/elastic/elasticsearch/issues/30768#issuecomment-391907949","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30768","id":391907949,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MTkwNzk0OQ==","user":{"login":"joshuar","id":7401,"node_id":"MDQ6VXNlcjc0MDE=","avatar_url":"https://avatars3.githubusercontent.com/u/7401?v=4","gravatar_id":"","url":"https://api.github.com/users/joshuar","html_url":"https://github.com/joshuar","followers_url":"https://api.github.com/users/joshuar/followers","following_url":"https://api.github.com/users/joshuar/following{/other_user}","gists_url":"https://api.github.com/users/joshuar/gists{/gist_id}","starred_url":"https://api.github.com/users/joshuar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshuar/subscriptions","organizations_url":"https://api.github.com/users/joshuar/orgs","repos_url":"https://api.github.com/users/joshuar/repos","events_url":"https://api.github.com/users/joshuar/events{/privacy}","received_events_url":"https://api.github.com/users/joshuar/received_events","type":"User","site_admin":false},"created_at":"2018-05-25T00:44:35Z","updated_at":"2018-05-25T00:44:35Z","author_association":"MEMBER","body":"Oh nice @imotov. Filtering by that would be ideal.  \r\n\r\nI was mainly just trying to follow what I interpreted as best practice for this API, which is to avoid using  `detailed` where the number of tasks returned might be very large.  Do we know how use of this parameter scales with regards to affecting performance?  For example, doing `GET /_tasks?actions=*search&detailed` where there might be 100 executing searches?  1000 searches?\r\n\r\nSide note: we could/should update our best practices to recommend setting this header on requests?  Seems extremely useful?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/392063089","html_url":"https://github.com/elastic/elasticsearch/issues/30768#issuecomment-392063089","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30768","id":392063089,"node_id":"MDEyOklzc3VlQ29tbWVudDM5MjA2MzA4OQ==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2018-05-25T13:47:28Z","updated_at":"2018-05-25T13:47:28Z","author_association":"MEMBER","body":"@joshuar I opened #30868. For some reason I thought it was already implemented, but it looks like I never got to it after all. Should we close this issue in favor of #30868?","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/395549622","html_url":"https://github.com/elastic/elasticsearch/issues/30768#issuecomment-395549622","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/30768","id":395549622,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NTU0OTYyMg==","user":{"login":"imotov","id":655851,"node_id":"MDQ6VXNlcjY1NTg1MQ==","avatar_url":"https://avatars3.githubusercontent.com/u/655851?v=4","gravatar_id":"","url":"https://api.github.com/users/imotov","html_url":"https://github.com/imotov","followers_url":"https://api.github.com/users/imotov/followers","following_url":"https://api.github.com/users/imotov/following{/other_user}","gists_url":"https://api.github.com/users/imotov/gists{/gist_id}","starred_url":"https://api.github.com/users/imotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imotov/subscriptions","organizations_url":"https://api.github.com/users/imotov/orgs","repos_url":"https://api.github.com/users/imotov/repos","events_url":"https://api.github.com/users/imotov/events{/privacy}","received_events_url":"https://api.github.com/users/imotov/received_events","type":"User","site_admin":false},"created_at":"2018-06-07T20:12:16Z","updated_at":"2018-06-07T20:12:16Z","author_association":"MEMBER","body":"Closing in favor of #30868 ","performed_via_github_app":null}]