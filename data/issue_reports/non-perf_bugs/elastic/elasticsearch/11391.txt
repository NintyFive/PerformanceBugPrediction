{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/11391","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11391/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11391/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11391/events","html_url":"https://github.com/elastic/elasticsearch/issues/11391","id":81900389,"node_id":"MDU6SXNzdWU4MTkwMDM4OQ==","number":11391,"title":"REST Test blacklist should not use PathMatcher","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"labels":[{"id":60445228,"node_id":"MDU6TGFiZWw2MDQ0NTIyOA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Etest","name":">test","color":"5319e7","default":false,"description":"Issues or PRs that are addressing/adding tests"},{"id":92913858,"node_id":"MDU6TGFiZWw5MjkxMzg1OA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/good%20first%20issue","name":"good first issue","color":"07569b","default":true,"description":"low hanging fruit"},{"id":266898191,"node_id":"MDU6TGFiZWwyNjY4OTgxOTE=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v2.2.0","name":"v2.2.0","color":"dddddd","default":false,"description":null},{"id":246685314,"node_id":"MDU6TGFiZWwyNDY2ODUzMTQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/v5.0.0-alpha1","name":"v5.0.0-alpha1","color":"dddddd","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-05-28T12:10:44Z","updated_at":"2015-11-21T09:32:41Z","closed_at":"2015-11-19T14:30:28Z","author_association":"MEMBER","active_lock_reason":null,"body":"Currently we use `PathMatcher` to perform matching on REST test names against a blacklist. This is an abuse of the the `PathMatcher` class since it is intended to be used with a `Path`, which is intended for file based operations as the javadocs state:\n\n> An object that may be used to locate a file in a file system.\n\nWhile it may work right now, there are always special cases at play like #11389, which makes this brittle. We should think about another way to do the matching for blacklists. At the same time, there is another issue which is that we specify the blacklist as a comma separated list, but we also have tests with a comma in their name so this is problematic. A workaround exists, which is to use a glob pattern but this can blacklist more tests than necessary.\n","closed_by":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"performed_via_github_app":null}