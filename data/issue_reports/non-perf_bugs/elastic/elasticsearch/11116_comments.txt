[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/101278692","html_url":"https://github.com/elastic/elasticsearch/issues/11116#issuecomment-101278692","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11116","id":101278692,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMTI3ODY5Mg==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-05-12T13:30:55Z","updated_at":"2015-05-12T13:36:21Z","author_association":"CONTRIBUTOR","body":"I like the discussion here, thank for raising it.\n\nIn general I still think that it should up to the user if he wants to disable the _source field of filter it. The problem with this was just because there was a lot of documentation around that suggested to do this (same wrong suggestions like those tons of blog posts telling Apache Solr users to commit and optimize the whole index after each document insert...).\n\n_I would suggest to still allow to disable or filter the_source field, but then atomatically all those services like document update API or reindexing just throw UnsupportedOperationException._\n\nI am perfectly fine with that. I don't rely on Elasticsearch as a primary data store. I just index all documents and can reindex the stuff without the need for _source documents. I just need to store the search result snippet - and I am fine. This is why I want to filter _source. This is just the classical use-case for lucene: Index large documents and store just the snippet in the index. This is the classical full text search engine use-case. If this one is no longer supported, sorry: Elasticsearch is no longer an option for this type of stuff.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/101279748","html_url":"https://github.com/elastic/elasticsearch/issues/11116#issuecomment-101279748","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11116","id":101279748,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMTI3OTc0OA==","user":{"login":"HonzaKral","id":32132,"node_id":"MDQ6VXNlcjMyMTMy","avatar_url":"https://avatars0.githubusercontent.com/u/32132?v=4","gravatar_id":"","url":"https://api.github.com/users/HonzaKral","html_url":"https://github.com/HonzaKral","followers_url":"https://api.github.com/users/HonzaKral/followers","following_url":"https://api.github.com/users/HonzaKral/following{/other_user}","gists_url":"https://api.github.com/users/HonzaKral/gists{/gist_id}","starred_url":"https://api.github.com/users/HonzaKral/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HonzaKral/subscriptions","organizations_url":"https://api.github.com/users/HonzaKral/orgs","repos_url":"https://api.github.com/users/HonzaKral/repos","events_url":"https://api.github.com/users/HonzaKral/events{/privacy}","received_events_url":"https://api.github.com/users/HonzaKral/received_events","type":"User","site_admin":false},"created_at":"2015-05-12T13:34:01Z","updated_at":"2015-05-12T13:34:01Z","author_association":"MEMBER","body":"I generally don't like the \"protect users from doing the wrong thing\" approach. To me these issues should be solved by documentation, but should not limit the options users have unless usage of these provide security/stability issues (like `minimum_master_nodes`).\n\nTo change `_source.enabled` into an index settings we take away a lot of flexibility - for example we cannot have parent/child documents with different settings (since those have to be in the same index) or generally have different types with different settings in the same index - something that is very useful in many cases (think users, blog posts and comments where index ).\n\nSame goes for `_source` filtering - it can be very useful if we have, for example, a large text that we wish to search but not display/highlight. It decreases the space taken on disk and the speed of the search itself (no need to retrieve, parse and discard this blob). Imagine a use case of people indexing documents (as in word/pdf/... a fairly common use case) - they might want to store the metadata in ES, but there is no need to store the text extracted from some binary file. If such document were to be reindexed, it would most likely be from the binary source again.\n\nI understand _some_ of the complications and the desire to limit code paths. My compromise suggestion would be to always keep `_source`, but allow for the index-time filtering essentially allowing people to say: `\"_source\": {\"exclude\": \"*\"}`. It can be clearly documented as to its effects (\"no reindex, update, highlighting\" in bold, friendly letters) and should still allow us to remove a bunch of functionality while keeping the flexibility people like about elasticsearch.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/101282247","html_url":"https://github.com/elastic/elasticsearch/issues/11116#issuecomment-101282247","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11116","id":101282247,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMTI4MjI0Nw==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-05-12T13:38:26Z","updated_at":"2015-05-12T13:38:26Z","author_association":"CONTRIBUTOR","body":"> I would suggest to still allow to disable or filter the_source field, but then atomatically all those services like document update API or reindexing just throw UnsupportedOperationException.\n\nThis should be possible to implement quite easily by a simple check on the mapping like: if (mapping.isSourceDisabled() || mapping.isSourceFiltered()) throw new UnsupportedOperationException(...)\n\nThis is in my opinion the easiest to do. And of course in the documentation clearly state that those options disable all those services that rely on full _source field availability.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/101297931","html_url":"https://github.com/elastic/elasticsearch/issues/11116#issuecomment-101297931","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11116","id":101297931,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMTI5NzkzMQ==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2015-05-12T14:17:09Z","updated_at":"2015-05-12T14:17:09Z","author_association":"CONTRIBUTOR","body":"> Reading a large _source is slow and unnecessary\n\nWe haven't hit this, btw. We do 130 million prefix searches a day (edge ngram query, not completion suggester) that just return a handful of small fields. We load them from _source without trouble. I tried it with stored fields a year ago and didn't see any improvement. I'm sure there is a breaking point, but its a couple of times bigger than the average size of wikipedia pages. My instinct is once you start talking about single digit MB size fields.\n\nIt'd be nice to those large fields out of the working set but that's a harder thing to measure.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/101316429","html_url":"https://github.com/elastic/elasticsearch/issues/11116#issuecomment-101316429","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11116","id":101316429,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMTMxNjQyOQ==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-05-12T15:12:43Z","updated_at":"2015-05-12T15:12:43Z","author_association":"CONTRIBUTOR","body":"In the PDF case this is often the issue. I have some documents with like 80 MiB of text (I know this is a problem completely), but we just have them there to allow actually finding them, but the score of those hits is quite small (forcefully boosted down). I would never ever load those fields from source, so it is for sure an issue to store this completely useless information. As a user I want to have the power to prevent them to go as plain text into a field, sorry. I am using Elasticsearch not as a database or data store, just as a search engine. PERIOD.\n\nAs said on the other issue: One important thing is to store the _source field as CBOR instead of JSON, this improved a lot if you are scanning the whole index.\n\nThe other issue: I just don't want to exhaust my I/O cache just because I load 80 MiB of data for nonsense, just to display the title of a document.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/101318516","html_url":"https://github.com/elastic/elasticsearch/issues/11116#issuecomment-101318516","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11116","id":101318516,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMTMxODUxNg==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2015-05-12T15:19:45Z","updated_at":"2015-05-12T15:19:45Z","author_association":"CONTRIBUTOR","body":"> The other issue: I just don't want to exhaust my I/O cache just because I load 80 MiB of data for nonsense, just to display the title of a document.\n\n80mb will do that, yeah.\n\nIn #9034 @jpountz describes smooshing the _source into multiple stored fields so you only load what you need. Its still pretty useless dropping the 80mb document onto the disk but at least in the you don't blow out the cache. That feels like it'd be good enough for me.\n\nI like simplicity of that proposal because it feels like you really could hide stored fields behind a _source abstraction.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/101320891","html_url":"https://github.com/elastic/elasticsearch/issues/11116#issuecomment-101320891","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11116","id":101320891,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMTMyMDg5MQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-05-12T15:29:22Z","updated_at":"2015-05-12T15:31:42Z","author_association":"CONTRIBUTOR","body":"For 2.0, we're going to:\n- add back the ability to disable storing source\n- add back the `includes` and `excludes` parameters\n- allow these settings to be set per-type\n- only allow these settings to be set when creating a type (currently they are dynamically updatable)\n- if `enabled` is false, or `includes/excludes` is set, throw an unsupported exception when trying to use features which require source.\n- add better documentation so that the user understands the cost of disabling source\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/101322979","html_url":"https://github.com/elastic/elasticsearch/issues/11116#issuecomment-101322979","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11116","id":101322979,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMTMyMjk3OQ==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-05-12T15:37:26Z","updated_at":"2015-05-12T15:37:26Z","author_association":"CONTRIBUTOR","body":"I agree with @HonzaKral because I also hate the \"protect users from doing the wrong thing\" approach. Documentation is the right approach. And failing early! If I disable or filter my source field because I don't ever want to load the data or reindex my stuff its my own decision.\n\nIt is just important to:\n- document this\n- throw UnsupportedOperationException if you try to do something that requires full _source.  It was indeed bad to silently do the wrong thing. Just be clear and fail early if you try to use the update document or reindexing API or whatever API. If you do this, developers will get error and will think 2 times before they disable or filter the _source field. But those who really want to do this still have the possibility.\n\nThere is nothing more from my side. I just want to have this simple possibility to decide on my own and have the full flexibility. The code is self-contained and was not even removed in the \"disable source filtering\" patch (#10814). The whole source filtering code is still there!!! It was just \"forbidden\" to use. The only actual code change next to cleanups was a single if-statement that disallowed to use of \"include/exclude\" in the mapping. I want this one to be reverted.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/101323284","html_url":"https://github.com/elastic/elasticsearch/issues/11116#issuecomment-101323284","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11116","id":101323284,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMTMyMzI4NA==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-05-12T15:38:03Z","updated_at":"2015-05-12T15:38:03Z","author_association":"CONTRIBUTOR","body":"@clintongormley looks like a nice proposal!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/101330188","html_url":"https://github.com/elastic/elasticsearch/issues/11116#issuecomment-101330188","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11116","id":101330188,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMTMzMDE4OA==","user":{"login":"karmi","id":4790,"node_id":"MDQ6VXNlcjQ3OTA=","avatar_url":"https://avatars1.githubusercontent.com/u/4790?v=4","gravatar_id":"","url":"https://api.github.com/users/karmi","html_url":"https://github.com/karmi","followers_url":"https://api.github.com/users/karmi/followers","following_url":"https://api.github.com/users/karmi/following{/other_user}","gists_url":"https://api.github.com/users/karmi/gists{/gist_id}","starred_url":"https://api.github.com/users/karmi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karmi/subscriptions","organizations_url":"https://api.github.com/users/karmi/orgs","repos_url":"https://api.github.com/users/karmi/repos","events_url":"https://api.github.com/users/karmi/events{/privacy}","received_events_url":"https://api.github.com/users/karmi/received_events","type":"User","site_admin":false},"created_at":"2015-05-12T15:58:02Z","updated_at":"2015-05-12T15:58:02Z","author_association":"CONTRIBUTOR","body":"> Doing this in the mapping was too convenient, so users who didn't understand the consequences used the option and ended up suffering for it.\n\nI agree with @HonzaKral that issues like that should be solved by documentation and instructions, not by the implementation. \n\nHowever, if there's a general consensus to move this configuration from index mappings to settings, I'm OK with that. Let's just keep the configuration _option_ available to users.\n\n(Regarding filtering `_source`, the `_response_source` approach is something which doesn't feel right to me... The second option is better.)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/132284802","html_url":"https://github.com/elastic/elasticsearch/issues/11116#issuecomment-132284802","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11116","id":132284802,"node_id":"MDEyOklzc3VlQ29tbWVudDEzMjI4NDgwMg==","user":{"login":"blakeparker","id":12952904,"node_id":"MDQ6VXNlcjEyOTUyOTA0","avatar_url":"https://avatars1.githubusercontent.com/u/12952904?v=4","gravatar_id":"","url":"https://api.github.com/users/blakeparker","html_url":"https://github.com/blakeparker","followers_url":"https://api.github.com/users/blakeparker/followers","following_url":"https://api.github.com/users/blakeparker/following{/other_user}","gists_url":"https://api.github.com/users/blakeparker/gists{/gist_id}","starred_url":"https://api.github.com/users/blakeparker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blakeparker/subscriptions","organizations_url":"https://api.github.com/users/blakeparker/orgs","repos_url":"https://api.github.com/users/blakeparker/repos","events_url":"https://api.github.com/users/blakeparker/events{/privacy}","received_events_url":"https://api.github.com/users/blakeparker/received_events","type":"User","site_admin":false},"created_at":"2015-08-18T17:18:12Z","updated_at":"2015-08-18T17:18:12Z","author_association":"NONE","body":"It would be very helpful to also add back the ability to disable compression as well.  We have our ES nodes virtualized and stored on a Pure Storage array that does inline dedup and compression, however the ES compression completely breaks its dedup features.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/132508957","html_url":"https://github.com/elastic/elasticsearch/issues/11116#issuecomment-132508957","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11116","id":132508957,"node_id":"MDEyOklzc3VlQ29tbWVudDEzMjUwODk1Nw==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-08-19T09:32:58Z","updated_at":"2015-08-19T09:32:58Z","author_association":"CONTRIBUTOR","body":"The ability to disable compression won't come back. By the way it only applied to a part of the index (stored fields and term vectors), while it has never been possible to disable compression on the terms dictionary, postings, position data, doc values, etc. According to the documentation, PureStorage does deduplication of blocks of 512 bytes and uses LZO for compression so I don't think that disabling compression in elasticsearch would bring any significant gains on realistic data when running on PureStorage.\n","performed_via_github_app":null}]