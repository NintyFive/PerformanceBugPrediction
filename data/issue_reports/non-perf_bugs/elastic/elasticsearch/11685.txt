{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/11685","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11685/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11685/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11685/events","html_url":"https://github.com/elastic/elasticsearch/issues/11685","id":88548269,"node_id":"MDU6SXNzdWU4ODU0ODI2OQ==","number":11685,"title":"Bulk \"create\" via Java API (1.4.2) doesn't error on duplicate docs but does return negative version","user":{"login":"Alex-Ikanow","id":851950,"node_id":"MDQ6VXNlcjg1MTk1MA==","avatar_url":"https://avatars2.githubusercontent.com/u/851950?v=4","gravatar_id":"","url":"https://api.github.com/users/Alex-Ikanow","html_url":"https://github.com/Alex-Ikanow","followers_url":"https://api.github.com/users/Alex-Ikanow/followers","following_url":"https://api.github.com/users/Alex-Ikanow/following{/other_user}","gists_url":"https://api.github.com/users/Alex-Ikanow/gists{/gist_id}","starred_url":"https://api.github.com/users/Alex-Ikanow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Alex-Ikanow/subscriptions","organizations_url":"https://api.github.com/users/Alex-Ikanow/orgs","repos_url":"https://api.github.com/users/Alex-Ikanow/repos","events_url":"https://api.github.com/users/Alex-Ikanow/events{/privacy}","received_events_url":"https://api.github.com/users/Alex-Ikanow/received_events","type":"User","site_admin":false},"labels":[{"id":145572580,"node_id":"MDU6TGFiZWwxNDU1NzI1ODA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/CRUD","name":":Distributed/CRUD","color":"0e8a16","default":false,"description":"A catch all label for issues around indexing, updating and getting a doc by id. Not search."},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-06-15T21:42:46Z","updated_at":"2018-02-13T19:39:40Z","closed_at":"2015-06-18T13:16:26Z","author_association":"NONE","active_lock_reason":null,"body":"I am creating via BulkRequestBuilder, doing\n\n```\nadd(client.prepareIndex(...).setOpType(OpType.CREATE)\n```\n\nI have a test where I bulk insert and a subset of the objects inserted already exist. I then attach a listener to the bulk request, and expect to get .hasFailures() etc. (This is running vs an in memory server created in JUnit, if that makes any difference)\n\nInstead what happens is hasFailures() returns false, and the inserts silently fail (ie they appear in the requests() array with isFailed()==false, but aren't updated). \n\nOne difference I do see in the listener is that the new objects have version==1 whereas the failed indexes have ==-3, eg (my duplicate objects start at \"id51\"):\n\n```\nWORKED2: 29...id50...CREATE...{\"_id\":\"id50\",\"test_string\":\"test_string250\"}...1\nWORKED2: 30...id51...CREATE...{\"_id\":\"id51\",\"test_string\":\"test_string251\"}...-3\n```\n\n(for\n\n```\nSystem.out.println(\"WORKED2: \" + bir.getItemId() + \"...\" + bir.getId() + \"...\" + ir.opType().toString() + \"...\" + ir.source().toUtf8() + \"...\" + ir.version());\n```\n\n)\n\nI confirm the object is not updated in the DB, eg:\n\n```\n---------------- {\"_id\":\"id50\",\"test_string\":\"test_string250\"} // (newly inserted object)\n---------------- {\"_id\":\"id51\",\"test_string\":\"test_string51\"} // (original object)\n```\n\nAny ideas what's going on here?\n\n(EDIT: note if i change from OpType.CREATE to OpType.INDEX then as expected I see versions 1 for new objects, 2 for updated objects, and the objects are updated in the DB)\n\nIs this because I'm using a listener and there's a second wave of verification that occurs after the onResponse()? I'm \"happy\" to use negative version to indicate \"duplicate insert failure\" if that's going to be consistent behavior.\n\n(Apologies if this behavior is explained somewhere, I couldn't find it!)\n","closed_by":{"login":"Alex-Ikanow","id":851950,"node_id":"MDQ6VXNlcjg1MTk1MA==","avatar_url":"https://avatars2.githubusercontent.com/u/851950?v=4","gravatar_id":"","url":"https://api.github.com/users/Alex-Ikanow","html_url":"https://github.com/Alex-Ikanow","followers_url":"https://api.github.com/users/Alex-Ikanow/followers","following_url":"https://api.github.com/users/Alex-Ikanow/following{/other_user}","gists_url":"https://api.github.com/users/Alex-Ikanow/gists{/gist_id}","starred_url":"https://api.github.com/users/Alex-Ikanow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Alex-Ikanow/subscriptions","organizations_url":"https://api.github.com/users/Alex-Ikanow/orgs","repos_url":"https://api.github.com/users/Alex-Ikanow/repos","events_url":"https://api.github.com/users/Alex-Ikanow/events{/privacy}","received_events_url":"https://api.github.com/users/Alex-Ikanow/received_events","type":"User","site_admin":false},"performed_via_github_app":null}