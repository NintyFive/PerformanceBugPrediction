[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/102482270","html_url":"https://github.com/elastic/elasticsearch/issues/11160#issuecomment-102482270","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11160","id":102482270,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMjQ4MjI3MA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-05-15T18:23:22Z","updated_at":"2015-05-15T18:23:22Z","author_association":"CONTRIBUTOR","body":"Hi @abibell \n\nTwo things to note:\n- A JSON object is *\"an unordered set of name/value pairs. There is no guarantee that order will be maintained, even when deserializing and reserializing an object.\n- The ability to do updates on documents that do not store the entire original source (ie no `includes` or `excludes` allowed) will not be support the update API from version 2.0 onwards (see https://github.com/elastic/elasticsearch/issues/11116)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/102531078","html_url":"https://github.com/elastic/elasticsearch/issues/11160#issuecomment-102531078","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11160","id":102531078,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMjUzMTA3OA==","user":{"login":"abibell","id":544653,"node_id":"MDQ6VXNlcjU0NDY1Mw==","avatar_url":"https://avatars0.githubusercontent.com/u/544653?v=4","gravatar_id":"","url":"https://api.github.com/users/abibell","html_url":"https://github.com/abibell","followers_url":"https://api.github.com/users/abibell/followers","following_url":"https://api.github.com/users/abibell/following{/other_user}","gists_url":"https://api.github.com/users/abibell/gists{/gist_id}","starred_url":"https://api.github.com/users/abibell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abibell/subscriptions","organizations_url":"https://api.github.com/users/abibell/orgs","repos_url":"https://api.github.com/users/abibell/repos","events_url":"https://api.github.com/users/abibell/events{/privacy}","received_events_url":"https://api.github.com/users/abibell/received_events","type":"User","site_admin":false},"created_at":"2015-05-15T21:36:47Z","updated_at":"2015-05-19T06:25:54Z","author_association":"NONE","body":"@clintongormley Elastic search is a great product. In fact it is the best search product. The founders have done a great job.\n\nWhen people say there is a problem there most likely can be a problem. Can be their own usage. The human element makes it harder to see it. Many things are man made. Including the definition of json. I need you to objectively look at the problem. Let's take another look at it.\n\nWe use elasticsearch, we store fulltext content in the document. We don't want to see it in results as it is too bulky. Currently we have source code that takes the data and strips out the fulltext content before sending it to content. This logic should have been in elastic, which it does But it is not quite predictable behavior.\n- JSON definition doesn't say it is *unstructured according to Wikipedia or the RFC specification. Regardless of what it says. Why not make it better? Standard says json can be serialized and validated using xsd (see xs:sequence in XSD which requires the order to be maintained). If json was unstructured it would have failed.\n- that's useful information. We are talking about data retrieval and partial updates doesn't matter in this context.\n\nI looked at the source code it is complex and simple to retain the order. I will help fix the source code for you.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103025964","html_url":"https://github.com/elastic/elasticsearch/issues/11160#issuecomment-103025964","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11160","id":103025964,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzAyNTk2NA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-05-18T11:35:38Z","updated_at":"2015-05-18T11:35:38Z","author_association":"CONTRIBUTOR","body":"> JSON definition doesn't say it is *unstructured according to Wikipedia or the RFC specification. Regardless of what it says. Why not make it better? Standard says json can be serialized and validated using xsd. If json was unstructured it would have failed.\n\nThe spec at http://json.org/ says:\n\n> An object is an unordered set of name/value pairs.\n\nThe Wikipedia article at http://en.wikipedia.org/wiki/JSON#Data_types.2C_syntax_and_example says:\n\n> Object — an unordered collection of name/value pairs where the names (also called keys) are strings.\n\nMost languages use hash randomization to avoid hash collision attacks (see http://lemire.me/blog/archives/2012/01/17/use-random-hashing-if-you-care-about-security/ ) so it is quite likely that deserealizing then reserealizing a JSON object will result in a different key order. This is by design.\n\nAlso see http://stackoverflow.com/a/4515863/819598 about why you shouldn't depend on order.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103122824","html_url":"https://github.com/elastic/elasticsearch/issues/11160#issuecomment-103122824","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11160","id":103122824,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzEyMjgyNA==","user":{"login":"abibell","id":544653,"node_id":"MDQ6VXNlcjU0NDY1Mw==","avatar_url":"https://avatars0.githubusercontent.com/u/544653?v=4","gravatar_id":"","url":"https://api.github.com/users/abibell","html_url":"https://github.com/abibell","followers_url":"https://api.github.com/users/abibell/followers","following_url":"https://api.github.com/users/abibell/following{/other_user}","gists_url":"https://api.github.com/users/abibell/gists{/gist_id}","starred_url":"https://api.github.com/users/abibell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abibell/subscriptions","organizations_url":"https://api.github.com/users/abibell/orgs","repos_url":"https://api.github.com/users/abibell/repos","events_url":"https://api.github.com/users/abibell/events{/privacy}","received_events_url":"https://api.github.com/users/abibell/received_events","type":"User","site_admin":false},"created_at":"2015-05-18T16:44:34Z","updated_at":"2015-05-18T16:44:34Z","author_association":"NONE","body":"I don't want this to be a \"who is technically competent match\". We can\nsimply provide facts invalidating each other, continue to say wrong source,\nunrelated, wrong interpretation and maybe wonder why the other person is\nnot able to see the point. I don't take everything that is written as\nTruth. To me technology is born to solve problems and not to be a\nbottleneck.\n\nAll I am saying is JSON structure was preserved in all languages I have\nused. It will make our lives better if we addressed the order. There is no\nissue if we preserve the order. Random Hashing issue you mentioned is only\nimplemented by 3/3000+ languages and only recently. Plus randomised hashing\nis not going to make any difference to the order preservation. If we\nrepeatedly serialize and deserialize the hash will change, which is wrong\nbecause it is same object. It's not the problem of randomised hashing. It\nis serializing processes.\nOn 18/05/2015 9:36 pm, \"Clinton Gormley\" notifications@github.com wrote:\n\n> JSON definition doesn't say it is *unstructured according to Wikipedia or\n> the RFC specification. Regardless of what it says. Why not make it better?\n> Standard says json can be serialized and validated using xsd. If json was\n> unstructured it would have failed.\n> \n> The spec at http://json.org/ says:\n> \n> An object is an unordered set of name/value pairs.\n> \n> The Wikipedia article at\n> http://en.wikipedia.org/wiki/JSON#Data_types.2C_syntax_and_example says:\n> \n> Object — an unordered collection of name/value pairs where the names (also\n> called keys) are strings.\n> \n> Most languages use hash randomization to avoid hash collision attacks (see\n> http://lemire.me/blog/archives/2012/01/17/use-random-hashing-if-you-care-about-security/\n> ) so it is quite likely that deserealizing then reserealizing a JSON object\n> will result in a different key order. This is by design.\n> \n> Also see http://stackoverflow.com/a/4515863/819598 about why you\n> shouldn't depend on order.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/elastic/elasticsearch/issues/11160#issuecomment-103025964\n> .\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103139728","html_url":"https://github.com/elastic/elasticsearch/issues/11160#issuecomment-103139728","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11160","id":103139728,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzEzOTcyOA==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-05-18T17:18:42Z","updated_at":"2015-05-18T17:18:42Z","author_association":"CONTRIBUTOR","body":"I'm all for user friendliness but enforcing order has a cost. Not only in terms of complexity because we would need to ensure that all json manipulations that we perform maintain order, but also in terms of efficiency. For instance lots of people would like elasticsearch to be more space-efficient, and having the ability to reorder fields could be very useful for compression (eg. by grouping together fields that have the same type together to record them type only once, putting similar fields close to each other to help LZ77 compression, etc.).\n\nI agree with the stackoverflow article that if you need order, the right data-structure is a json list, not a hash.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/104109586","html_url":"https://github.com/elastic/elasticsearch/issues/11160#issuecomment-104109586","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11160","id":104109586,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNDEwOTU4Ng==","user":{"login":"abibell","id":544653,"node_id":"MDQ6VXNlcjU0NDY1Mw==","avatar_url":"https://avatars0.githubusercontent.com/u/544653?v=4","gravatar_id":"","url":"https://api.github.com/users/abibell","html_url":"https://github.com/abibell","followers_url":"https://api.github.com/users/abibell/followers","following_url":"https://api.github.com/users/abibell/following{/other_user}","gists_url":"https://api.github.com/users/abibell/gists{/gist_id}","starred_url":"https://api.github.com/users/abibell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abibell/subscriptions","organizations_url":"https://api.github.com/users/abibell/orgs","repos_url":"https://api.github.com/users/abibell/repos","events_url":"https://api.github.com/users/abibell/events{/privacy}","received_events_url":"https://api.github.com/users/abibell/received_events","type":"User","site_admin":false},"created_at":"2015-05-21T03:01:40Z","updated_at":"2015-05-22T01:45:38Z","author_association":"NONE","body":"Ok. The information I didn't knew is that we have **_source_include** & **_source_exclude** which will solve the problem of removing our fulltext from elasticSearch results without custom code, saving network transfers. This ~~doesn't~~ does have the problem of **JSON reordering**. ~~Yay!~~ Oh no.\n","performed_via_github_app":null}]