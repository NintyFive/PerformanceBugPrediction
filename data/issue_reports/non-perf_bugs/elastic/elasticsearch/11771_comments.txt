[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115430100","html_url":"https://github.com/elastic/elasticsearch/issues/11771#issuecomment-115430100","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11771","id":115430100,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTQzMDEwMA==","user":{"login":"szroland","id":10174523,"node_id":"MDQ6VXNlcjEwMTc0NTIz","avatar_url":"https://avatars2.githubusercontent.com/u/10174523?v=4","gravatar_id":"","url":"https://api.github.com/users/szroland","html_url":"https://github.com/szroland","followers_url":"https://api.github.com/users/szroland/followers","following_url":"https://api.github.com/users/szroland/following{/other_user}","gists_url":"https://api.github.com/users/szroland/gists{/gist_id}","starred_url":"https://api.github.com/users/szroland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/szroland/subscriptions","organizations_url":"https://api.github.com/users/szroland/orgs","repos_url":"https://api.github.com/users/szroland/repos","events_url":"https://api.github.com/users/szroland/events{/privacy}","received_events_url":"https://api.github.com/users/szroland/received_events","type":"User","site_admin":false},"created_at":"2015-06-25T23:31:52Z","updated_at":"2015-06-25T23:31:52Z","author_association":"CONTRIBUTOR","body":"This is correct, since one segment of the path is still a path, which is its own first segment, etc. Weird API, that.\n\nStill, @pickypg, I'm curious where you stumbled upon this, e.g. if you could post the stack trace (until it starts calling itself recursively). Because I don't see much value serializing a Path object like this, it would not be useful as an array of path elements even if there was not this issue of endless recursion. Calling toString() on it and storing it as a string could be more useful.\n\nNot sure XContentBuilder needs explicit support of Path, or rather whatever is calling should decide how they want to serialize paths, especially if the value is expected to be read back as a Path eventually.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115858847","html_url":"https://github.com/elastic/elasticsearch/issues/11771#issuecomment-115858847","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11771","id":115858847,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTg1ODg0Nw==","user":{"login":"pickypg","id":1501235,"node_id":"MDQ6VXNlcjE1MDEyMzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1501235?v=4","gravatar_id":"","url":"https://api.github.com/users/pickypg","html_url":"https://github.com/pickypg","followers_url":"https://api.github.com/users/pickypg/followers","following_url":"https://api.github.com/users/pickypg/following{/other_user}","gists_url":"https://api.github.com/users/pickypg/gists{/gist_id}","starred_url":"https://api.github.com/users/pickypg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pickypg/subscriptions","organizations_url":"https://api.github.com/users/pickypg/orgs","repos_url":"https://api.github.com/users/pickypg/repos","events_url":"https://api.github.com/users/pickypg/events{/privacy}","received_events_url":"https://api.github.com/users/pickypg/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T20:00:16Z","updated_at":"2015-06-26T20:00:16Z","author_association":"MEMBER","body":"Hi @szroland, I agree that it's a slightly odd usage, but I came across it while integration testing against Elasticearch 1.6. As the Groovy client author, I had to update a bunch of my tests to include support for the new `path.repo` setting (amongst other things). This involved changing the path for integration tests for snapshots to use a \"valid\" temporary directory.\n\n``` groovy\n// Create the repository\nPutRepositoryResponse putResponse = clusterAdminClient.putRepository {\n    name repoName\n    type \"fs\"\n    settings {\n        location = randomRepoPath()\n    }\n}\n```\n\nwhere `randomRepoPath()` returns a `Path`. Without going into too much detail, this indirectly/effectively calls `builder.field(\"location\", randomRepoPath())`, which is [making use of `XContentBuilder field(String name, Object value)` and eventually `writeValue(Object value)`](https://github.com/elastic/elasticsearch/blob/v1.6.0/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java#L771).\n\nThis can be easily worked around by calling `randomRepoPath().toString()` or, presumably even better, `randomRepoPath().toAbsolutePath().toString()`, but there's nothing implying a problem until you call it.\n\n> Not sure XContentBuilder needs explicit support of Path, or rather whatever is calling should decide how they want to serialize paths, especially if the value is expected to be read back as a Path eventually.\n\nWe do have a bunch of `Path`-based settings (particularly on master in ES 2.0+), which I think will expose this \"problem\" more over time, particularly when something _else_ is doing the serialization for you.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/116165935","html_url":"https://github.com/elastic/elasticsearch/issues/11771#issuecomment-116165935","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11771","id":116165935,"node_id":"MDEyOklzc3VlQ29tbWVudDExNjE2NTkzNQ==","user":{"login":"szroland","id":10174523,"node_id":"MDQ6VXNlcjEwMTc0NTIz","avatar_url":"https://avatars2.githubusercontent.com/u/10174523?v=4","gravatar_id":"","url":"https://api.github.com/users/szroland","html_url":"https://github.com/szroland","followers_url":"https://api.github.com/users/szroland/followers","following_url":"https://api.github.com/users/szroland/following{/other_user}","gists_url":"https://api.github.com/users/szroland/gists{/gist_id}","starred_url":"https://api.github.com/users/szroland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/szroland/subscriptions","organizations_url":"https://api.github.com/users/szroland/orgs","repos_url":"https://api.github.com/users/szroland/repos","events_url":"https://api.github.com/users/szroland/events{/privacy}","received_events_url":"https://api.github.com/users/szroland/received_events","type":"User","site_admin":false},"created_at":"2015-06-27T23:38:39Z","updated_at":"2015-06-27T23:38:39Z","author_association":"CONTRIBUTOR","body":"I added a pull request with a possible implementation to have something concrete to review / discuss.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/120305202","html_url":"https://github.com/elastic/elasticsearch/issues/11771#issuecomment-120305202","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11771","id":120305202,"node_id":"MDEyOklzc3VlQ29tbWVudDEyMDMwNTIwMg==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2015-07-10T08:57:08Z","updated_at":"2015-07-10T08:57:08Z","author_association":"CONTRIBUTOR","body":"Fixed.\n","performed_via_github_app":null}]