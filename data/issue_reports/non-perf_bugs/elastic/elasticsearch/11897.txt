{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/11897","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11897/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11897/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11897/events","html_url":"https://github.com/elastic/elasticsearch/issues/11897","id":91380572,"node_id":"MDU6SXNzdWU5MTM4MDU3Mg==","number":11897,"title":"Issues with the json description of Snapshot Create API","user":{"login":"szroland","id":10174523,"node_id":"MDQ6VXNlcjEwMTc0NTIz","avatar_url":"https://avatars2.githubusercontent.com/u/10174523?v=4","gravatar_id":"","url":"https://api.github.com/users/szroland","html_url":"https://github.com/szroland","followers_url":"https://api.github.com/users/szroland/followers","following_url":"https://api.github.com/users/szroland/following{/other_user}","gists_url":"https://api.github.com/users/szroland/gists{/gist_id}","starred_url":"https://api.github.com/users/szroland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/szroland/subscriptions","organizations_url":"https://api.github.com/users/szroland/orgs","repos_url":"https://api.github.com/users/szroland/repos","events_url":"https://api.github.com/users/szroland/events{/privacy}","received_events_url":"https://api.github.com/users/szroland/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-06-26T22:50:47Z","updated_at":"2015-06-30T10:16:23Z","closed_at":"2015-06-30T10:16:22Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In general, Rest test code picks the HTTP method and path randomly from the API json spec. Not sure what other uses of this specification exist, but this indicates an assumption that if there are multiple methods available, they are all available on all urls (that match the parameters) with the same semantics.\n\nHowever, this breaks for snapshot create, where the POST and PUT URLs in the API are different, there is an extra `_create` for POST only:\n\n```\n        controller.registerHandler(PUT, \"/_snapshot/{repository}/{snapshot}\", this);\n        controller.registerHandler(POST, \"/_snapshot/{repository}/{snapshot}/_create\", this);\n```\n\nThe API spec in json:\n\n```\n    \"methods\": [\"PUT\", \"POST\"],\n    \"paths\": [\n      \"/_snapshot/{repository}/{snapshot}\", \n      \"/_snapshot/{repository}/{snapshot}/_create\"],\n```\n\nSo if you tried to use this API in rest tests (which might explain why no such tests currently exist), sometimes RestClient actually picks the wrong combination and does a PUT to `/_snapshot/{repository}/{snapshot}/_create` which happens to get parsed as a create index request (and fails because of the invalid index name `_snapshot`, which could indicate some issue in the dispatch code as well).\n\nSo there are a couple of things that could be done:\n- Change the Snapshot Create API to have PUT and POST both on all the same paths, in line with other APIs (e.g. add PUT and POST to both, assuming request dispatching could support that, or drop \"_create\" from the POST path)\n- Change the json API spec format to allow the linking of method to path\n- Create 2 separate json files for snapshot create, one describing the PUT api and the other the POST api (you would lose the random selection between the methods in tests, and would pick e.g. between snapshot.create or snapshot.create.post in your test descriptor)\n\nI guess the best course of action depends on what uses of the json specification there are, what it is really intended for.\n\nDropping POST/_create, at least from the spec file, seems to be an interesting option, since I see this has been done on other APIs as well (e.g. search_template and put_script), which have a POST/_create mapping in code but not in the json spec. I guess the issue might be that the path also matches the create index action path `/{index}/{type}/{id}/_create`, not sure if the dispatch logic deterministically considers the create index option last (e.g. prioritizes more specific paths over less specific ones).\n","closed_by":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"performed_via_github_app":null}