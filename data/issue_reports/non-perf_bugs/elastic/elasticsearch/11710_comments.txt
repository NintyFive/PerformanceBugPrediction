[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/113147861","html_url":"https://github.com/elastic/elasticsearch/issues/11710#issuecomment-113147861","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11710","id":113147861,"node_id":"MDEyOklzc3VlQ29tbWVudDExMzE0Nzg2MQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-06-18T12:58:41Z","updated_at":"2015-06-18T12:58:41Z","author_association":"CONTRIBUTOR","body":"@jaymode please could you take a look?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/113506025","html_url":"https://github.com/elastic/elasticsearch/issues/11710#issuecomment-113506025","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11710","id":113506025,"node_id":"MDEyOklzc3VlQ29tbWVudDExMzUwNjAyNQ==","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"created_at":"2015-06-19T12:53:30Z","updated_at":"2015-06-19T12:53:30Z","author_association":"MEMBER","body":"@bobbyhubbard thanks for reporting this. This behavior isn't ideal and we'll look at if/how we can improve this. What you're seeing is a side effect of how auditing is implemented and how search requests are executed. Shield audits the individual actions that are executed by elasticsearch. \n\nThe `indices:data/read/search` action name corresponds to multiple actions for search. The reason that you are seeing the message twice, is the API executes a `TransportSearchAction`, which in turn executes a action corresponding to the search type; the default type `query_then_fetch` corresponds to the `TransportSearchQueryThenFetchAction` and the execution of this action is what causes the second log message.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/113530590","html_url":"https://github.com/elastic/elasticsearch/issues/11710#issuecomment-113530590","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11710","id":113530590,"node_id":"MDEyOklzc3VlQ29tbWVudDExMzUzMDU5MA==","user":{"login":"javanna","id":832460,"node_id":"MDQ6VXNlcjgzMjQ2MA==","avatar_url":"https://avatars1.githubusercontent.com/u/832460?v=4","gravatar_id":"","url":"https://api.github.com/users/javanna","html_url":"https://github.com/javanna","followers_url":"https://api.github.com/users/javanna/followers","following_url":"https://api.github.com/users/javanna/following{/other_user}","gists_url":"https://api.github.com/users/javanna/gists{/gist_id}","starred_url":"https://api.github.com/users/javanna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javanna/subscriptions","organizations_url":"https://api.github.com/users/javanna/orgs","repos_url":"https://api.github.com/users/javanna/repos","events_url":"https://api.github.com/users/javanna/events{/privacy}","received_events_url":"https://api.github.com/users/javanna/received_events","type":"User","site_admin":false},"created_at":"2015-06-19T14:26:12Z","updated_at":"2015-06-19T14:26:12Z","author_association":"MEMBER","body":"This seems to have to do with the fact that the main `TransportSearchAction` uses an inner `TransportSearchTypeAction` (there is a different impl for each search type). Last time I checked I noticed some code that gets executed twice while it shouldn't (e.g. request validation), and a side effect is also the double audit log line. Maybe this inner action shouldn't be a transport action after all? The two (outer and inner) execute calls happen on the same node all the time, seems like also the transport handler registration that happens in `TransportSearchTypeAction` has no actual effect as it's already registered by `TransportSearchAction` with same name, so only used for audit logging.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/157896389","html_url":"https://github.com/elastic/elasticsearch/issues/11710#issuecomment-157896389","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11710","id":157896389,"node_id":"MDEyOklzc3VlQ29tbWVudDE1Nzg5NjM4OQ==","user":{"login":"bobbyhubbard","id":5067336,"node_id":"MDQ6VXNlcjUwNjczMzY=","avatar_url":"https://avatars1.githubusercontent.com/u/5067336?v=4","gravatar_id":"","url":"https://api.github.com/users/bobbyhubbard","html_url":"https://github.com/bobbyhubbard","followers_url":"https://api.github.com/users/bobbyhubbard/followers","following_url":"https://api.github.com/users/bobbyhubbard/following{/other_user}","gists_url":"https://api.github.com/users/bobbyhubbard/gists{/gist_id}","starred_url":"https://api.github.com/users/bobbyhubbard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bobbyhubbard/subscriptions","organizations_url":"https://api.github.com/users/bobbyhubbard/orgs","repos_url":"https://api.github.com/users/bobbyhubbard/repos","events_url":"https://api.github.com/users/bobbyhubbard/events{/privacy}","received_events_url":"https://api.github.com/users/bobbyhubbard/received_events","type":"User","site_admin":false},"created_at":"2015-11-18T23:20:30Z","updated_at":"2015-11-18T23:20:30Z","author_association":"NONE","body":"This bit us again today when someone else in our org setup a new log drain from shield. It reported nearly double the number of rest requests as expected. Then I remembered this issue... The workaround is simple enough...to hash each message (fingerprint in logstash) and use the hash as the message id. But this WILL bite every single Shield customer who is measuring and auditing rest calls. (How many are reporting invalid results now because they dont even know about this bug like one team here almost did?)\n","performed_via_github_app":null}]