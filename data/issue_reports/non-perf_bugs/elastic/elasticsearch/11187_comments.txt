[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/102504709","html_url":"https://github.com/elastic/elasticsearch/issues/11187#issuecomment-102504709","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11187","id":102504709,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMjUwNDcwOQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-05-15T19:40:44Z","updated_at":"2015-05-15T19:40:44Z","author_association":"CONTRIBUTOR","body":"@rashidkpc do you need to know which indices match for any reason other than to reduce the number of indices you query?  I ask because I don't think you should need to do this at all.  Elasticsearch should do this for you at search time.  As @mikemccand said in https://github.com/elastic/elasticsearch/issues/5829#issuecomment-98085925 : \n\n> I think higher level optimizations could be very worthwhile, e.g. for time-based indices, knowing that a given index won't have any hits because there is a top-level range filter, should be a big speed up in many cases ...\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/102835936","html_url":"https://github.com/elastic/elasticsearch/issues/11187#issuecomment-102835936","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11187","id":102835936,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMjgzNTkzNg==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2015-05-17T19:08:36Z","updated_at":"2015-05-17T19:08:36Z","author_association":"MEMBER","body":"> I think higher level optimizations could be very worthwhile, e.g. for time-based indices, knowing that a given index won't have any hits because there is a top-level range filter, should be a big speed up in many cases ...\n\nWe should definitely implement this. In order to implement this, we need to keep track of each min and max value per field per shard, so that we can skip entire shards. However even with this big improvement in place we will still send the shard level requests to the nodes that hold the shards. Kibana and other apps can do the next best thing by not sending requests at all to nodes that hold indices outside the timestamp range and to do this stats filter can help.\n\nMaybe the right syntax would be: \n\n```\ncurl -XGET \"http://localhost:9200/_field_stats?fields=@timestamp&min.@timestamp=2014-01-01&max.@timestamp=2015-01-01\"\n```\n\nSo the field name is included in the min and max params. I'd prefer this over adding parameters to the request body for this particular filter option. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/105462074","html_url":"https://github.com/elastic/elasticsearch/issues/11187#issuecomment-105462074","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11187","id":105462074,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNTQ2MjA3NA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-05-26T09:26:16Z","updated_at":"2015-05-26T09:26:16Z","author_association":"CONTRIBUTOR","body":"Just been talking to @martijnvg and @jpountz about the field-stats filtering PR in #11259.  I'm not liking the API at all, it feels like the wrong solution.\n\nThe intention of this change is to reduce the amount of work that Elasticsearch has to do to fulfill a search request, by only querying indices that contain documents that could possibly match certain conditions (eg a timestamp range).  However, the proposed solution requires a round trip to all indices to retrieve the field stats data before executing the query, so all shards get hit anyway.\n\nWhile you could cache this information, Kibana is supposed to take new data into account, so any caching would interfere with this process. \n\nThe problem with running a search request on all indices at the moment is that we don't have the optimizations in place to abort the search request as early as possible if no data can possibly match. Even if we use the pre-flight check suggested in https://github.com/elastic/elasticsearch/issues/5829#issuecomment-98085925 we need other optimizations such as only loading global ordinals if we actually need them.\n\n@rashidkpc I think that today Kibana queries each index in turn, starting with the most recent and backfilling data.  Is that correct? If we implemented the optimizations suggested above, would you still want to do that in the same way and, if so, why?\n\nIf this is still a requirement, then I think we should look at a different API which just returns index names, rather than tacking this on to the field stats API, or do you need the field stats as well?  Could you describe your \"dream process\" in more detail?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/106525757","html_url":"https://github.com/elastic/elasticsearch/issues/11187#issuecomment-106525757","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11187","id":106525757,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNjUyNTc1Nw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-05-28T17:51:28Z","updated_at":"2015-05-28T17:51:28Z","author_association":"CONTRIBUTOR","body":"@rashidkpc and I had a chat about how Kibana would use this API:\n\nRegardless of whether Elasticsearch uses the min/max field stats internally, Kibana would still query indices individually to show results for recent indices more quickly and with less concurrent load on ES. Kibana wouldn't cache the field stats information (as it needs to be aware of any new indices/data as it becomes available), so the API needs to be fast.\n\nA user might select a time range, so Kibana would use the field stats API to show data from each index within the time range in turn.  Then, if a user selects a field for filtering, Kibana would show the min/max values available for that field based on the selected time range.\n\nIn summary, the API should return:\n- a list of indices\n- field stats for a list of fields, per index\n- possibly filtered by a constraint on a field (eg timestamp)\n\nA question that remains is: would we ever need to filter on more than one field and, if so, how should the constraints be applied: as AND or OR.  That said, we couldn't come up with a use case for filtering on multiple fields, so let's worry about that later and for the moment just AND constraints  (ie all must apply).\n\nI think it is worth separating out the list of fields that should be returned  from the constraints, eg:\n\n```\ncurl -XPOST \"http://localhost:9200/_field_stats?level=indices\" -d'\n{\n  \"fields\": [\n    \"foo\",\n    \"bar\"\n  ],\n  \"constraints\": {\n    \"_timestamp.max\": {\n      \"gte\": \"2014-01-01T00:00:00.000Z\"\n    },\n    \"_timestamp.min\": {\n      \"lt\": \"2015-01-01T00:00:00.000Z\"\n    }\n  }\n}'\n```\n\nShould it be `constraints`, `filters`, `restrictions`, `where`?  I'm avoiding `filters` because it doesn't accept the query DSL.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/106557566","html_url":"https://github.com/elastic/elasticsearch/issues/11187#issuecomment-106557566","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11187","id":106557566,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNjU1NzU2Ng==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2015-05-28T18:34:20Z","updated_at":"2015-05-28T18:34:20Z","author_association":"MEMBER","body":"@clintongormley I like `restrictions` or maybe just `restrict`? I think that the restrictions should be embed in the field, so it is clear what restriction belongs to what field. Something like this:\n\n``` json\n{\n  \"fields\": {\n    \"foo\" : {\n       \"restrict\" : {\n          \"_timestamp.max\": {\n              \"gte\": \"2014-01-01T00:00:00.000Z\"\n          }\n       }\n    },\n    \"bar\" : {\n      \"restrict\" : {\n         \"_timestamp.min\": {\n            \"lt\": \"2015-01-01T00:00:00.000Z\"\n         }\n      }\n    }\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/106576176","html_url":"https://github.com/elastic/elasticsearch/issues/11187#issuecomment-106576176","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11187","id":106576176,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNjU3NjE3Ng==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-05-28T19:43:14Z","updated_at":"2015-05-28T19:43:14Z","author_association":"CONTRIBUTOR","body":"@martijnvg the constraints should be separate from the fields list, because they are two separate concerns:\n- which fields should i filter by\n- which fields should i return\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/106720433","html_url":"https://github.com/elastic/elasticsearch/issues/11187#issuecomment-106720433","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11187","id":106720433,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNjcyMDQzMw==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2015-05-29T07:21:34Z","updated_at":"2015-05-29T07:21:34Z","author_association":"MEMBER","body":"Ok, I see, makes sense.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/106727155","html_url":"https://github.com/elastic/elasticsearch/issues/11187#issuecomment-106727155","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11187","id":106727155,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNjcyNzE1NQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2015-05-29T07:35:42Z","updated_at":"2015-05-29T07:35:42Z","author_association":"MEMBER","body":"reading this I got confused a bit but what we are filtering on. I'm afraid people will very easily interpret the restrictions/constraints as to apply to data (i.e., query DSL) but I understand this is not what we aim for due to the performance implications. Rather the idea is to filter the indices used for the stats (right? ). I wonder if we should name it something that implies that like `indices_filter` or `indices_constraints` and have it in  a structure that allows future extension. Something like:\n\n```\nPOST /_field_stats?level=indices\n{\n  \"fields\": [\n    \"foo\",\n    \"bar\"\n  ],\n  \"indices_constraints\": {\n    \"field_range\": {\n      \"_timestamp\": {\n        \"max\": {\n          \"gte\": \"2014-01-01T00:00:00.000Z\"\n        },\n        \"min\": {\n          \"lt\": \"2015-01-01T00:00:00.000Z\"\n        }\n      }\n    }\n  }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/106755658","html_url":"https://github.com/elastic/elasticsearch/issues/11187#issuecomment-106755658","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11187","id":106755658,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNjc1NTY1OA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2015-05-29T09:24:57Z","updated_at":"2015-05-29T09:24:57Z","author_association":"MEMBER","body":"@bleskes Yes, the idea is to filter on indices. I like your syntax, because it is descriptive. It is a bit more verbose, but I think that is okay.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/106767591","html_url":"https://github.com/elastic/elasticsearch/issues/11187#issuecomment-106767591","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11187","id":106767591,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNjc2NzU5MQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-05-29T10:29:55Z","updated_at":"2015-05-29T10:29:55Z","author_association":"CONTRIBUTOR","body":"I like `indices_constraints` although i think it should be `index_constraints`.  I don't think we need the `field_range` layer: all we can do is filter on the values of stats for each field.  So in summary:\n\n```\nPOST /_field_stats?level=indices\n{\n  \"fields\": [\n    \"foo\",\n    \"bar\"\n  ],\n  \"index_constraints\": {\n    \"_timestamp\": {\n      \"max\": {\n        \"gte\": \"2014-01-01T00:00:00.000Z\"\n      },\n      \"min\": {\n        \"lt\": \"2015-01-01T00:00:00.000Z\"\n      }\n    }\n  }\n}\n```\n","performed_via_github_app":null}]