[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/100372279","html_url":"https://github.com/elastic/elasticsearch/issues/11066#issuecomment-100372279","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11066","id":100372279,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMDM3MjI3OQ==","user":{"login":"jdconrad","id":2126764,"node_id":"MDQ6VXNlcjIxMjY3NjQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2126764?v=4","gravatar_id":"","url":"https://api.github.com/users/jdconrad","html_url":"https://github.com/jdconrad","followers_url":"https://api.github.com/users/jdconrad/followers","following_url":"https://api.github.com/users/jdconrad/following{/other_user}","gists_url":"https://api.github.com/users/jdconrad/gists{/gist_id}","starred_url":"https://api.github.com/users/jdconrad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdconrad/subscriptions","organizations_url":"https://api.github.com/users/jdconrad/orgs","repos_url":"https://api.github.com/users/jdconrad/repos","events_url":"https://api.github.com/users/jdconrad/events{/privacy}","received_events_url":"https://api.github.com/users/jdconrad/received_events","type":"User","site_admin":false},"created_at":"2015-05-08T21:22:05Z","updated_at":"2015-05-08T21:22:05Z","author_association":"CONTRIBUTOR","body":"My question is what is the difference in expectation of output between this and just running a test query against a script right now, and checking what errors are returned?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/100373054","html_url":"https://github.com/elastic/elasticsearch/issues/11066#issuecomment-100373054","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11066","id":100373054,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMDM3MzA1NA==","user":{"login":"bradvido","id":884611,"node_id":"MDQ6VXNlcjg4NDYxMQ==","avatar_url":"https://avatars2.githubusercontent.com/u/884611?v=4","gravatar_id":"","url":"https://api.github.com/users/bradvido","html_url":"https://github.com/bradvido","followers_url":"https://api.github.com/users/bradvido/followers","following_url":"https://api.github.com/users/bradvido/following{/other_user}","gists_url":"https://api.github.com/users/bradvido/gists{/gist_id}","starred_url":"https://api.github.com/users/bradvido/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bradvido/subscriptions","organizations_url":"https://api.github.com/users/bradvido/orgs","repos_url":"https://api.github.com/users/bradvido/repos","events_url":"https://api.github.com/users/bradvido/events{/privacy}","received_events_url":"https://api.github.com/users/bradvido/received_events","type":"User","site_admin":false},"created_at":"2015-05-08T21:26:28Z","updated_at":"2015-05-08T21:26:28Z","author_association":"CONTRIBUTOR","body":"Running the test and processing exceptions would work, but it leaves something to be desired. It doesn't seem very clean to me and programatically determining the actual problem from the ES exception is difficult.\n\nAlso, an API method to validate scripts won't generate errors in the ES log that could be confused with actual errors that need action taken.  \n\nIt's a \"check\" as opposed to an \"attempt and see if it fails\".\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/102407323","html_url":"https://github.com/elastic/elasticsearch/issues/11066#issuecomment-102407323","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11066","id":102407323,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMjQwNzMyMw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-05-15T14:03:58Z","updated_at":"2015-05-15T14:03:58Z","author_association":"CONTRIBUTOR","body":"Hi @bradvido \n\nReally there is no way to check the script properly without executing it with a real query, with real params, and against real docs, ie: execute a search\n\nHowever, the new structured exceptions make debugging the problem a whole lot easier than before. For instance, the following buggy script:\n\n```\nGET /_search\n{\n  \"script_fields\": {\n    \"FIELD\": {\n      \"script\": \"foo+bar\",\n      \"lang\": \"expression\"\n    }\n  }\n}\n```\n\nreturns the much more readable exception:\n\n```\n{\n   \"error\": {\n      \"root_cause\": [\n         {\n            \"type\": \"expression_script_compilation_exception\",\n            \"reason\": \"Unknown variable [foo] in expression\"\n         }\n      ],\n      \"type\": \"search_phase_execution_exception\",\n      \"reason\": \"all shards failed\",\n      \"phase\": \"query\",\n      \"grouped\": true,\n      \"failed_shards\": [\n         {\n            \"shard\": 1,\n            \"index\": \"test123\",\n            \"node\": \"v8K5ojNHQ6e24vQTtrrDPg\",\n            \"reason\": {\n               \"type\": \"search_parse_exception\",\n               \"reason\": \"Failed to parse source [{\\n  \\\"script_fields\\\": {\\n    \\\"FIELD\\\": {\\n      \\\"script\\\": \\\"foo+bar\\\",\\n      \\\"lang\\\": \\\"expression\\\"\\n    }\\n  }\\n}\\n]\",\n               \"line\": 6,\n               \"col\": 5,\n               \"caused_by\": {\n                  \"type\": \"expression_script_compilation_exception\",\n                  \"reason\": \"Unknown variable [foo] in expression\"\n               }\n            }\n         }\n      ]\n   },\n   \"status\": 400\n}\n```\n\nAlso, we already have the `_validate/query` API, which does pretty much what you're asking for, eg:\n\n```\nGET /_validate/query?explain\n{\n  \"query\": {\n    \"function_score\": {\n      \"script_score\": {\n        \"lang\": \"expression\",\n        \"script\": \"foo\"\n      }\n    }\n  }\n}\n```\n\nreturns:\n\n```\n{\n   \"valid\": false,\n   \"_shards\": {\n      \"total\": 1,\n      \"successful\": 1,\n      \"failed\": 0\n   },\n   \"explanations\": [\n      {\n         \"index\": \"test123\",\n         \"valid\": false,\n         \"error\": \"[test123] script_score the script could not be loaded; org.elasticsearch.script.expression.ExpressionScriptCompilationException: Unknown variable [foo] in expression\"\n      }\n   ]\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251833008","html_url":"https://github.com/elastic/elasticsearch/issues/11066#issuecomment-251833008","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11066","id":251833008,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTgzMzAwOA==","user":{"login":"benbenwilde","id":3302573,"node_id":"MDQ6VXNlcjMzMDI1NzM=","avatar_url":"https://avatars3.githubusercontent.com/u/3302573?v=4","gravatar_id":"","url":"https://api.github.com/users/benbenwilde","html_url":"https://github.com/benbenwilde","followers_url":"https://api.github.com/users/benbenwilde/followers","following_url":"https://api.github.com/users/benbenwilde/following{/other_user}","gists_url":"https://api.github.com/users/benbenwilde/gists{/gist_id}","starred_url":"https://api.github.com/users/benbenwilde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benbenwilde/subscriptions","organizations_url":"https://api.github.com/users/benbenwilde/orgs","repos_url":"https://api.github.com/users/benbenwilde/repos","events_url":"https://api.github.com/users/benbenwilde/events{/privacy}","received_events_url":"https://api.github.com/users/benbenwilde/received_events","type":"User","site_admin":false},"created_at":"2016-10-05T23:56:35Z","updated_at":"2016-10-05T23:56:35Z","author_association":"NONE","body":"This is no good. I want to run a script during reindex, but I want to run it asynchronously. But I'm stuck with the version where there is a bug with the reindex task going away when it finishes (or fails). So essentially I need to at least validate that the script file exists before running. So I try to validate using a search or something but it seems to run in a different context throwing random errors. So I'm currently resorting to running the search and seeing which kind of error it returns to identify if the script exists or not. It's really not a great solution. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/251835318","html_url":"https://github.com/elastic/elasticsearch/issues/11066#issuecomment-251835318","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11066","id":251835318,"node_id":"MDEyOklzc3VlQ29tbWVudDI1MTgzNTMxOA==","user":{"login":"nik9000","id":215970,"node_id":"MDQ6VXNlcjIxNTk3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/215970?v=4","gravatar_id":"","url":"https://api.github.com/users/nik9000","html_url":"https://github.com/nik9000","followers_url":"https://api.github.com/users/nik9000/followers","following_url":"https://api.github.com/users/nik9000/following{/other_user}","gists_url":"https://api.github.com/users/nik9000/gists{/gist_id}","starred_url":"https://api.github.com/users/nik9000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nik9000/subscriptions","organizations_url":"https://api.github.com/users/nik9000/orgs","repos_url":"https://api.github.com/users/nik9000/repos","events_url":"https://api.github.com/users/nik9000/events{/privacy}","received_events_url":"https://api.github.com/users/nik9000/received_events","type":"User","site_admin":false},"created_at":"2016-10-06T00:13:25Z","updated_at":"2016-10-06T00:13:25Z","author_association":"CONTRIBUTOR","body":"That sucks! You are very likely better off running reindex with a size of 1\nsynchronously and then kicking it off asynchronously.\n\nAt this point even if no matter the outcome of this issue you'll get the\nfix for your async status  problem first because that is in 5.0. Any new\nfeature would only be available in subsequent versions anyway.\n\nOn Oct 5, 2016 7:56 PM, \"benbenwilde\" notifications@github.com wrote:\n\n> This is no good. I want to run a script during reindex, but I want to run\n> it asynchronously. But I'm stuck with the version where there is a bug with\n> the reindex task going away when it finishes (or fails). So essentially I\n> need to at least validate that the script file exists before running. So I\n> try to validate using a search or something but it seems to run in a\n> different context throwing random errors. So I'm currently resorting to\n> running the search and seeing which kind of error it returns to identify if\n> the script exists or not. It's really not a great solution.\n> \n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/elastic/elasticsearch/issues/11066#issuecomment-251833008,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AANLon6T1S-vSoQaSG_nK0I1XwOi5Duxks5qxDk3gaJpZM4EUBtm\n> .\n","performed_via_github_app":null}]