{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/11901","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11901/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11901/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11901/events","html_url":"https://github.com/elastic/elasticsearch/issues/11901","id":91511789,"node_id":"MDU6SXNzdWU5MTUxMTc4OQ==","number":11901,"title":"Rethink string versus not_analyzed string mappings and support","user":{"login":"pickypg","id":1501235,"node_id":"MDQ6VXNlcjE1MDEyMzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1501235?v=4","gravatar_id":"","url":"https://api.github.com/users/pickypg","html_url":"https://github.com/pickypg","followers_url":"https://api.github.com/users/pickypg/followers","following_url":"https://api.github.com/users/pickypg/following{/other_user}","gists_url":"https://api.github.com/users/pickypg/gists{/gist_id}","starred_url":"https://api.github.com/users/pickypg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pickypg/subscriptions","organizations_url":"https://api.github.com/users/pickypg/orgs","repos_url":"https://api.github.com/users/pickypg/repos","events_url":"https://api.github.com/users/pickypg/events{/privacy}","received_events_url":"https://api.github.com/users/pickypg/received_events","type":"User","site_admin":false},"labels":[{"id":141145460,"node_id":"MDU6TGFiZWwxNDExNDU0NjA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Mapping","name":":Search/Mapping","color":"0e8a16","default":false,"description":"How fields should be indexed"},{"id":111416437,"node_id":"MDU6TGFiZWwxMTE0MTY0Mzc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/discuss","name":"discuss","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2015-06-27T20:43:54Z","updated_at":"2015-11-21T16:23:18Z","closed_at":"2015-11-21T16:23:18Z","author_association":"MEMBER","active_lock_reason":null,"body":"### Problem\n\nIn Elasticsearch, you can currently support indexing your string data as either `analyzed` strings, which is great for unstructured, full text search, or as `not_analyzed` strings, which is great for structured search (e.g., _exact_ matches). However, there is frequently an in-between where you want exact matches, but you want them to ignore case or accented characters (`AA == aa == Ââ`). This forces the use of analyzers for normalization.\n### Partial Workaround\n\nFor those scenarios, you are currently forced to use the analyzed string variant with a specific analyzer. This generally leads to users forgetting to disable a lot of things like norms, positions, and frequencies. Even if you do happen to do all of that right, you simply cannot take advantage of doc values.\n### Potential Solution\n\nIt would be interesting to potentially rethink strings and how they're mapped. In the case of analyzed strings, there really isn't much need for improvement except potentially the naming of it. For not_analyzed strings, there's a lot of room for improvement.\n#### Mockup\n\n``` json\nPUT /my-index\n{\n  \"mappings\" : {\n    \"my-type\" : {\n      \"properties\" : {\n        \"full_text\" : {\n          \"type\" : \"string\",\n          \"analyzer\" : \"standard\"\n        },\n        \"constant_string\" : {\n          \"type\" : \"constant_string\",\n          \"filter\" : [ \"lowercase\", \"trim\" ],\n          \"char_filter\" : [ \"...\" ]\n        }\n      }\n    }\n  }\n}\n```\n\nNote: the difference is that analyzed strings stay \"string\" and not_analyzed strings become \"constant_string\". It's unlikely that we could easily change from \"string\" for analyzed text, but if we could, then perhaps we could switch analyzed strings to be `text` and not_analyzed strings to be just `string`.\n\nThis avoids a lot of questions and regular problems. It also provides the exact same functionality as we have today, if you choose to not supply a filter or char_filter for constant_strings, but it also provides more flexibility in that users can finally use doc values with filtered text that still can be reasonably sorted and aggregated in a normalized format, without the ability to confusingly tokenize the string and unnecessarily use norms, position, or frequency data.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}