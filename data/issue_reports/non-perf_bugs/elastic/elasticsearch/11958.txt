{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/11958","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11958/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11958/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11958/events","html_url":"https://github.com/elastic/elasticsearch/issues/11958","id":92171812,"node_id":"MDU6SXNzdWU5MjE3MTgxMg==","number":11958,"title":"plugin exceptions that extend ElasticsearchException cannot be serialized","user":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-06-30T18:56:19Z","updated_at":"2015-07-09T18:24:02Z","closed_at":"2015-07-09T18:24:01Z","author_association":"MEMBER","active_lock_reason":null,"body":"After #11910, \"unknown\" exceptions that extend `ElasticsearchException` are not serialized over the wire in their original form. These exceptions are wrapped in a `NotSerializableExceptionWrapper` and serialized this way. \n\nThese exceptions should be serialized in their original form if they implement the constructor with `StreamInput` as the argument. In order to accomplish this, we could do one of the following:\n1. Allow dynamic registering of exceptions to the `MAPPING` map in `ElasticsearchException`\n2. Scan the classpath for classes that extend `ElasticsearchException`\n\nI tend to lean towards number 1 to avoid scanning the classpath and everything that comes with it. There are also other approaches that could be taken. I'm marking this as a blocker as it breaks the functionality of some plugins.\n","closed_by":{"login":"jaymode","id":4339958,"node_id":"MDQ6VXNlcjQzMzk5NTg=","avatar_url":"https://avatars1.githubusercontent.com/u/4339958?v=4","gravatar_id":"","url":"https://api.github.com/users/jaymode","html_url":"https://github.com/jaymode","followers_url":"https://api.github.com/users/jaymode/followers","following_url":"https://api.github.com/users/jaymode/following{/other_user}","gists_url":"https://api.github.com/users/jaymode/gists{/gist_id}","starred_url":"https://api.github.com/users/jaymode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaymode/subscriptions","organizations_url":"https://api.github.com/users/jaymode/orgs","repos_url":"https://api.github.com/users/jaymode/repos","events_url":"https://api.github.com/users/jaymode/events{/privacy}","received_events_url":"https://api.github.com/users/jaymode/received_events","type":"User","site_admin":false},"performed_via_github_app":null}