[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/105974552","html_url":"https://github.com/elastic/elasticsearch/issues/11376#issuecomment-105974552","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11376","id":105974552,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNTk3NDU1Mg==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2015-05-27T15:58:31Z","updated_at":"2015-05-27T15:58:31Z","author_association":"MEMBER","body":"@crutch I suspect that you're experiencing a bug that has been fixed via PR #10263.\n\nSeveral bugs in the `children` agg have been fixed since 1.5.0, can you try to run with the latest 1.5 release?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/105987425","html_url":"https://github.com/elastic/elasticsearch/issues/11376#issuecomment-105987425","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11376","id":105987425,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNTk4NzQyNQ==","user":{"login":"crutch","id":119724,"node_id":"MDQ6VXNlcjExOTcyNA==","avatar_url":"https://avatars0.githubusercontent.com/u/119724?v=4","gravatar_id":"","url":"https://api.github.com/users/crutch","html_url":"https://github.com/crutch","followers_url":"https://api.github.com/users/crutch/followers","following_url":"https://api.github.com/users/crutch/following{/other_user}","gists_url":"https://api.github.com/users/crutch/gists{/gist_id}","starred_url":"https://api.github.com/users/crutch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crutch/subscriptions","organizations_url":"https://api.github.com/users/crutch/orgs","repos_url":"https://api.github.com/users/crutch/repos","events_url":"https://api.github.com/users/crutch/events{/privacy}","received_events_url":"https://api.github.com/users/crutch/received_events","type":"User","site_admin":false},"created_at":"2015-05-27T16:37:48Z","updated_at":"2015-05-27T16:37:48Z","author_association":"NONE","body":"@martijnvg I am sorry to say, but I was able to reproduce the same weird behavior under 1.5.2.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/106282777","html_url":"https://github.com/elastic/elasticsearch/issues/11376#issuecomment-106282777","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11376","id":106282777,"node_id":"MDEyOklzc3VlQ29tbWVudDEwNjI4Mjc3Nw==","user":{"login":"vhyza","id":264954,"node_id":"MDQ6VXNlcjI2NDk1NA==","avatar_url":"https://avatars2.githubusercontent.com/u/264954?v=4","gravatar_id":"","url":"https://api.github.com/users/vhyza","html_url":"https://github.com/vhyza","followers_url":"https://api.github.com/users/vhyza/followers","following_url":"https://api.github.com/users/vhyza/following{/other_user}","gists_url":"https://api.github.com/users/vhyza/gists{/gist_id}","starred_url":"https://api.github.com/users/vhyza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vhyza/subscriptions","organizations_url":"https://api.github.com/users/vhyza/orgs","repos_url":"https://api.github.com/users/vhyza/repos","events_url":"https://api.github.com/users/vhyza/events{/privacy}","received_events_url":"https://api.github.com/users/vhyza/received_events","type":"User","site_admin":false},"created_at":"2015-05-28T11:18:31Z","updated_at":"2015-05-28T11:20:27Z","author_association":"CONTRIBUTOR","body":"I am experiencing similar behaviour on elasticsearch 1.5.2 with `children -> nested -> filter` aggregation with combination of `term filter` on `numeric` field.\n\nAggregation looks like this:\n\n``` json\n{\n  \"aggs\" : {\n    \"variants\" : {\n      \"children\" : {\n        \"type\" : \"variant\"\n      },\n      \"aggs\" : {\n        \"parameters\" : {\n          \"nested\" : {\n            \"path\" : \"variant.parameters\"\n          },\n          \"aggs\" : {\n            \"specifications\" : {\n              \"filters\" : {\n                \"filters\" : {\n                  \"flavour\" : {\n                    \"term\" : {\n                      \"parameters.parameter_id\": 1000\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"size\" : 0\n}\n```\n\nresponse\n\n``` json\n{\n   \"took\": 6,\n   \"timed_out\": false,\n   \"_shards\": {\n      \"total\": 1,\n      \"successful\": 1,\n      \"failed\": 0\n   },\n   \"hits\": {\n      \"total\": 2682,\n      \"max_score\": 0,\n      \"hits\": []\n   },\n   \"aggregations\": {\n      \"variants\": {\n         \"doc_count\": 2682,\n         \"parameters\": {\n            \"doc_count\": 62924,\n            \"specifications\": {\n               \"buckets\": {\n                  \"flavour\": {\n                     \"doc_count\": 0\n                  }\n               }\n            }\n         }\n      }\n   }\n}\n```\n\nWhen I reindexed `parameter_id` as string, everything works as expected (with the same query as above).\n\n``` json\n{\n   \"took\": 5,\n   \"timed_out\": false,\n   \"_shards\": {\n      \"total\": 1,\n      \"successful\": 1,\n      \"failed\": 0\n   },\n   \"hits\": {\n      \"total\": 2682,\n      \"max_score\": 0,\n      \"hits\": []\n   },\n   \"aggregations\": {\n      \"variants\": {\n         \"doc_count\": 2682,\n         \"parameters\": {\n            \"doc_count\": 62924,\n            \"specifications\": {\n               \"buckets\": {\n                  \"flavour\": {\n                     \"doc_count\": 2438\n                  }\n               }\n            }\n         }\n      }\n   }\n}\n```\n\nWhen I changed `term` filter to `match` query filter\n\n``` json\n{\n  \"aggs\" : {\n    \"variants\" : {\n      \"children\" : {\n        \"type\" : \"variant\"\n      },\n      \"aggs\" : {\n        \"parameters\" : {\n          \"nested\" : {\n            \"path\" : \"variant.parameters\"\n          },\n          \"aggs\" : {\n            \"specifications\" : {\n              \"filters\" : {\n                \"filters\" : {\n                  \"flavour\" : {\n                    \"query\" : {\n                      \"match\" : {\n                      \"parameters.parameter_id\": 1000\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"size\" : 0\n}\n```\n\nIt works\n\n``` json\n{\n   \"took\": 11,\n   \"timed_out\": false,\n   \"_shards\": {\n      \"total\": 1,\n      \"successful\": 1,\n      \"failed\": 0\n   },\n   \"hits\": {\n      \"total\": 2682,\n      \"max_score\": 0,\n      \"hits\": []\n   },\n   \"aggregations\": {\n      \"variants\": {\n         \"doc_count\": 2682,\n         \"parameters\": {\n            \"doc_count\": 62924,\n            \"specifications\": {\n               \"buckets\": {\n                  \"flavour\": {\n                     \"doc_count\": 2438\n                  }\n               }\n            }\n         }\n      }\n   }\n}\n```\n\nWith master (95faa35853bff06d14c9071120988c0cba9aae84) build It seems nested aggregation is not working.\n\nQuery\n\n``` json\n{\n  \"aggs\" : {\n    \"variants\" : {\n      \"children\" : {\n        \"type\" : \"variant\"\n      },\n      \"aggs\" : {\n        \"parameters\" : {\n          \"nested\" : {\n            \"path\" : \"variant.parameters\"\n          },\n          \"aggs\" : {\n            \"specifications\" : {\n              \"filters\" : {\n                \"filters\" : {\n                  \"flavour\" : {\n                    \"query\" : {\n                      \"match\" : {\n                      \"parameters.parameter_id\": 1000\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"size\" : 0\n}\n```\n\nreturns\n\n``` json\n{\n   \"took\": 2,\n   \"timed_out\": false,\n   \"_shards\": {\n      \"total\": 1,\n      \"successful\": 1,\n      \"failed\": 0\n   },\n   \"hits\": {\n      \"total\": 2682,\n      \"max_score\": 0,\n      \"hits\": []\n   },\n   \"aggregations\": {\n      \"variants\": {\n         \"doc_count\": 2682,\n         \"parameters\": {\n            \"doc_count\": 0 // here should be 62924\n         }\n      }\n   }\n}\n```\n\nNote that doc_count of parameters aggregations returns 0 instead of 62924 as elasticsearch 1.5.2 did.\n\nWhen I remove `children` aggregation everything works as expected on both 1.5.2 and master (95faa35853bff06d14c9071120988c0cba9aae84) (with both `long` and `string` types)\n\n``` json\n{\n  \"aggs\": {\n    \"parameters\": {\n      \"nested\": {\n        \"path\": \"parameters\"\n      },\n      \"aggs\": {\n        \"specifications\": {\n          \"filters\": {\n            \"filters\": {\n              \"flavour\": {\n                \"query\": {\n                  \"match\": {\n                    \"parameters.parameter_id\": 1000\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"size\": 0\n}\n```\n\nreturns\n\n``` json\n{\n   \"took\": 7,\n   \"timed_out\": false,\n   \"_shards\": {\n      \"total\": 1,\n      \"successful\": 1,\n      \"failed\": 0\n   },\n   \"hits\": {\n      \"total\": 2682,\n      \"max_score\": 0,\n      \"hits\": []\n   },\n   \"aggregations\": {\n      \"parameters\": {\n         \"doc_count\": 62924,\n         \"specifications\": {\n            \"buckets\": {\n               \"flavour\": {\n                  \"doc_count\": 2438\n               }\n            }\n         }\n      }\n   }\n}\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114099217","html_url":"https://github.com/elastic/elasticsearch/issues/11376#issuecomment-114099217","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11376","id":114099217,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDA5OTIxNw==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2015-06-22T13:17:16Z","updated_at":"2015-06-22T13:17:16Z","author_association":"MEMBER","body":"@crutch The issue in the first search request that you have shared is that the type defined in the url is letting the wrapped `nested` aggregator work incorrectly. If you omit the type from the url then the response is as expected:\n\n``` bash\ncurl -XPOST \"http://localhost:9200/nestingtest/_search?pretty\" -d'\n{\n  \"size\" : 0,\n  \"aggs\": {\n    \"to-tasks\": {\n      \"children\": {\n        \"type\": \"tasks\"\n      },\n      \"aggs\": {\n        \"to-events\": {\n          \"nested\": {\n            \"path\": \"events\"\n          },\n          \"aggs\": {\n            \"filtered\": {\n              \"filter\": {\n                \"range\": {\n                  \"events.happened_at.hour\": {\n                    \"gt\": 15\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}'\n```\n\n@vhyza Does removing the type from the url help in your case too?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114117101","html_url":"https://github.com/elastic/elasticsearch/issues/11376#issuecomment-114117101","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11376","id":114117101,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDExNzEwMQ==","user":{"login":"vhyza","id":264954,"node_id":"MDQ6VXNlcjI2NDk1NA==","avatar_url":"https://avatars2.githubusercontent.com/u/264954?v=4","gravatar_id":"","url":"https://api.github.com/users/vhyza","html_url":"https://github.com/vhyza","followers_url":"https://api.github.com/users/vhyza/followers","following_url":"https://api.github.com/users/vhyza/following{/other_user}","gists_url":"https://api.github.com/users/vhyza/gists{/gist_id}","starred_url":"https://api.github.com/users/vhyza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vhyza/subscriptions","organizations_url":"https://api.github.com/users/vhyza/orgs","repos_url":"https://api.github.com/users/vhyza/repos","events_url":"https://api.github.com/users/vhyza/events{/privacy}","received_events_url":"https://api.github.com/users/vhyza/received_events","type":"User","site_admin":false},"created_at":"2015-06-22T14:08:57Z","updated_at":"2015-06-22T14:08:57Z","author_association":"CONTRIBUTOR","body":"@martijnvg Thanks! Yes, when I removed type from url, I got same result as with `match` query filter.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114216025","html_url":"https://github.com/elastic/elasticsearch/issues/11376#issuecomment-114216025","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11376","id":114216025,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDIxNjAyNQ==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2015-06-22T18:46:23Z","updated_at":"2015-06-22T18:46:23Z","author_association":"MEMBER","body":"The `nested` aggregator doesn't work, because the mapping can't be resolved. This is because the search is scoped to the `teams` type and the `tasks.events` object field doesn't exist in that type. This behaviour kind of is understandable, but hard to figure out, because the `nested` aggregator is ignored and just results an empty result.\n\nI've been thinking about this and the best way is just make this kinds of requests fail, so it is clear that the type needs to be removed from the request url. I think we can get this behaviour in when #11806 gets in. The plan is there to by default let `nested` aggregation fail if no nested field can be resolved.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114445861","html_url":"https://github.com/elastic/elasticsearch/issues/11376#issuecomment-114445861","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11376","id":114445861,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDQ0NTg2MQ==","user":{"login":"vhyza","id":264954,"node_id":"MDQ6VXNlcjI2NDk1NA==","avatar_url":"https://avatars2.githubusercontent.com/u/264954?v=4","gravatar_id":"","url":"https://api.github.com/users/vhyza","html_url":"https://github.com/vhyza","followers_url":"https://api.github.com/users/vhyza/followers","following_url":"https://api.github.com/users/vhyza/following{/other_user}","gists_url":"https://api.github.com/users/vhyza/gists{/gist_id}","starred_url":"https://api.github.com/users/vhyza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vhyza/subscriptions","organizations_url":"https://api.github.com/users/vhyza/orgs","repos_url":"https://api.github.com/users/vhyza/repos","events_url":"https://api.github.com/users/vhyza/events{/privacy}","received_events_url":"https://api.github.com/users/vhyza/received_events","type":"User","site_admin":false},"created_at":"2015-06-23T11:06:24Z","updated_at":"2015-06-23T11:06:24Z","author_association":"CONTRIBUTOR","body":"@martijnvg so, it is not a bug? I don't fully understand why (in my case) `match` query filter works and `term` filter does not (or why `parameter_id` indexed as `string` works even with `term` filter)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114481871","html_url":"https://github.com/elastic/elasticsearch/issues/11376#issuecomment-114481871","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11376","id":114481871,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDQ4MTg3MQ==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2015-06-23T12:43:19Z","updated_at":"2015-06-23T12:43:19Z","author_association":"MEMBER","body":"@vhyza No, it is a bug. The bug here is that ES should fail the search request and tell that it couldn't resolve a nested field (or another field), instead of ignoring that and returning no results.\n\nI'm not sure too, because I don't have the mapping and data you used, but this can be explained too by the fact that the mapping can't be resolved because the parent type is used in the url. In the case for term filter it assumes that the field is a string. This causes zero matches because the field is indexed as a number. Strings and numbers are stored differently and filters/queries need to be analysed different in ES to actual be able to match properly. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114560054","html_url":"https://github.com/elastic/elasticsearch/issues/11376#issuecomment-114560054","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11376","id":114560054,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDU2MDA1NA==","user":{"login":"crutch","id":119724,"node_id":"MDQ6VXNlcjExOTcyNA==","avatar_url":"https://avatars0.githubusercontent.com/u/119724?v=4","gravatar_id":"","url":"https://api.github.com/users/crutch","html_url":"https://github.com/crutch","followers_url":"https://api.github.com/users/crutch/followers","following_url":"https://api.github.com/users/crutch/following{/other_user}","gists_url":"https://api.github.com/users/crutch/gists{/gist_id}","starred_url":"https://api.github.com/users/crutch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crutch/subscriptions","organizations_url":"https://api.github.com/users/crutch/orgs","repos_url":"https://api.github.com/users/crutch/repos","events_url":"https://api.github.com/users/crutch/events{/privacy}","received_events_url":"https://api.github.com/users/crutch/received_events","type":"User","site_admin":false},"created_at":"2015-06-23T16:13:40Z","updated_at":"2015-06-23T16:13:40Z","author_association":"NONE","body":"@martijvng thank you for the quick solution for this.\n\nHowever, I do not really understand why ES should fail on a completely\nvalid and correct query. From my point of view, I prefer to scope my query\nto a particular type, just to be sure that I only get results of that type.\nAnd I always thought that this type scope is related only to top-level\ndocument. If I decide to jump to another document type via `has_child` and\nthen use a `nested` filter inside, I do not expect that type scope declared\nin the url to be that sticky and to force ES to declare that it was unable\nto resolve a field here.  I would expect ES to know that the scope has\nchanged for this part of a query.\n\nI understand that this might be difficult to achieve with current\nimplementation and I am OK with your workaround (thank you again for it).\nBut when I as a human can read a query and its interpretation is\nunambiguous, then it should be clear for ES as well.\nOn Jun 23, 2015 2:44 PM, \"Martijn van Groningen\" notifications@github.com\nwrote:\n\n> @vhyza https://github.com/vhyza No, it is a bug. The bug here is that\n> ES should fail the search request and tell that it couldn't resolve a\n> nested field (or another field), instead of ignoring that and returning no\n> results.\n> \n> I'm not sure too, because I don't have the mapping and data you used, but\n> this can be explained too by the fact that the mapping can't be resolved\n> because the parent type is used in the url. In the case for term filter it\n> assumes that the field is a string. This causes zero matches because the\n> field is indexed as a number. Strings and numbers are stored differently\n> and filters/queries need to be analysed different in ES to actual be able\n> to match properly.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/elastic/elasticsearch/issues/11376#issuecomment-114481871\n> .\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114562440","html_url":"https://github.com/elastic/elasticsearch/issues/11376#issuecomment-114562440","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11376","id":114562440,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDU2MjQ0MA==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2015-06-23T16:24:06Z","updated_at":"2015-06-23T16:24:06Z","author_association":"MEMBER","body":"@crutch I see your point and maybe ES shouldn't scope the internal field lookup in the mapping to the type defined in the url. I think the reason this exist, is that today one can define fields in different types in the same index that have the same name, but have different settings and field types. By scoping by type one has control of what actual field is used instead of let ES guess.\n\nActually this mapping characteristic is going to change and #11812 is going to prohibit having fields with same name but with different settings / field types. If that gets in then the type scoping that happens in the _search api during parsing can be removed and the search request that you initially shared should then work.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115712087","html_url":"https://github.com/elastic/elasticsearch/issues/11376#issuecomment-115712087","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11376","id":115712087,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTcxMjA4Nw==","user":{"login":"martijnvg","id":580421,"node_id":"MDQ6VXNlcjU4MDQyMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/580421?v=4","gravatar_id":"","url":"https://api.github.com/users/martijnvg","html_url":"https://github.com/martijnvg","followers_url":"https://api.github.com/users/martijnvg/followers","following_url":"https://api.github.com/users/martijnvg/following{/other_user}","gists_url":"https://api.github.com/users/martijnvg/gists{/gist_id}","starred_url":"https://api.github.com/users/martijnvg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martijnvg/subscriptions","organizations_url":"https://api.github.com/users/martijnvg/orgs","repos_url":"https://api.github.com/users/martijnvg/repos","events_url":"https://api.github.com/users/martijnvg/events{/privacy}","received_events_url":"https://api.github.com/users/martijnvg/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T14:44:24Z","updated_at":"2015-06-26T14:44:24Z","author_association":"MEMBER","body":"@crutch @vhyza The underlying issue (field lookup taking the type in the url into account) has been fixed in master. This got fixed when #11812 got merged in. So your search request will also work with the type specified. \n\nThis issue will not be fixed in 1.x, so for all current released ES versions this workaround needs to be used. When the first 2.0 release gets out the work around will not longer be needed.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115721737","html_url":"https://github.com/elastic/elasticsearch/issues/11376#issuecomment-115721737","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11376","id":115721737,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTcyMTczNw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-06-26T15:08:22Z","updated_at":"2015-06-26T15:08:22Z","author_association":"CONTRIBUTOR","body":"thanks @martijnvg - closing\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/115987575","html_url":"https://github.com/elastic/elasticsearch/issues/11376#issuecomment-115987575","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11376","id":115987575,"node_id":"MDEyOklzc3VlQ29tbWVudDExNTk4NzU3NQ==","user":{"login":"vhyza","id":264954,"node_id":"MDQ6VXNlcjI2NDk1NA==","avatar_url":"https://avatars2.githubusercontent.com/u/264954?v=4","gravatar_id":"","url":"https://api.github.com/users/vhyza","html_url":"https://github.com/vhyza","followers_url":"https://api.github.com/users/vhyza/followers","following_url":"https://api.github.com/users/vhyza/following{/other_user}","gists_url":"https://api.github.com/users/vhyza/gists{/gist_id}","starred_url":"https://api.github.com/users/vhyza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vhyza/subscriptions","organizations_url":"https://api.github.com/users/vhyza/orgs","repos_url":"https://api.github.com/users/vhyza/repos","events_url":"https://api.github.com/users/vhyza/events{/privacy}","received_events_url":"https://api.github.com/users/vhyza/received_events","type":"User","site_admin":false},"created_at":"2015-06-27T08:52:23Z","updated_at":"2015-06-27T08:52:23Z","author_association":"CONTRIBUTOR","body":"thanks @martijnvg!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/116507317","html_url":"https://github.com/elastic/elasticsearch/issues/11376#issuecomment-116507317","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11376","id":116507317,"node_id":"MDEyOklzc3VlQ29tbWVudDExNjUwNzMxNw==","user":{"login":"crutch","id":119724,"node_id":"MDQ6VXNlcjExOTcyNA==","avatar_url":"https://avatars0.githubusercontent.com/u/119724?v=4","gravatar_id":"","url":"https://api.github.com/users/crutch","html_url":"https://github.com/crutch","followers_url":"https://api.github.com/users/crutch/followers","following_url":"https://api.github.com/users/crutch/following{/other_user}","gists_url":"https://api.github.com/users/crutch/gists{/gist_id}","starred_url":"https://api.github.com/users/crutch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crutch/subscriptions","organizations_url":"https://api.github.com/users/crutch/orgs","repos_url":"https://api.github.com/users/crutch/repos","events_url":"https://api.github.com/users/crutch/events{/privacy}","received_events_url":"https://api.github.com/users/crutch/received_events","type":"User","site_admin":false},"created_at":"2015-06-29T07:50:02Z","updated_at":"2015-06-29T07:50:02Z","author_association":"NONE","body":"thanks @martijnvg, looking forward to 2.0\n","performed_via_github_app":null}]