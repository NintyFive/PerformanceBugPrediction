{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/11956","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11956/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11956/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11956/events","html_url":"https://github.com/elastic/elasticsearch/issues/11956","id":92154368,"node_id":"MDU6SXNzdWU5MjE1NDM2OA==","number":11956,"title":"Enable \"Spatial Join\" Aggregations Behavior","user":{"login":"giaconiamark","id":7518558,"node_id":"MDQ6VXNlcjc1MTg1NTg=","avatar_url":"https://avatars3.githubusercontent.com/u/7518558?v=4","gravatar_id":"","url":"https://api.github.com/users/giaconiamark","html_url":"https://github.com/giaconiamark","followers_url":"https://api.github.com/users/giaconiamark/followers","following_url":"https://api.github.com/users/giaconiamark/following{/other_user}","gists_url":"https://api.github.com/users/giaconiamark/gists{/gist_id}","starred_url":"https://api.github.com/users/giaconiamark/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giaconiamark/subscriptions","organizations_url":"https://api.github.com/users/giaconiamark/orgs","repos_url":"https://api.github.com/users/giaconiamark/repos","events_url":"https://api.github.com/users/giaconiamark/events{/privacy}","received_events_url":"https://api.github.com/users/giaconiamark/received_events","type":"User","site_admin":false},"labels":[{"id":141079527,"node_id":"MDU6TGFiZWwxNDEwNzk1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Geo","name":":Analytics/Geo","color":"0e8a16","default":false,"description":"Indexing, search aggregations of geo points and shapes"}],"state":"closed","locked":false,"assignee":{"login":"nknize","id":830187,"node_id":"MDQ6VXNlcjgzMDE4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/830187?v=4","gravatar_id":"","url":"https://api.github.com/users/nknize","html_url":"https://github.com/nknize","followers_url":"https://api.github.com/users/nknize/followers","following_url":"https://api.github.com/users/nknize/following{/other_user}","gists_url":"https://api.github.com/users/nknize/gists{/gist_id}","starred_url":"https://api.github.com/users/nknize/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nknize/subscriptions","organizations_url":"https://api.github.com/users/nknize/orgs","repos_url":"https://api.github.com/users/nknize/repos","events_url":"https://api.github.com/users/nknize/events{/privacy}","received_events_url":"https://api.github.com/users/nknize/received_events","type":"User","site_admin":false},"assignees":[{"login":"nknize","id":830187,"node_id":"MDQ6VXNlcjgzMDE4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/830187?v=4","gravatar_id":"","url":"https://api.github.com/users/nknize","html_url":"https://github.com/nknize","followers_url":"https://api.github.com/users/nknize/followers","following_url":"https://api.github.com/users/nknize/following{/other_user}","gists_url":"https://api.github.com/users/nknize/gists{/gist_id}","starred_url":"https://api.github.com/users/nknize/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nknize/subscriptions","organizations_url":"https://api.github.com/users/nknize/orgs","repos_url":"https://api.github.com/users/nknize/repos","events_url":"https://api.github.com/users/nknize/events{/privacy}","received_events_url":"https://api.github.com/users/nknize/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2015-06-30T17:39:59Z","updated_at":"2015-07-10T14:26:59Z","closed_at":"2015-07-10T10:06:34Z","author_association":"NONE","active_lock_reason":null,"body":"Sorry for the horrible title. Since a geohash aggregation is not possible with geo_shape type items in an index (which makes sense), I would like to be able to produce a count of features (geoshapes) that intersect another \"layer\" of features (which can be in the form of another query or a different index).\nHere is a sql equivalent to illustrate what I'm trying to do.\n\nSELECT\na.id, \na.thePolygonGeom,\nCOUNT(b.id) as cnt\nFROM a \nINNER JOIN b\nON st_intersects(a.geom, b.geom) \nGROUP BY a.id,a.thePolygonGeom;\n\nin this example, table A would be the geohash grid.\n\nThis way I could load an index with a pregenerated geohash grid shapefile, and dynamically intersect other geoshapes for stats at different levels.\n\nlet me know if this is a dumb idea, or if it's already possible.\n","closed_by":{"login":"colings86","id":236731,"node_id":"MDQ6VXNlcjIzNjczMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/236731?v=4","gravatar_id":"","url":"https://api.github.com/users/colings86","html_url":"https://github.com/colings86","followers_url":"https://api.github.com/users/colings86/followers","following_url":"https://api.github.com/users/colings86/following{/other_user}","gists_url":"https://api.github.com/users/colings86/gists{/gist_id}","starred_url":"https://api.github.com/users/colings86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colings86/subscriptions","organizations_url":"https://api.github.com/users/colings86/orgs","repos_url":"https://api.github.com/users/colings86/repos","events_url":"https://api.github.com/users/colings86/events{/privacy}","received_events_url":"https://api.github.com/users/colings86/received_events","type":"User","site_admin":false},"performed_via_github_app":null}