{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/11411","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11411/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11411/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11411/events","html_url":"https://github.com/elastic/elasticsearch/issues/11411","id":82348626,"node_id":"MDU6SXNzdWU4MjM0ODYyNg==","number":11411,"title":"query string does not take field analyzer into account","user":{"login":"MarneusCalgarXP","id":1315177,"node_id":"MDQ6VXNlcjEzMTUxNzc=","avatar_url":"https://avatars3.githubusercontent.com/u/1315177?v=4","gravatar_id":"","url":"https://api.github.com/users/MarneusCalgarXP","html_url":"https://github.com/MarneusCalgarXP","followers_url":"https://api.github.com/users/MarneusCalgarXP/followers","following_url":"https://api.github.com/users/MarneusCalgarXP/following{/other_user}","gists_url":"https://api.github.com/users/MarneusCalgarXP/gists{/gist_id}","starred_url":"https://api.github.com/users/MarneusCalgarXP/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarneusCalgarXP/subscriptions","organizations_url":"https://api.github.com/users/MarneusCalgarXP/orgs","repos_url":"https://api.github.com/users/MarneusCalgarXP/repos","events_url":"https://api.github.com/users/MarneusCalgarXP/events{/privacy}","received_events_url":"https://api.github.com/users/MarneusCalgarXP/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-05-29T09:23:23Z","updated_at":"2018-02-14T13:39:24Z","closed_at":"2015-06-01T09:33:23Z","author_association":"NONE","active_lock_reason":null,"body":"I define a mapping with a simple text field, with two analyzers:\n- index_analyzer : a ngram indexer, with stop words and whitespace tokenizer\n- index_searcher : a analyzer, with the same elision, stop words, and same tokenizer, but without ngram\n\nI index the french text **\"part de reve\"**\n- \"de\" is a word that belongs to stop words\n- the ngram indexes all ngram tokens from words \"part\" and \"reve\".\n\nWhen I search (using query string) the string **\"part de reve\"** (using AND operator), the query returns nothing.\nI have to search **\"part reve\"** (without \"de\") to retrieve my data ==> the stop word is not removed from query.\n\nHere is the whole example:\n-    DELETE test\n-    PUT test\n\n``` javascript\n{\n  \"analysis\" : {\n    \"analyzer\" : {\n      \"ngram_indexer\" : {\n        \"tokenizer\" : \"whitespace\",\n        \"char_filter\" : [\"my_mapping\"],\n        \"filter\" : [\n          \"stop_francais\",\n          \"substring\"\n        ]\n      },\n      \"ngram_searcher\" : {\n        \"tokenizer\" : \"whitespace\",\n        \"char_filter\" : [\"my_mapping\"],\n        \"filter\" : [\n          \"stop_francais\"\n        ]\n      }\n    },\n    \"filter\" : {\n      \"stop_francais\": {\n        \"stopwords\": [\n          \"_french_\", \"a\"\n        ],\n        \"type\": \"stop\" ,\n        \"remove_trailing\": false\n      },\n      \"substring\" : {\n        \"type\" : \"nGram\",\n        \"min_gram\" : 1,\n        \"max_gram\"  : 40\n      }\n    },\n    \"char_filter\" : {\n      \"my_mapping\" : {\n        \"type\" : \"mapping\",\n        \"mappings\" : [\"&=>et\", \"+=>plus\", \"-=>\\\\u0020\"]\n      }\n    }\n  }\n}\n```\n- PUT test/test/_mapping\n\n``` javascript\n{\n  \"test\": {\n    \"properties\": {\n      \"name\": {\n        \"type\": \"string\",\n        \"index\": \"analyzed\",\n        \"search_analyzer\": \"ngram_searcher\",\n        \"index_analyzer\": \"ngram_indexer\"\n      }\n    }\n  }\n}\n```\n- PUT test/test/1\n\n``` javascript\n{\n  \"id\": 1,\n  \"name\" : \"part de reve\"\n}\n```\n- GET test/test/_search\n\n``` javascript\n{\n  \"from\": 0,\n  \"size\": 10,\n  \"query\": {\n    \"query_string\": {\n      \"query\": \"part de reve\",\n      \"default_field\": \"name\",\n      \"default_operator\": \"and\"\n    }\n  }\n}\n```\n\n==> it does not return the inserted record.\n(use \"part reve\" as query string and it returns the inserted record)\n","closed_by":{"login":"MarneusCalgarXP","id":1315177,"node_id":"MDQ6VXNlcjEzMTUxNzc=","avatar_url":"https://avatars3.githubusercontent.com/u/1315177?v=4","gravatar_id":"","url":"https://api.github.com/users/MarneusCalgarXP","html_url":"https://github.com/MarneusCalgarXP","followers_url":"https://api.github.com/users/MarneusCalgarXP/followers","following_url":"https://api.github.com/users/MarneusCalgarXP/following{/other_user}","gists_url":"https://api.github.com/users/MarneusCalgarXP/gists{/gist_id}","starred_url":"https://api.github.com/users/MarneusCalgarXP/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarneusCalgarXP/subscriptions","organizations_url":"https://api.github.com/users/MarneusCalgarXP/orgs","repos_url":"https://api.github.com/users/MarneusCalgarXP/repos","events_url":"https://api.github.com/users/MarneusCalgarXP/events{/privacy}","received_events_url":"https://api.github.com/users/MarneusCalgarXP/received_events","type":"User","site_admin":false},"performed_via_github_app":null}