[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/40072518","html_url":"https://github.com/elastic/elasticsearch/issues/5760#issuecomment-40072518","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5760","id":40072518,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMDcyNTE4","user":{"login":"uboness","id":211019,"node_id":"MDQ6VXNlcjIxMTAxOQ==","avatar_url":"https://avatars3.githubusercontent.com/u/211019?v=4","gravatar_id":"","url":"https://api.github.com/users/uboness","html_url":"https://github.com/uboness","followers_url":"https://api.github.com/users/uboness/followers","following_url":"https://api.github.com/users/uboness/following{/other_user}","gists_url":"https://api.github.com/users/uboness/gists{/gist_id}","starred_url":"https://api.github.com/users/uboness/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uboness/subscriptions","organizations_url":"https://api.github.com/users/uboness/orgs","repos_url":"https://api.github.com/users/uboness/repos","events_url":"https://api.github.com/users/uboness/events{/privacy}","received_events_url":"https://api.github.com/users/uboness/received_events","type":"User","site_admin":false},"created_at":"2014-04-10T12:36:36Z","updated_at":"2014-04-10T12:36:36Z","author_association":"CONTRIBUTOR","body":"instead using `fquery` try it with `term` filter\n\n```\nPOST users/_search?search_type=count\n{\n   \"aggs\": {\n      \"skills\": {\n         \"filter\": {\n            \"nested\" : {\n                \"path\" : \"skills\",\n                \"filter\" : { \"term\" : { \"@name\" : \"plumber\" } }\n            }\n         }\n      },\n      \"people\": {\n         \"filter\": { \"term\" : { \"@name\" : \"plumber\" }}\n      }\n   }\n}\n```\n\nThe `terms` filter is more appropriate for these type of filtering, but it's also an exact match (text analysis is not applied). If you do want text analysis, you can use the `fquery` and explicitly cache it by setting `_cache` to `true`:\n\n```\n...\n\"fquery\": {\n   \"_cache\" : true,\n   \"query\": {\n      \"nested\": {\n         \"path\": \"skills\",\n         \"query\": {\n            \"match\": {\n               \"@name\": \"plumber\"\n            }\n         }\n      }\n   }\n}\n...\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/40074560","html_url":"https://github.com/elastic/elasticsearch/issues/5760#issuecomment-40074560","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5760","id":40074560,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMDc0NTYw","user":{"login":"karol-gwaj","id":1188157,"node_id":"MDQ6VXNlcjExODgxNTc=","avatar_url":"https://avatars3.githubusercontent.com/u/1188157?v=4","gravatar_id":"","url":"https://api.github.com/users/karol-gwaj","html_url":"https://github.com/karol-gwaj","followers_url":"https://api.github.com/users/karol-gwaj/followers","following_url":"https://api.github.com/users/karol-gwaj/following{/other_user}","gists_url":"https://api.github.com/users/karol-gwaj/gists{/gist_id}","starred_url":"https://api.github.com/users/karol-gwaj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karol-gwaj/subscriptions","organizations_url":"https://api.github.com/users/karol-gwaj/orgs","repos_url":"https://api.github.com/users/karol-gwaj/repos","events_url":"https://api.github.com/users/karol-gwaj/events{/privacy}","received_events_url":"https://api.github.com/users/karol-gwaj/received_events","type":"User","site_admin":false},"created_at":"2014-04-10T13:00:12Z","updated_at":"2014-04-10T13:00:12Z","author_association":"NONE","body":"yep, im aware that `term` filter is faster than `match` filter\nsadly in my case i need to use `match` filter\n\nalso this issue is about performance of what looks like similar queries (under the hood they should be doing more or less this same)\n\nso why when used in aggregation, the query is 10 times slower?\n\nbtw, setting _cache to true didnt make any visible difference\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/40111670","html_url":"https://github.com/elastic/elasticsearch/issues/5760#issuecomment-40111670","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5760","id":40111670,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMTExNjcw","user":{"login":"uboness","id":211019,"node_id":"MDQ6VXNlcjIxMTAxOQ==","avatar_url":"https://avatars3.githubusercontent.com/u/211019?v=4","gravatar_id":"","url":"https://api.github.com/users/uboness","html_url":"https://github.com/uboness","followers_url":"https://api.github.com/users/uboness/followers","following_url":"https://api.github.com/users/uboness/following{/other_user}","gists_url":"https://api.github.com/users/uboness/gists{/gist_id}","starred_url":"https://api.github.com/users/uboness/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uboness/subscriptions","organizations_url":"https://api.github.com/users/uboness/orgs","repos_url":"https://api.github.com/users/uboness/repos","events_url":"https://api.github.com/users/uboness/events{/privacy}","received_events_url":"https://api.github.com/users/uboness/received_events","type":"User","site_admin":false},"created_at":"2014-04-10T17:11:21Z","updated_at":"2014-04-10T17:11:21Z","author_association":"CONTRIBUTOR","body":"well.. the `aggs` only request is executed with an implicit `match_all` query... so all the docs are evaluated and the filtering is only done in the agg. With the query request, not all docs are evaluated. The reason I mentioned the `term` filter a is that the `term` filter caches which can boost things up. But that won't change the fact that you're still eval'ing all the docs.... now the more sparse the value you're looking for is (among the docs), the bigger the difference will be between these two requests... the less sparse, the closer they'll be in their execution cost\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/40122959","html_url":"https://github.com/elastic/elasticsearch/issues/5760#issuecomment-40122959","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/5760","id":40122959,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMTIyOTU5","user":{"login":"karol-gwaj","id":1188157,"node_id":"MDQ6VXNlcjExODgxNTc=","avatar_url":"https://avatars3.githubusercontent.com/u/1188157?v=4","gravatar_id":"","url":"https://api.github.com/users/karol-gwaj","html_url":"https://github.com/karol-gwaj","followers_url":"https://api.github.com/users/karol-gwaj/followers","following_url":"https://api.github.com/users/karol-gwaj/following{/other_user}","gists_url":"https://api.github.com/users/karol-gwaj/gists{/gist_id}","starred_url":"https://api.github.com/users/karol-gwaj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karol-gwaj/subscriptions","organizations_url":"https://api.github.com/users/karol-gwaj/orgs","repos_url":"https://api.github.com/users/karol-gwaj/repos","events_url":"https://api.github.com/users/karol-gwaj/events{/privacy}","received_events_url":"https://api.github.com/users/karol-gwaj/received_events","type":"User","site_admin":false},"created_at":"2014-04-10T18:45:08Z","updated_at":"2014-04-10T18:45:08Z","author_association":"NONE","body":"ok, i see your point\n\ni included filters from aggs into query (so it is not evaluating all documents anymore):\n\n```\nPOST users/_search?search_type=count\n{\n   \"query\": {\n      \"bool\": {\n         \"should\": [\n            {\n               \"nested\": {\n                  \"path\": \"skills\",\n                  \"query\": {\n                     \"match\": {\n                        \"@name\": \"plumber\"                    \n                     }\n                  }\n               }\n            },\n            {\n               \"match\": {\n                  \"@name\": \"plumber\"                  \n               }\n            }\n         ]\n      }\n   },\n   \"aggs\": {\n      \"skills\": {\n         \"filter\": {\n            \"fquery\": {\n               \"query\": {\n                  \"nested\": {\n                     \"path\": \"skills\",\n                     \"query\": {\n                        \"match\": {\n                           \"@name\": \"plumber\"\n                        }\n                     }\n                  }\n               }\n            }\n         }\n      },\n      \"people\": {\n         \"filter\": {\n            \"fquery\": {\n               \"query\": {\n                  \"match\": {\n                     \"@name\": \"plumber\"\n                  }\n               }\n            }\n         }\n      }\n   }\n}\n```\n\nand it takes now more or less this same time as running both queries separately\n\nthx,\n","performed_via_github_app":null}]