[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/663954731","html_url":"https://github.com/elastic/elasticsearch/issues/60177#issuecomment-663954731","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60177","id":663954731,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Mzk1NDczMQ==","user":{"login":"liutao053877","id":8800462,"node_id":"MDQ6VXNlcjg4MDA0NjI=","avatar_url":"https://avatars0.githubusercontent.com/u/8800462?v=4","gravatar_id":"","url":"https://api.github.com/users/liutao053877","html_url":"https://github.com/liutao053877","followers_url":"https://api.github.com/users/liutao053877/followers","following_url":"https://api.github.com/users/liutao053877/following{/other_user}","gists_url":"https://api.github.com/users/liutao053877/gists{/gist_id}","starred_url":"https://api.github.com/users/liutao053877/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liutao053877/subscriptions","organizations_url":"https://api.github.com/users/liutao053877/orgs","repos_url":"https://api.github.com/users/liutao053877/repos","events_url":"https://api.github.com/users/liutao053877/events{/privacy}","received_events_url":"https://api.github.com/users/liutao053877/received_events","type":"User","site_admin":false},"created_at":"2020-07-26T07:53:46Z","updated_at":"2020-07-26T07:53:46Z","author_association":"NONE","body":"I guess when I fetch the field data as the code \"String sentence=(String)leafLookup.source().get(\"fieldname\");\",it cost so much times but I do not know how to solve it .","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/663954973","html_url":"https://github.com/elastic/elasticsearch/issues/60177#issuecomment-663954973","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60177","id":663954973,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Mzk1NDk3Mw==","user":{"login":"liutao053877","id":8800462,"node_id":"MDQ6VXNlcjg4MDA0NjI=","avatar_url":"https://avatars0.githubusercontent.com/u/8800462?v=4","gravatar_id":"","url":"https://api.github.com/users/liutao053877","html_url":"https://github.com/liutao053877","followers_url":"https://api.github.com/users/liutao053877/followers","following_url":"https://api.github.com/users/liutao053877/following{/other_user}","gists_url":"https://api.github.com/users/liutao053877/gists{/gist_id}","starred_url":"https://api.github.com/users/liutao053877/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liutao053877/subscriptions","organizations_url":"https://api.github.com/users/liutao053877/orgs","repos_url":"https://api.github.com/users/liutao053877/repos","events_url":"https://api.github.com/users/liutao053877/events{/privacy}","received_events_url":"https://api.github.com/users/liutao053877/received_events","type":"User","site_admin":false},"created_at":"2020-07-26T07:55:58Z","updated_at":"2020-07-26T07:55:58Z","author_association":"NONE","body":"The key code here,very simple:\r\n\r\npackage com.esplugin.demo;\r\n\r\nimport org.apache.lucene.index.LeafReaderContext;\r\nimport org.apache.lucene.index.PostingsEnum;\r\nimport org.apache.lucene.index.Term;\r\nimport org.elasticsearch.common.settings.Settings;\r\nimport org.elasticsearch.plugins.Plugin;\r\nimport org.elasticsearch.plugins.ScriptPlugin;\r\nimport org.elasticsearch.script.ScoreScript;\r\nimport org.elasticsearch.script.ScoreScript.LeafFactory;\r\nimport org.elasticsearch.script.ScriptContext;\r\nimport org.elasticsearch.script.ScriptEngine;\r\nimport org.elasticsearch.search.lookup.SearchLookup;\r\n\r\nimport java.io.IOException;\r\nimport java.io.UncheckedIOException;\r\nimport java.util.Collection;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\nimport org.apache.logging.log4j.LogManager;\r\nimport org.apache.logging.log4j.Logger;\r\nimport org.apache.lucene.search.Scorer;\r\n\r\nimport com.pingan.llx.es.util.MyBM25FSimilarity;\r\n\r\npublic class MyScriptEngine implements ScriptEngine {\r\nprivate final static Logger logger = LogManager.getLogger(MyRankPlugin.class);\r\npublic static String type=\"MyRankPlugin\";\r\n@Override\r\npublic String getType() {\r\nreturn type;\r\n}\r\n\r\n@Override\r\npublic <T> T compile(String scriptName, String scriptSource,\r\n                     ScriptContext<T> context, Map<String, String> params) {\r\n    if (context.equals(ScoreScript.CONTEXT) == false) {\r\n        throw new IllegalArgumentException(getType()\r\n                + \" scripts cannot be used for context [\"\r\n                + context.name + \"]\");\r\n    }\r\n    // we use the script \"source\" as the script identifier\r\n    if (type.equals(scriptSource)) {\r\n        ScoreScript.Factory factory = PureDfLeafFactory::new;\r\n        return context.factoryClazz.cast(factory);\r\n    }\r\n    throw new IllegalArgumentException(\"Unknown script name \"\r\n            + scriptSource);\r\n}\r\n\r\n@Override\r\npublic void close() {\r\n    // optionally close resources\r\n}\r\n\r\nprivate static class PureDfLeafFactory implements LeafFactory {\r\n    private final Map<String, Object> params;\r\n    private final SearchLookup lookup;\r\n    private  MyBM25FSimilarity myBM25=new MyBM25FSimilarity();\r\n\r\n    private PureDfLeafFactory(\r\n            Map<String, Object> params, SearchLookup lookup) {\r\n        if (params.containsKey(\"query\") == false) {\r\n            throw new IllegalArgumentException(\r\n                    \"Missing parameter [query]\");\r\n        }\r\n        if (params.containsKey(\"f\") == false) {\r\n            throw new IllegalArgumentException(\r\n                    \"Missing parameter [f]\");\r\n        }\r\n        this.params = params;\r\n        this.lookup = lookup;\r\n    }\r\n\r\n    @Override\r\n    public boolean needs_score() {\r\n        return false;  // Return true if the script needs the score\r\n    }\r\n\r\n    @Override\r\n    public ScoreScript newInstance(LeafReaderContext context)\r\n            throws IOException {\r\n            /*\r\n             * the field and/or term don't exist in this segment,\r\n             * so always return 0\r\n             */\r\n            return new ScoreScript(params, lookup, context) {\r\n\r\n                @Override\r\n                public double execute() {\r\n                    try {\r\n\r\n                        String query = params.get(\"query\").toString();\r\n                        String f=params.get(\"f\").toString();\r\n                        //logger.info(\"this is query value2 : {}  {}\", query,f);\r\n\r\n                        String sentence = (String) lookup.source().get(f);\r\n                        //logger.info(\"this is sentence : {}\", sentence);\r\n\r\n                        double score = myBM25.score(query, sentence);\r\n                        //logger.info(\"this is query value2 : {},{},{},{}\", query,sentence,String.valueOf(score),String.valueOf(rawScore));\r\n                        //this.setScorer(score);\r\n                        return score;\r\n                    }catch(Exception e){\r\n                        e.printStackTrace();\r\n                    }\r\n                    return 0;\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/664187037","html_url":"https://github.com/elastic/elasticsearch/issues/60177#issuecomment-664187037","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/60177","id":664187037,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDE4NzAzNw==","user":{"login":"jimczi","id":15977469,"node_id":"MDQ6VXNlcjE1OTc3NDY5","avatar_url":"https://avatars0.githubusercontent.com/u/15977469?v=4","gravatar_id":"","url":"https://api.github.com/users/jimczi","html_url":"https://github.com/jimczi","followers_url":"https://api.github.com/users/jimczi/followers","following_url":"https://api.github.com/users/jimczi/following{/other_user}","gists_url":"https://api.github.com/users/jimczi/gists{/gist_id}","starred_url":"https://api.github.com/users/jimczi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimczi/subscriptions","organizations_url":"https://api.github.com/users/jimczi/orgs","repos_url":"https://api.github.com/users/jimczi/repos","events_url":"https://api.github.com/users/jimczi/events{/privacy}","received_events_url":"https://api.github.com/users/jimczi/received_events","type":"User","site_admin":false},"created_at":"2020-07-27T08:03:39Z","updated_at":"2020-07-27T08:03:39Z","author_association":"MEMBER","body":"Thanks for reporting @liutao053877. Your question is better suited for the discuss forum where you already have some suggestions to speed up your rescorer. As such I hope you don't mind if I close this issue and continue the discussion in the forum.","performed_via_github_app":null}]