[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/190203776","html_url":"https://github.com/elastic/elasticsearch/issues/16853#issuecomment-190203776","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16853","id":190203776,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MDIwMzc3Ng==","user":{"login":"ebuildy","id":1219817,"node_id":"MDQ6VXNlcjEyMTk4MTc=","avatar_url":"https://avatars0.githubusercontent.com/u/1219817?v=4","gravatar_id":"","url":"https://api.github.com/users/ebuildy","html_url":"https://github.com/ebuildy","followers_url":"https://api.github.com/users/ebuildy/followers","following_url":"https://api.github.com/users/ebuildy/following{/other_user}","gists_url":"https://api.github.com/users/ebuildy/gists{/gist_id}","starred_url":"https://api.github.com/users/ebuildy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ebuildy/subscriptions","organizations_url":"https://api.github.com/users/ebuildy/orgs","repos_url":"https://api.github.com/users/ebuildy/repos","events_url":"https://api.github.com/users/ebuildy/events{/privacy}","received_events_url":"https://api.github.com/users/ebuildy/received_events","type":"User","site_admin":false},"created_at":"2016-02-29T13:10:12Z","updated_at":"2016-02-29T13:10:12Z","author_association":"CONTRIBUTOR","body":"Hmmmmmm\n\nCan you post your method and machine configuration please?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/190261060","html_url":"https://github.com/elastic/elasticsearch/issues/16853#issuecomment-190261060","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16853","id":190261060,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MDI2MTA2MA==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2016-02-29T15:39:58Z","updated_at":"2016-02-29T16:00:39Z","author_association":"MEMBER","body":"> It seems complexity of this operation is O(n) that makes no sense.\n\nEvery alias change requires a cluster state update. Cluster state updates are published using cluster state diffs. The diff is [calculated](https://github.com/elastic/elasticsearch/blob/b83b9d69c9187ed969853fdcec3cadc7d67be56f/core/src/main/java/org/elasticsearch/cluster/DiffableUtils.java#L228-L232) by checking every existing alias the before cluster state, and whether or not it has been removed in the after cluster state. This is clearly linear, so it makes perfect sense. The benefit of sending cluster state diffs vastly outweighs the advantages of not executing this linear time operation, especially since having 100000 aliases is an anti-pattern. What is more, even if this linear diff operation was removed, the published cluster state updates grow linearly in the number of aliases.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/190609825","html_url":"https://github.com/elastic/elasticsearch/issues/16853#issuecomment-190609825","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16853","id":190609825,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MDYwOTgyNQ==","user":{"login":"malaki12003","id":4834695,"node_id":"MDQ6VXNlcjQ4MzQ2OTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4834695?v=4","gravatar_id":"","url":"https://api.github.com/users/malaki12003","html_url":"https://github.com/malaki12003","followers_url":"https://api.github.com/users/malaki12003/followers","following_url":"https://api.github.com/users/malaki12003/following{/other_user}","gists_url":"https://api.github.com/users/malaki12003/gists{/gist_id}","starred_url":"https://api.github.com/users/malaki12003/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malaki12003/subscriptions","organizations_url":"https://api.github.com/users/malaki12003/orgs","repos_url":"https://api.github.com/users/malaki12003/repos","events_url":"https://api.github.com/users/malaki12003/events{/privacy}","received_events_url":"https://api.github.com/users/malaki12003/received_events","type":"User","site_admin":false},"created_at":"2016-03-01T08:25:33Z","updated_at":"2016-03-01T08:29:34Z","author_association":"NONE","body":"In my snippet of code I make requests in serialized form (one by one). For the first request it takes around 10 ms and in a linear growth, it goes up to 170 ms for 40000th request. I need to create requests on demand, this is why I can't use bulk format. Please note that in the simple test case, I dedicated a machine that provided with 16 gig ram and a fast SSD hard without any Cluster configuration and other loads. So, it  seems that the problem is not related to clustering. In real situation, it event can be worse.I have 2 clustered servers in production and more than 100000 Alias that are made on them. I found for some requests, latency is up to 40s. I really think it is not acceptable.\nThe elastic version is 2.1.1 with 100 shards. The problem is just for Alias operations (create/delete) and other operations like indexing& searching work well. In fact, I have a web application with more than 500000 users. I make a routing policy through aliasing for each user. For each user request I check that wheather the alias is create for the user or not. If there is no alias for the user, I make an alias request. What is your suggestion? \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/190720261","html_url":"https://github.com/elastic/elasticsearch/issues/16853#issuecomment-190720261","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16853","id":190720261,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MDcyMDI2MQ==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2016-03-01T13:16:46Z","updated_at":"2016-03-01T13:16:46Z","author_association":"MEMBER","body":"> The elastic version is 2.1.1 with 100 shards.\n\nOn two nodes, for a single index? If my reading of this situation is correct, that strikes me as another anti-pattern.\n\n> What is your suggestion?\n\nI think that you should use filters directly on each request. With the information that you've given so far, I doubt that the routing is necessary.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/190731065","html_url":"https://github.com/elastic/elasticsearch/issues/16853#issuecomment-190731065","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16853","id":190731065,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MDczMTA2NQ==","user":{"login":"malaki12003","id":4834695,"node_id":"MDQ6VXNlcjQ4MzQ2OTU=","avatar_url":"https://avatars0.githubusercontent.com/u/4834695?v=4","gravatar_id":"","url":"https://api.github.com/users/malaki12003","html_url":"https://github.com/malaki12003","followers_url":"https://api.github.com/users/malaki12003/followers","following_url":"https://api.github.com/users/malaki12003/following{/other_user}","gists_url":"https://api.github.com/users/malaki12003/gists{/gist_id}","starred_url":"https://api.github.com/users/malaki12003/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malaki12003/subscriptions","organizations_url":"https://api.github.com/users/malaki12003/orgs","repos_url":"https://api.github.com/users/malaki12003/repos","events_url":"https://api.github.com/users/malaki12003/events{/privacy}","received_events_url":"https://api.github.com/users/malaki12003/received_events","type":"User","site_admin":false},"created_at":"2016-03-01T13:52:31Z","updated_at":"2016-03-01T14:12:57Z","author_association":"NONE","body":"I have 1 index, 100 shards and a routing policy based on user ids like the following example:\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/indices-aliases.html#_examples_2\nThere are more than 500000 users in my system. So, absolutely I need routing parameter. According to this information,what is your suggestion?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/190816936","html_url":"https://github.com/elastic/elasticsearch/issues/16853#issuecomment-190816936","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16853","id":190816936,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MDgxNjkzNg==","user":{"login":"jasontedor","id":4744941,"node_id":"MDQ6VXNlcjQ3NDQ5NDE=","avatar_url":"https://avatars3.githubusercontent.com/u/4744941?v=4","gravatar_id":"","url":"https://api.github.com/users/jasontedor","html_url":"https://github.com/jasontedor","followers_url":"https://api.github.com/users/jasontedor/followers","following_url":"https://api.github.com/users/jasontedor/following{/other_user}","gists_url":"https://api.github.com/users/jasontedor/gists{/gist_id}","starred_url":"https://api.github.com/users/jasontedor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasontedor/subscriptions","organizations_url":"https://api.github.com/users/jasontedor/orgs","repos_url":"https://api.github.com/users/jasontedor/repos","events_url":"https://api.github.com/users/jasontedor/events{/privacy}","received_events_url":"https://api.github.com/users/jasontedor/received_events","type":"User","site_admin":false},"created_at":"2016-03-01T17:05:58Z","updated_at":"2016-03-01T17:05:58Z","author_association":"MEMBER","body":"> I have 1 index, 100 shards and a routing policy based on user ids like the following example: https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-aliases.html#_examples_2\n\nThat is way too many shards for a single index on one or two machines. You'll be fine if you drop this to something more reasonable like two shards. As a bonanza, you can almost surely drop the custom routing.\n\nI'm also sorry that the documentation has led you astray here. :(\n\n> There are more than 500000 users in my system. So, absolutely I need routing parameter.\n\nI don't think that you do, but I could be wrong. Why do you think that you do?\n\n> According to this information,what is your suggestion?\n\nI think that you should drop the number of shards to two, I think that you do not need to use custom routing, and I think that instead of using aliases you should use a filter.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/191175495","html_url":"https://github.com/elastic/elasticsearch/issues/16853#issuecomment-191175495","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16853","id":191175495,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTE3NTQ5NQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2016-03-02T10:32:21Z","updated_at":"2016-03-02T10:32:21Z","author_association":"CONTRIBUTOR","body":"> There are more than 500000 users in my system.\n\n@malaki12003 we have long spoken about faking an index-per-user using aliases, but this phrasing was ill chosen as it makes people believe that aliases are free and will scale infinitely.\n\nUnfortunately the truth is more prosaic.  As you have found, alias creation scales linearly.  Frankly, I'm impressed that you got to 100k!  In earlier versions we struggled to get over 10k.\n\nThis model works with small numbers of \"users\" (perhaps we should talk about index-per-tenant instead?) but at the scale you're talking about, you'll have to take a different approach.  The problem with aliases is that they are held in memory all the time on every node.  But you don't have all 500k users on your site at the same time.  Instead, you could move this logic client side and use the user_id to add a routing value and filter to every request.\n\nRegarding the number of shards you have, ie 100.  Think about this carefully.  You're saying that you plan to grow to a cluster with 100 nodes, just for the primary shards.  Another 100-200 nodes for the replicas. Do you really plan on a cluster of 300 nodes?  And you're sure that you will never reindex (eg to change your mappings) while growing from two nodes to 300?\n\nMy suggestion is to start with a more realistic number of shards like 5 or 10.\n","performed_via_github_app":null}]