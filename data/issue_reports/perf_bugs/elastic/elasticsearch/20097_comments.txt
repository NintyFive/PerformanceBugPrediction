[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241411701","html_url":"https://github.com/elastic/elasticsearch/issues/20097#issuecomment-241411701","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20097","id":241411701,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTQxMTcwMQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-08-22T13:26:42Z","updated_at":"2016-08-22T13:26:42Z","author_association":"CONTRIBUTOR","body":"I am wondering that the difference might be related to how Groovy compiles the script, using a primitive type in 2.0.0 and slow big decimals in 2.3.3. Can you capture some [hot threads](https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-nodes-hot-threads.html) while the query is running? Also can you try to modify your `map` script to force `result` to be a `double` rather than a BigDecimal?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241454025","html_url":"https://github.com/elastic/elasticsearch/issues/20097#issuecomment-241454025","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20097","id":241454025,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTQ1NDAyNQ==","user":{"login":"Hexer338","id":9653791,"node_id":"MDQ6VXNlcjk2NTM3OTE=","avatar_url":"https://avatars3.githubusercontent.com/u/9653791?v=4","gravatar_id":"","url":"https://api.github.com/users/Hexer338","html_url":"https://github.com/Hexer338","followers_url":"https://api.github.com/users/Hexer338/followers","following_url":"https://api.github.com/users/Hexer338/following{/other_user}","gists_url":"https://api.github.com/users/Hexer338/gists{/gist_id}","starred_url":"https://api.github.com/users/Hexer338/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hexer338/subscriptions","organizations_url":"https://api.github.com/users/Hexer338/orgs","repos_url":"https://api.github.com/users/Hexer338/repos","events_url":"https://api.github.com/users/Hexer338/events{/privacy}","received_events_url":"https://api.github.com/users/Hexer338/received_events","type":"User","site_admin":false},"created_at":"2016-08-22T15:39:19Z","updated_at":"2016-08-22T15:39:19Z","author_association":"NONE","body":"Forcing `result` to be `double` seems to be fixing the issue. Queries are much faster now.\n\n[Here is the gist containing `hot threads` for both cases (not forcing `result` to double, forcing `result` to double)](https://gist.github.com/Hexer338/5f117879cb211d90cf65ce9c0e61844b) \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241464506","html_url":"https://github.com/elastic/elasticsearch/issues/20097#issuecomment-241464506","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20097","id":241464506,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTQ2NDUwNg==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2016-08-22T16:11:48Z","updated_at":"2016-08-22T16:11:48Z","author_association":"CONTRIBUTOR","body":"The reason you see `MutableCallSite.setTarget` is because groovy's invokedynamic code has very simplistic (read: trappy as hell) inline caching that can really only handle one type per callsite. it will just flip back and forth when it sees new types.\n\nSo the change is more likely related to that (changing the default to be invokedynamic).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/241724629","html_url":"https://github.com/elastic/elasticsearch/issues/20097#issuecomment-241724629","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/20097","id":241724629,"node_id":"MDEyOklzc3VlQ29tbWVudDI0MTcyNDYyOQ==","user":{"login":"jpountz","id":299848,"node_id":"MDQ6VXNlcjI5OTg0OA==","avatar_url":"https://avatars2.githubusercontent.com/u/299848?v=4","gravatar_id":"","url":"https://api.github.com/users/jpountz","html_url":"https://github.com/jpountz","followers_url":"https://api.github.com/users/jpountz/followers","following_url":"https://api.github.com/users/jpountz/following{/other_user}","gists_url":"https://api.github.com/users/jpountz/gists{/gist_id}","starred_url":"https://api.github.com/users/jpountz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jpountz/subscriptions","organizations_url":"https://api.github.com/users/jpountz/orgs","repos_url":"https://api.github.com/users/jpountz/repos","events_url":"https://api.github.com/users/jpountz/events{/privacy}","received_events_url":"https://api.github.com/users/jpountz/received_events","type":"User","site_admin":false},"created_at":"2016-08-23T13:09:50Z","updated_at":"2016-08-23T13:09:50Z","author_association":"CONTRIBUTOR","body":"Closing this one since a workaround has been provided and the root cause will be adressed by #20017.\n","performed_via_github_app":null}]