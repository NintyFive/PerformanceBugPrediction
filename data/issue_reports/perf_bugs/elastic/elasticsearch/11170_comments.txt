[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/102488817","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-102488817","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":102488817,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMjQ4ODgxNw==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-05-15T18:43:15Z","updated_at":"2015-05-15T18:43:15Z","author_association":"CONTRIBUTOR","body":"@shikhar We haven't seen this issue reported before.  From your last comment:\n\n> It might have been due to using a custom Elasticsearch discovery plugin which is purely asynchronous that those 2 bits ended up happening in parallel, and caused the deadlock.\n\nDid you determine whether this happened when you weren't using the custom plugin?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/102584661","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-102584661","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":102584661,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMjU4NDY2MQ==","user":{"login":"shikhar","id":74267,"node_id":"MDQ6VXNlcjc0MjY3","avatar_url":"https://avatars1.githubusercontent.com/u/74267?v=4","gravatar_id":"","url":"https://api.github.com/users/shikhar","html_url":"https://github.com/shikhar","followers_url":"https://api.github.com/users/shikhar/followers","following_url":"https://api.github.com/users/shikhar/following{/other_user}","gists_url":"https://api.github.com/users/shikhar/gists{/gist_id}","starred_url":"https://api.github.com/users/shikhar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shikhar/subscriptions","organizations_url":"https://api.github.com/users/shikhar/orgs","repos_url":"https://api.github.com/users/shikhar/repos","events_url":"https://api.github.com/users/shikhar/events{/privacy}","received_events_url":"https://api.github.com/users/shikhar/received_events","type":"User","site_admin":false},"created_at":"2015-05-16T07:44:55Z","updated_at":"2015-05-16T07:44:55Z","author_association":"CONTRIBUTOR","body":"@clintongormley Not yet, but I'll try to ascertain whether this is still happening by doing a ton of cluster restarts with and without the plugin. I'll reopen if I find this is still an issue. Thanks :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103476355","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-103476355","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":103476355,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzQ3NjM1NQ==","user":{"login":"shikhar","id":74267,"node_id":"MDQ6VXNlcjc0MjY3","avatar_url":"https://avatars1.githubusercontent.com/u/74267?v=4","gravatar_id":"","url":"https://api.github.com/users/shikhar","html_url":"https://github.com/shikhar","followers_url":"https://api.github.com/users/shikhar/followers","following_url":"https://api.github.com/users/shikhar/following{/other_user}","gists_url":"https://api.github.com/users/shikhar/gists{/gist_id}","starred_url":"https://api.github.com/users/shikhar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shikhar/subscriptions","organizations_url":"https://api.github.com/users/shikhar/orgs","repos_url":"https://api.github.com/users/shikhar/repos","events_url":"https://api.github.com/users/shikhar/events{/privacy}","received_events_url":"https://api.github.com/users/shikhar/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T12:59:15Z","updated_at":"2015-05-19T13:17:22Z","author_association":"CONTRIBUTOR","body":"I have been able to reproduce this with Zen. The only interesting setting is probably `discovery.zen.publish_timeout=0` which makes it similar to [eskka](http://github.com/shikhar/eskka) in that master does not block for acks before processing more updates. But I'm not sure if this is relevant to the problem at all, just thought I'd mention in case it is.\n\nTo describe what happens, the cluster is stuck in the RED state while starting up. On the master node, there are many errors like:\n\n```\n[2015-05-19 12:48:34,460][WARN ][gateway.local            ] [search45-es1] [mfg-1431690242][0]: failed to list shard stores on node [vrHV_EVZSuSFdCGEC7lUsg]\norg.elasticsearch.action.FailedNodeException: Failed node [vrHV_EVZSuSFdCGEC7lUsg]\n        at org.elasticsearch.action.support.nodes.TransportNodesOperationAction$AsyncAction.onFailure(TransportNodesOperationAction.java:206)\n        at org.elasticsearch.action.support.nodes.TransportNodesOperationAction$AsyncAction.access$1000(TransportNodesOperationAction.java:97)\n        at org.elasticsearch.action.support.nodes.TransportNodesOperationAction$AsyncAction$4.handleException(TransportNodesOperationAction.java:178)\n        at org.elasticsearch.transport.TransportService$TimeoutHandler.run(TransportService.java:529)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\nCaused by: org.elasticsearch.transport.ReceiveTimeoutTransportException: [search44-es1][inet[/172.31.240.55:8301]][internal:cluster/nodes/indices/shard/store[n]] request_id [4273] timed out after [30001ms]\n        ... 4 more\n```\n\nA thread dump from the `vrHV_EVZSuSFdCGEC7lUsg` node that it is complaining about: \nhttps://gist.github.com/shikhar/8ad5c166c6a20458c4d2 -- grepping for `Codec` or `<init>` should reveal the threads where the static initialization deadlock is happening. These threads are shown as RUNNABLE while in `Object.wait()`\n\nMy hunch is that this can happen while the cluster is starting up and an index create event lands (we have some crons that are creating new indexes in the background as a way of reindexing). You can see that one of the threads that is deadlocked landed in the Codec-ey bits via:\n\n```\norg.elasticsearch.indices.cluster.IndicesClusterStateService.applyNewIndices(IndicesClusterStateService.java:311)\n```\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103478094","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-103478094","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":103478094,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzQ3ODA5NA==","user":{"login":"shikhar","id":74267,"node_id":"MDQ6VXNlcjc0MjY3","avatar_url":"https://avatars1.githubusercontent.com/u/74267?v=4","gravatar_id":"","url":"https://api.github.com/users/shikhar","html_url":"https://github.com/shikhar","followers_url":"https://api.github.com/users/shikhar/followers","following_url":"https://api.github.com/users/shikhar/following{/other_user}","gists_url":"https://api.github.com/users/shikhar/gists{/gist_id}","starred_url":"https://api.github.com/users/shikhar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shikhar/subscriptions","organizations_url":"https://api.github.com/users/shikhar/orgs","repos_url":"https://api.github.com/users/shikhar/repos","events_url":"https://api.github.com/users/shikhar/events{/privacy}","received_events_url":"https://api.github.com/users/shikhar/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T13:05:33Z","updated_at":"2015-05-19T13:05:47Z","author_association":"CONTRIBUTOR","body":"I think the static initialization of the deadlock-prone bits that @uschindler mentioned should happen in a deterministic manner at ES startup, rather than e.g. when creating indexes.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103479359","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-103479359","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":103479359,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzQ3OTM1OQ==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T13:10:14Z","updated_at":"2015-05-19T13:10:14Z","author_association":"CONTRIBUTOR","body":"@shikhar thanks for coming back to us with the details\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103481282","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-103481282","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":103481282,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzQ4MTI4Mg==","user":{"login":"shikhar","id":74267,"node_id":"MDQ6VXNlcjc0MjY3","avatar_url":"https://avatars1.githubusercontent.com/u/74267?v=4","gravatar_id":"","url":"https://api.github.com/users/shikhar","html_url":"https://github.com/shikhar","followers_url":"https://api.github.com/users/shikhar/followers","following_url":"https://api.github.com/users/shikhar/following{/other_user}","gists_url":"https://api.github.com/users/shikhar/gists{/gist_id}","starred_url":"https://api.github.com/users/shikhar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shikhar/subscriptions","organizations_url":"https://api.github.com/users/shikhar/orgs","repos_url":"https://api.github.com/users/shikhar/repos","events_url":"https://api.github.com/users/shikhar/events{/privacy}","received_events_url":"https://api.github.com/users/shikhar/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T13:13:58Z","updated_at":"2015-05-19T13:13:58Z","author_association":"CONTRIBUTOR","body":"Forgot to mention that this was reproduced on ES 1.5.2\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103488195","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-103488195","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":103488195,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzQ4ODE5NQ==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T13:24:06Z","updated_at":"2015-05-19T13:24:06Z","author_association":"CONTRIBUTOR","body":"The discussion when and why this might happen is here:\nhttps://issues.apache.org/jira/browse/LUCENE-6482\n\nThe proposal is to load the Codec, PostingsFormat and DocValuesFormat in the Elasticsearch Boostrap class. So something like calls to:\n\n``` java\nCodec.reloadCodecs();\nPostingsFormat.reloadPostingsFormats();\n// and others, see Solr's SolrResourceLoader startup\n```\n\nsomewhere at the beginning of Boostrap class. In Solr this is already done in the startup code. This prevents dependency problems if those index classes are started in a concurrent way.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103499533","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-103499533","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":103499533,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzQ5OTUzMw==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T13:43:16Z","updated_at":"2015-05-19T13:43:16Z","author_association":"CONTRIBUTOR","body":"Uwe, why should users of lucene have to do this? Tracking down a class loading deadlock like this is something i do not wish on anyone (thank you very much @shikhar for digging here). So I don't like that you need a \"magical sequence\" at the startup of your app, or you might get hangs.\n\nIs there no better way?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103512816","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-103512816","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":103512816,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzUxMjgxNg==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T14:10:55Z","updated_at":"2015-05-19T14:10:55Z","author_association":"CONTRIBUTOR","body":"The problem here is that on Elasticsearch startup the big builder is initializing a lot of shit in a unforseeable order, and concurrent in addition. The main problem here is that the Codec/Postingsformat/... stuff has a large spaghetti of load-time dependencies, so if called in the wrong order concurrently, it hangs.\n\nTo solve the issue here, my suggestion is to simply call those static initializes at a defined place in Elasticsearch's bootstrap, so it cannot happen that index A is initialized at the same time while index B is also booting up and both are loading SimpleText codec and ElasticsearchFooBar codec in parallel.\n\nWe can then look into Lucene's code to cleanup the loading of codecs. The big problem is the dependency graph and static initializers. The main problem is the Codec.getDefault() value that is initialized with Codec.forName(). I think the problem would be much easier if we would just initialize the default codec with a simple new LuceneXYCodec() instead of SPI on the <clinit> phase. Currently we have code like \"static Codec defaultCodec = forName(\"Lucene50\");\"\n\nSo two steps:\n- prevent deadlocks in ES caused by Lucene for now by explicitely initializing Codec class in Bootstrap.java\n- change Lucene's Codec/PostingsFormat to initialize the default codecs/formats without forName(), because this can lead to deadlock. Just use a simple \"new\" call to constructor.\n\nSimilar propblems are regularirly happening in ICU4J: You remember the case where ICU4J caused NullPointerExceptions because it was trying to print a message using the default codec before the default codec was actually loaded and initialized... The problems in Lucene are the same, just happening in multithreaded code.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103516254","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-103516254","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":103516254,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzUxNjI1NA==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T14:16:36Z","updated_at":"2015-05-19T14:16:36Z","author_association":"CONTRIBUTOR","body":"> I think the problem would be much easier if we would just initialize the default codec with a simple new LuceneXYCodec() instead of SPI on the phase. Currently we have code like \"static Codec defaultCodec = forName(\"Lucene50\");\"\n\nIs that really all thats needed to fix it in Lucene? If so, +1.\n\nBut for master branch, we shouldn't need a hack in bootstrap, lets just fix it in lucene and upgrade to a newer lucene snapshot jar.\n\nFor any backport fixes (elasticsearch 1.X) your solution is practical. But i would not be upset to see a 4.10.5 either.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103518678","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-103518678","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":103518678,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzUxODY3OA==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T14:20:38Z","updated_at":"2015-05-19T14:20:38Z","author_association":"CONTRIBUTOR","body":"In my opinion this should work fine. We should just not use SPI to initialize the defaults.\n\nThe problem with forName() is: You are loading a lot of classes by that, which initialize themselves and may reference to the class doing the forName(). If we initialize the default codec statically, we dont need to wait for forName() to complete, the default codec is there ASAP. If some index file needs another codec, it can load it with forName() but there is no risk in deadlocking.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103524951","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-103524951","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":103524951,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzUyNDk1MQ==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T14:32:57Z","updated_at":"2015-05-19T14:32:57Z","author_association":"CONTRIBUTOR","body":"I see. I think this is a lot simpler in 5.x, because forName is not \"abused\" to load \"impersonator\" codecs in tests. You remember, in that case we had a Lucene3x that was writeable and we reordered jar files in tests and all that... all gone now.\n\nSo I think its too tricky to fix as a bugfix in lucene 4.10.x, and we should apply your logic to bootstrap for ES 1.x. But lets fix lucene 5.x as proposed, then simply update our snapshot for ES master.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103531711","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-103531711","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":103531711,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzUzMTcxMQ==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T14:46:14Z","updated_at":"2015-05-19T14:46:14Z","author_association":"CONTRIBUTOR","body":"I would wish we could write a test to check this out... But as usual, this test would need to run isolated (new and fresh JVM trying to open several indexes in parallel without loading Codec class before).\n\nThank you for remembering me why we did this Codec.forName() for the static initialization! That makes sense. I think we should kill this in 5.x, its a one-line change (and maybe a change in smoketester that validates that the defaultCodec line was updated after release). PostingsFormat is not affected, all of that is caused by Codec's <clinit>.\n\nI analyzed the stack traces provided. What happens in the example is exactly as described: One of the threads is initializing Codec class (<clinit>), as side effect of opening an index. 3 other threads are opening other indexes at same time. Because the Codec class is not yet initialized in clinit, those threads are waiting before SegmentInfos's call to Codec.forName(), which is blocked because the SegmentInfos's call cannot access the Codec class yet. Because of concurrent class loading the newInstance() call in NamedSPILoader to the codec class actually loaded is blocked (too). This happens because JVM has internal locks on that (not 100% sure why and where this blocks, but seems to be the reason).\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103534065","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-103534065","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":103534065,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzUzNDA2NQ==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T14:52:06Z","updated_at":"2015-05-19T14:52:06Z","author_association":"CONTRIBUTOR","body":"Related to that, there was some previous discussion about implementing a static detector here: https://issues.apache.org/jira/browse/LUCENE-5573\n\nI am just hoping some policeman finds himself bored one day and implements the ASM logic so we could try to detect these, even if it wouldn't find this particular one.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103557469","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-103557469","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":103557469,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzU1NzQ2OQ==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T15:40:04Z","updated_at":"2015-05-19T15:40:04Z","author_association":"CONTRIBUTOR","body":"I know this issue :-) I wonder that there is no Eclipse plugin that can detect this!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/103569781","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-103569781","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":103569781,"node_id":"MDEyOklzc3VlQ29tbWVudDEwMzU2OTc4MQ==","user":{"login":"rmuir","id":504194,"node_id":"MDQ6VXNlcjUwNDE5NA==","avatar_url":"https://avatars1.githubusercontent.com/u/504194?v=4","gravatar_id":"","url":"https://api.github.com/users/rmuir","html_url":"https://github.com/rmuir","followers_url":"https://api.github.com/users/rmuir/followers","following_url":"https://api.github.com/users/rmuir/following{/other_user}","gists_url":"https://api.github.com/users/rmuir/gists{/gist_id}","starred_url":"https://api.github.com/users/rmuir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmuir/subscriptions","organizations_url":"https://api.github.com/users/rmuir/orgs","repos_url":"https://api.github.com/users/rmuir/repos","events_url":"https://api.github.com/users/rmuir/events{/privacy}","received_events_url":"https://api.github.com/users/rmuir/received_events","type":"User","site_admin":false},"created_at":"2015-05-19T16:10:40Z","updated_at":"2015-05-19T16:10:40Z","author_association":"CONTRIBUTOR","body":"I did a quick survey, nothing exhaustive but I couldn't find anything. I haven't tried to play around with writing a detector. But IMO ideally it would be a policeman-tool like forbidden API, and we just scan for it in builds and fail the build.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114199972","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-114199972","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":114199972,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDE5OTk3Mg==","user":{"login":"shikhar","id":74267,"node_id":"MDQ6VXNlcjc0MjY3","avatar_url":"https://avatars1.githubusercontent.com/u/74267?v=4","gravatar_id":"","url":"https://api.github.com/users/shikhar","html_url":"https://github.com/shikhar","followers_url":"https://api.github.com/users/shikhar/followers","following_url":"https://api.github.com/users/shikhar/following{/other_user}","gists_url":"https://api.github.com/users/shikhar/gists{/gist_id}","starred_url":"https://api.github.com/users/shikhar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shikhar/subscriptions","organizations_url":"https://api.github.com/users/shikhar/orgs","repos_url":"https://api.github.com/users/shikhar/repos","events_url":"https://api.github.com/users/shikhar/events{/privacy}","received_events_url":"https://api.github.com/users/shikhar/received_events","type":"User","site_admin":false},"created_at":"2015-06-22T17:59:27Z","updated_at":"2015-06-22T17:59:27Z","author_association":"CONTRIBUTOR","body":"hey @rmuir what are the plans for tackling this? It is fixed in Lucene 5.2.1 (https://issues.apache.org/jira/browse/LUCENE-6482) -- if only ES 2.0 can use 5.x, there probably either needs to be that ES Bootstrap workaround or a backport to Lucene 4.x\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114202517","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-114202517","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":114202517,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDIwMjUxNw==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-06-22T18:05:50Z","updated_at":"2015-06-22T18:05:50Z","author_association":"CONTRIBUTOR","body":"I would go with the Bootstrap workaround for ES 1.5 and 1.6. This is very easy to implement and there is no need to release several 4.x versions of Lucene. Should I provide a PR?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114528634","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-114528634","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":114528634,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDUyODYzNA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2015-06-23T14:37:43Z","updated_at":"2015-06-23T14:37:43Z","author_association":"CONTRIBUTOR","body":"@uschindler yes please! :)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114528697","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-114528697","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":114528697,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDUyODY5Nw==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2015-06-23T14:37:50Z","updated_at":"2015-06-23T14:37:50Z","author_association":"CONTRIBUTOR","body":"@uschindler can you open a PR for this against 1.x branch please\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114572705","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-114572705","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":114572705,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDU3MjcwNQ==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-06-23T17:00:24Z","updated_at":"2015-06-23T17:00:24Z","author_association":"CONTRIBUTOR","body":"OK, will provide one later! I am currently in the U.S. and busy :-)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114572740","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-114572740","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":114572740,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDU3Mjc0MA==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-06-23T17:00:33Z","updated_at":"2015-06-23T17:00:33Z","author_association":"CONTRIBUTOR","body":"Ah which branch?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114590773","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-114590773","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":114590773,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDU5MDc3Mw==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-06-23T17:57:50Z","updated_at":"2015-06-23T17:57:50Z","author_association":"CONTRIBUTOR","body":"Found it out: 1.x\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114613088","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-114613088","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":114613088,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDYxMzA4OA==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-06-23T19:08:18Z","updated_at":"2015-06-23T19:10:24Z","author_association":"CONTRIBUTOR","body":"I created a PR: #11837\n\nThis one does a \"fake\" Codecs.availableCodecs() on InternalNode startup. I did not do it in the Boostrap, so also people embedding ES can make use of it. In any case, the method call is cheap and does not slowdown, it just returns an immutable list.\n\nIs there a problem that InternalNode directly depends on lucene-core.jar?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/114616190","html_url":"https://github.com/elastic/elasticsearch/issues/11170#issuecomment-114616190","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/11170","id":114616190,"node_id":"MDEyOklzc3VlQ29tbWVudDExNDYxNjE5MA==","user":{"login":"uschindler","id":1005388,"node_id":"MDQ6VXNlcjEwMDUzODg=","avatar_url":"https://avatars2.githubusercontent.com/u/1005388?v=4","gravatar_id":"","url":"https://api.github.com/users/uschindler","html_url":"https://github.com/uschindler","followers_url":"https://api.github.com/users/uschindler/followers","following_url":"https://api.github.com/users/uschindler/following{/other_user}","gists_url":"https://api.github.com/users/uschindler/gists{/gist_id}","starred_url":"https://api.github.com/users/uschindler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uschindler/subscriptions","organizations_url":"https://api.github.com/users/uschindler/orgs","repos_url":"https://api.github.com/users/uschindler/repos","events_url":"https://api.github.com/users/uschindler/events{/privacy}","received_events_url":"https://api.github.com/users/uschindler/received_events","type":"User","site_admin":false},"created_at":"2015-06-23T19:24:36Z","updated_at":"2015-06-23T19:24:36Z","author_association":"CONTRIBUTOR","body":"Thanks for merging!\n","performed_via_github_app":null}]