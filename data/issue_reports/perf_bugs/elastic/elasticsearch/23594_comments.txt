[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/288986234","html_url":"https://github.com/elastic/elasticsearch/issues/23594#issuecomment-288986234","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23594","id":288986234,"node_id":"MDEyOklzc3VlQ29tbWVudDI4ODk4NjIzNA==","user":{"login":"jeantil","id":22979,"node_id":"MDQ6VXNlcjIyOTc5","avatar_url":"https://avatars3.githubusercontent.com/u/22979?v=4","gravatar_id":"","url":"https://api.github.com/users/jeantil","html_url":"https://github.com/jeantil","followers_url":"https://api.github.com/users/jeantil/followers","following_url":"https://api.github.com/users/jeantil/following{/other_user}","gists_url":"https://api.github.com/users/jeantil/gists{/gist_id}","starred_url":"https://api.github.com/users/jeantil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeantil/subscriptions","organizations_url":"https://api.github.com/users/jeantil/orgs","repos_url":"https://api.github.com/users/jeantil/repos","events_url":"https://api.github.com/users/jeantil/events{/privacy}","received_events_url":"https://api.github.com/users/jeantil/received_events","type":"User","site_admin":false},"created_at":"2017-03-24T10:27:09Z","updated_at":"2017-03-24T10:27:09Z","author_association":"NONE","body":"Sorry I closed the issue in the wrong tab this is still an issue for us. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/292909967","html_url":"https://github.com/elastic/elasticsearch/issues/23594#issuecomment-292909967","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23594","id":292909967,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MjkwOTk2Nw==","user":{"login":"jeantil","id":22979,"node_id":"MDQ6VXNlcjIyOTc5","avatar_url":"https://avatars3.githubusercontent.com/u/22979?v=4","gravatar_id":"","url":"https://api.github.com/users/jeantil","html_url":"https://github.com/jeantil","followers_url":"https://api.github.com/users/jeantil/followers","following_url":"https://api.github.com/users/jeantil/following{/other_user}","gists_url":"https://api.github.com/users/jeantil/gists{/gist_id}","starred_url":"https://api.github.com/users/jeantil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeantil/subscriptions","organizations_url":"https://api.github.com/users/jeantil/orgs","repos_url":"https://api.github.com/users/jeantil/repos","events_url":"https://api.github.com/users/jeantil/events{/privacy}","received_events_url":"https://api.github.com/users/jeantil/received_events","type":"User","site_admin":false},"created_at":"2017-04-10T10:24:00Z","updated_at":"2017-04-10T10:24:21Z","author_association":"NONE","body":"I have new information regarding this issue. After  our production cluster crashed twice despite having disabled shingling on the fields used in fuzzy searches we discovered that shingling alone was enough to trigger gc and out of memory errors even on very small indices. \r\n\r\nOn the provided index which contains all of 5 documents with 2 small fields each, the following query will crash a 1g heap elasticsearch instance on 5.2.2  and 5.3.0 (using the elasticsearch provided docker image as is). \r\n\r\n```\r\nGET season/season/_search\r\n{\r\n  \"query\" : {\r\n    \"bool\" : {\r\n      \"must\" : [\r\n        {\r\n          \"match\" : {\r\n            \"name.classic\" : {\r\n              \"query\" : \"winter winter winter winter winter winter winter winter winter winter winter winter winter winter winter winter winter winter winter\",\r\n              \"operator\" : \"OR\",\r\n              \"fuzziness\" : \"AUTO\",\r\n              \"prefix_length\" : 0,\r\n              \"max_expansions\" : 50,\r\n              \"fuzzy_transpositions\" : true,\r\n              \"lenient\" : false,\r\n              \"zero_terms_query\" : \"NONE\",\r\n              \"boost\" : 1.0\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      \"disable_coord\" : false,\r\n      \"adjust_pure_negative\" : true,\r\n      \"boost\" : 1.0\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nhere is my docker compose file in case it helps: \r\n```\r\nversion: '2'\r\nservices:\r\n  elasticsearch:\r\n    image: docker.elastic.co/elasticsearch/elasticsearch:5.3.0\r\n    environment:\r\n      - xpack.security.enabled=false\r\n      - xpack.monitoring.enabled=false\r\n      - cluster.name=rzv2\r\n      - bootstrap.memory_lock=true\r\n      - \"ES_JAVA_OPTS=-Xms1g -Xmx1g -Dcom.sun.management.jmxremote.port=8000 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=8000 -Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.local.only=false\"\r\n    ulimits:\r\n      memlock:\r\n        soft: -1\r\n        hard: -1\r\n      nofile:\r\n        soft: 65536\r\n        hard: 65536\r\n    mem_limit: 3g\r\n    expose:\r\n      - \"9200\"\r\n      - \"9300\"\r\n      - \"8000\"\r\n    ports:\r\n      - \"9301:9300\"\r\n      - \"9201:9200\"\r\n      - \"8000:8000\"\r\n    volumes:\r\n      - ./es:/usr/share/elasticsearch/config\r\n      - esdata:/usr/share/elasticsearch/data\r\n  kibana:\r\n    image: docker.elastic.co/kibana/kibana:5.3.0\r\n    links:\r\n       - elasticsearch:elasticsearch\r\n    ports:\r\n      - \"5601:5601\"\r\nvolumes: \r\n  esdata:\r\n    driver: local\r\n```\r\nmy elasticsearch.yml in config\r\n```\r\nnetwork.host: 0.0.0.0\r\n\r\n# this value is required because we set \"network.host\"\r\n# be sure to modify it appropriately for a production cluster deployment\r\ndiscovery.zen.minimum_master_nodes: 1\r\ncluster.name: foo\r\nthread_pool:\r\n  bulk:\r\n    queue_size: 100\r\nhttp.cors.enabled: true\r\nhttp.cors.allow-origin: /.*/\r\nhttp.detailed_errors.enabled: true\r\n```\r\n\r\nI tried successively adding terms and ES displayed 3 behaviours: \r\n* 0-12 terms => works fine\r\n* 13-18 terms => query fails with too_many_clauses slow downs can be seen after 16th term is added.\r\n* 19+  terms => run away gs process and/or out of memory errors\r\n\r\nIt looks like computing the clauses breaks down and the initial issue wasn't directly related to fuzzyness.\r\n\r\n```\r\nelasticsearch_1  | [2017-04-10T10:01:24,221][WARN ][o.e.m.j.JvmGcMonitorService] [RyddBEl] [gc][276] overhead, spent [1.9s] collecting in the last [2.1s]\r\nelasticsearch_1  | [2017-04-10T10:01:26,476][WARN ][o.e.m.j.JvmGcMonitorService] [RyddBEl] [gc][277] overhead, spent [2.2s] collecting in the last [2.2s]\r\nelasticsearch_1  | [2017-04-10T10:01:27,732][WARN ][o.e.m.j.JvmGcMonitorService] [RyddBEl] [gc][278] overhead, spent [1.2s] collecting in the last [1.2s]\r\nelasticsearch_1  | [2017-04-10T10:01:31,572][WARN ][o.e.m.j.JvmGcMonitorService] [RyddBEl] [gc][279] overhead, spent [3.7s] collecting in the last [3.8s]\r\nelasticsearch_1  | [2017-04-10T10:01:32,953][WARN ][o.e.m.j.JvmGcMonitorService] [RyddBEl] [gc][280] overhead, spent [1.3s] collecting in the last [1.3s]\r\nelasticsearch_1  | [2017-04-10T10:01:36,276][WARN ][o.e.m.j.JvmGcMonitorService] [RyddBEl] [gc][281] overhead, spent [3.3s] collecting in the last [3.3s]\r\nelasticsearch_1  | [2017-04-10T10:01:38,440][WARN ][o.e.m.j.JvmGcMonitorService] [RyddBEl] [gc][282] overhead, spent [2.1s] collecting in the last [2.1s]\r\nelasticsearch_1  | [2017-04-10T10:02:10,347][WARN ][o.e.m.j.JvmGcMonitorService] [RyddBEl] [gc][283] overhead, spent [6.9s] collecting in the last [5.4s]\r\nelasticsearch_1  | [2017-04-10T10:02:11,793][ERROR][o.e.b.ElasticsearchUncaughtExceptionHandler] [] fatal error in thread [elasticsearch[RyddBEl][search][T#4]], exiting\r\nelasticsearch_1  | java.lang.OutOfMemoryError: GC overhead limit exceeded\r\nelasticsearch_1  | \tat org.apache.lucene.util.BytesRef.deepCopyOf(BytesRef.java:206) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\nelasticsearch_1  | \tat org.apache.lucene.analysis.tokenattributes.BytesTermAttributeImpl.copyTo(BytesTermAttributeImpl.java:53) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\nelasticsearch_1  | \tat org.apache.lucene.util.AttributeSource.restoreState(AttributeSource.java:325) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\nelasticsearch_1  | \tat org.apache.lucene.analysis.CachingTokenFilter.incrementToken(CachingTokenFilter.java:79) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\nelasticsearch_1  | \tat org.apache.lucene.util.QueryBuilder.analyzeMultiBoolean(QueryBuilder.java:374) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\nelasticsearch_1  | \tat org.apache.lucene.util.QueryBuilder.createFieldQuery(QueryBuilder.java:315) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\nelasticsearch_1  | \tat org.apache.lucene.util.QueryBuilder.analyzeGraph(QueryBuilder.java:461) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\nelasticsearch_1  | \tat org.apache.lucene.util.QueryBuilder.createFieldQuery(QueryBuilder.java:298) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\nelasticsearch_1  | \tat org.apache.lucene.util.QueryBuilder.createFieldQuery(QueryBuilder.java:235) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\nelasticsearch_1  | \tat org.apache.lucene.util.QueryBuilder.createBooleanQuery(QueryBuilder.java:91) ~[lucene-core-6.4.1.jar:6.4.1 72f75b2503fa0aa4f0aff76d439874feb923bb0e - jpountz - 2017-02-01 14:43:32]\r\nelasticsearch_1  | \tat org.elasticsearch.index.search.MatchQuery.parse(MatchQuery.java:257) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.index.query.MatchQueryBuilder.doToQuery(MatchQueryBuilder.java:466) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.index.query.AbstractQueryBuilder.toQuery(AbstractQueryBuilder.java:96) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.index.query.BoolQueryBuilder.addBooleanClauses(BoolQueryBuilder.java:442) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.index.query.BoolQueryBuilder.doToQuery(BoolQueryBuilder.java:416) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.index.query.AbstractQueryBuilder.toQuery(AbstractQueryBuilder.java:96) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.index.query.QueryShardContext.lambda$toQuery$1(QueryShardContext.java:313) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.index.query.QueryShardContext$$Lambda$1724/1557619835.apply(Unknown Source) ~[?:?]\r\nelasticsearch_1  | \tat org.elasticsearch.index.query.QueryShardContext.toQuery(QueryShardContext.java:325) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.index.query.QueryShardContext.toQuery(QueryShardContext.java:312) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.search.SearchService.parseSource(SearchService.java:599) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.search.SearchService.createContext(SearchService.java:468) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.search.SearchService.createAndPutContext(SearchService.java:444) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:252) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.action.search.SearchTransportService$6.messageReceived(SearchTransportService.java:331) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.action.search.SearchTransportService$6.messageReceived(SearchTransportService.java:328) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.transport.TransportService$7.doRun(TransportService.java:618) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:613) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) ~[elasticsearch-5.3.0.jar:5.3.0]\r\nelasticsearch_1  | \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[?:1.8.0_92-internal]\r\nelasticsearch_1  | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[?:1.8.0_92-internal]\r\nelasticsearch_1  | [2017-04-10T10:02:11,827][WARN ][o.e.m.j.JvmGcMonitorService] [RyddBEl] [gc][284] overhead, spent [26.3s] collecting in the last [27.9s]\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/292930521","html_url":"https://github.com/elastic/elasticsearch/issues/23594#issuecomment-292930521","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23594","id":292930521,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MjkzMDUyMQ==","user":{"login":"jeantil","id":22979,"node_id":"MDQ6VXNlcjIyOTc5","avatar_url":"https://avatars3.githubusercontent.com/u/22979?v=4","gravatar_id":"","url":"https://api.github.com/users/jeantil","html_url":"https://github.com/jeantil","followers_url":"https://api.github.com/users/jeantil/followers","following_url":"https://api.github.com/users/jeantil/following{/other_user}","gists_url":"https://api.github.com/users/jeantil/gists{/gist_id}","starred_url":"https://api.github.com/users/jeantil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeantil/subscriptions","organizations_url":"https://api.github.com/users/jeantil/orgs","repos_url":"https://api.github.com/users/jeantil/repos","events_url":"https://api.github.com/users/jeantil/events{/privacy}","received_events_url":"https://api.github.com/users/jeantil/received_events","type":"User","site_admin":false},"created_at":"2017-04-10T12:08:12Z","updated_at":"2017-04-10T12:08:12Z","author_association":"NONE","body":"sounds like this could be linked to #23918 \r\nThe second use case clearly seems related. What I am unsure about is if the initial issue (fuzzy vs non fuzzy for shingles) is a consequence of #23918  or if it's yet a different issue.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/292997426","html_url":"https://github.com/elastic/elasticsearch/issues/23594#issuecomment-292997426","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23594","id":292997426,"node_id":"MDEyOklzc3VlQ29tbWVudDI5Mjk5NzQyNg==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-04-10T16:08:41Z","updated_at":"2017-04-10T16:08:41Z","author_association":"CONTRIBUTOR","body":"@jeantil this does indeed look like a duplicate.  Basically, it's bad practice to mix variable length shingles (or ngrams) in a single field.  You have shingles of length 1, 2, and 3!  With the new graph analysis of shingles in Lucene 6.x, this results in an explosion of possible combinations, hence the OOM.\r\n\r\nThe fix in #23918 is to disable graph analysis in the presence of mixed length shingles, but the better answer is to use only a single shingle length in a single field.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/293002855","html_url":"https://github.com/elastic/elasticsearch/issues/23594#issuecomment-293002855","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23594","id":293002855,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzAwMjg1NQ==","user":{"login":"jeantil","id":22979,"node_id":"MDQ6VXNlcjIyOTc5","avatar_url":"https://avatars3.githubusercontent.com/u/22979?v=4","gravatar_id":"","url":"https://api.github.com/users/jeantil","html_url":"https://github.com/jeantil","followers_url":"https://api.github.com/users/jeantil/followers","following_url":"https://api.github.com/users/jeantil/following{/other_user}","gists_url":"https://api.github.com/users/jeantil/gists{/gist_id}","starred_url":"https://api.github.com/users/jeantil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeantil/subscriptions","organizations_url":"https://api.github.com/users/jeantil/orgs","repos_url":"https://api.github.com/users/jeantil/repos","events_url":"https://api.github.com/users/jeantil/events{/privacy}","received_events_url":"https://api.github.com/users/jeantil/received_events","type":"User","site_admin":false},"created_at":"2017-04-10T16:25:57Z","updated_at":"2017-04-10T16:25:57Z","author_association":"NONE","body":"Note that in my case the shingling is applied to the query string not to the fields (though the resulting shingles are still matched against multiple fields) ...  \r\nIs it still bad practice to mix variable length shingles in that case ?\r\n\r\nThis was initially setup as a way to boost partial exact matches ( a sub string of the query is exactly the content of a field) over fuzzy matches since fuzzy and idf sometimes end up boosting fuzzy matches over exact ones. \r\nwe use the shingling to generate all the substrings and apply them to a keyword indexed field. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/293015878","html_url":"https://github.com/elastic/elasticsearch/issues/23594#issuecomment-293015878","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23594","id":293015878,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzAxNTg3OA==","user":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"created_at":"2017-04-10T17:11:34Z","updated_at":"2017-04-10T17:11:34Z","author_association":"CONTRIBUTOR","body":"> Is it still bad practice to mix variable length shingles in that case ?\r\n\r\nyes.  fuzzy just makes it worse\r\n\r\n>  fuzzy and idf sometimes end up boosting fuzzy matches over exact ones.\r\n\r\nthat should no longer be the case.\r\n\r\n> we use the shingling to generate all the substrings and apply them to a keyword indexed field.\r\n\r\nto a keyword indexed field?  why would you do that? \r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/293053587","html_url":"https://github.com/elastic/elasticsearch/issues/23594#issuecomment-293053587","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23594","id":293053587,"node_id":"MDEyOklzc3VlQ29tbWVudDI5MzA1MzU4Nw==","user":{"login":"jeantil","id":22979,"node_id":"MDQ6VXNlcjIyOTc5","avatar_url":"https://avatars3.githubusercontent.com/u/22979?v=4","gravatar_id":"","url":"https://api.github.com/users/jeantil","html_url":"https://github.com/jeantil","followers_url":"https://api.github.com/users/jeantil/followers","following_url":"https://api.github.com/users/jeantil/following{/other_user}","gists_url":"https://api.github.com/users/jeantil/gists{/gist_id}","starred_url":"https://api.github.com/users/jeantil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeantil/subscriptions","organizations_url":"https://api.github.com/users/jeantil/orgs","repos_url":"https://api.github.com/users/jeantil/repos","events_url":"https://api.github.com/users/jeantil/events{/privacy}","received_events_url":"https://api.github.com/users/jeantil/received_events","type":"User","site_admin":false},"created_at":"2017-04-10T19:28:18Z","updated_at":"2017-04-10T19:28:18Z","author_association":"NONE","body":">> fuzzy and idf sometimes end up boosting fuzzy matches over exact ones.\r\n> that should no longer be the case.\r\n\r\nwell we are still having issues with https://github.com/elastic/elasticsearch/issues/22745 which is not a bug but is still an issue for our relevancy. \r\n\r\n> to a keyword indexed field? why would you do that?\r\n\r\nIt is an attempt to be able to boost exact submatches. it is fairly hard to isolate a precise case, all the more so since I don't have our non-regression testsuite and dataset at hand. \r\n\r\nconsider the following documents (completely contrived I don't have my usual dataset on hand)\r\n```\r\n{\r\n\"brand\": \"dell\", \r\n\"range\":\"laptop\", \r\n\"product\":\"inspiron 7000\", \r\n\"size\":\"15\",\r\n\"phrase\":\"dell inspiron inspiron 7000 15\"\r\n}\r\n{\r\n\"brand\": \"dell\", \r\n\"range\":\"laptop\", \r\n\"product\":\"inspiron 7000\", \r\n\"size\":\"13\",\r\n\"phrase\":\"dell inspiron inspiron 7000 13\"\r\n}\r\n{\r\n\"brand\": \"dell\", \r\n\"range\":\"laptop\", \r\n\"product\":\"inspiron 7000\", \r\n\"size\":\"11\",\r\n\"phrase\":\"dell inspiron inspiron 7000  11\"\r\n}\r\n{\r\n\"brand\": \"foo\", \r\n\"range\":\"insparon\", \r\n\"product\":\"insparon 7000\", \r\n\"size\":\"insparon 7000\",\r\n\"phrase\":\"foo inparon insparon 7000 insparon 13 7000\"\r\n}\r\n```\r\nand the query for \"new york inspiron 7000\"\r\n\r\nOur fields have 2 subfields : `.search` and `.keyword` \r\n* `.search` is indexed with a whitespace tokenizer, ascii folding, a charfilter to map `(`,`+` and `*` to words to avoid side effects, a worddelimiter to split on case change, alpha/num transitions all this goes through a synonyms filter and finally all is lowercased \r\n* `.keywords` has keyword tokenizer then asciifolding, signmapping, lowercase then a synonym filter which also uses keywork tokenization.\r\n\r\nwe use a query like this\r\n```\r\nbool:\r\n  must:\r\n    multi_match fuzzy most fields accross all fields (.search and .keywords fields + phrase\r\n  should:\r\n    phrase match on phrase \r\n    multi_match cross field on all .search and .keywords fields + phrase \r\n```\r\n\r\nif we remove the keyword fields some queries end up hitting #22745 and prioritizing fuzzy matches over exact matches. \r\n\r\n* Using the default analyzer the query  \"washington inspiron 7000\" =>[washington, inspiron, 7000] doesn't match on the product keyword\r\n* using a keyword analyzer \"washington inspiron 7000\" =>[\"washington inspiron 7000\"] which of course doesn't match on the product keyword. \r\n\r\nWith this query the phrase match doesn't match either which leaves the .search on cross fields and the fuzzy queries. We have enough queries where this leads to fuzzy matches ending up ranked above exact matches that we tried to boost exact matches through shingling.   \r\n\r\n* with witespace+shingling(min 2 max 5 + unigrams) as query analyzer for keyword fields +phrase we get \r\n\"new york inspiron 7000\" => [\"new\", \"new york\", \"new york inspiron\", new york inspiron 7000\", \"york\", \"york inspiron\",\"york inspiron 7000\", \"inspiron\", \"inspiron 7000\",\"7000\"]\r\nwhich does get a match on the product keywords (thanks to \"inspiron 7000\") in addition to getting a match on the phrase field (\"inspiron\", \"inspiron 7000\", \"7000\") too.\r\nthis and a couple well placed boosts was enough to greatly improve our relevancy.\r\n\r\nI guess we will be good for  digging into the queries again and see if we can come up with an alternate strategy to drop shingling entirely.","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/374420394","html_url":"https://github.com/elastic/elasticsearch/issues/23594#issuecomment-374420394","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23594","id":374420394,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NDQyMDM5NA==","user":{"login":"andyb-elastic","id":29205940,"node_id":"MDQ6VXNlcjI5MjA1OTQw","avatar_url":"https://avatars2.githubusercontent.com/u/29205940?v=4","gravatar_id":"","url":"https://api.github.com/users/andyb-elastic","html_url":"https://github.com/andyb-elastic","followers_url":"https://api.github.com/users/andyb-elastic/followers","following_url":"https://api.github.com/users/andyb-elastic/following{/other_user}","gists_url":"https://api.github.com/users/andyb-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/andyb-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andyb-elastic/subscriptions","organizations_url":"https://api.github.com/users/andyb-elastic/orgs","repos_url":"https://api.github.com/users/andyb-elastic/repos","events_url":"https://api.github.com/users/andyb-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/andyb-elastic/received_events","type":"User","site_admin":false},"created_at":"2018-03-19T23:28:12Z","updated_at":"2018-03-19T23:28:12Z","author_association":"CONTRIBUTOR","body":"Since it looks like some changes have been made that mitigate this issue (#23918 disables graph analysis for mixed-length shingles, and #27211 adds soft limits for shingle sizes) I'm going to close. Additional feedback is always welcome","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/374420433","html_url":"https://github.com/elastic/elasticsearch/issues/23594#issuecomment-374420433","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23594","id":374420433,"node_id":"MDEyOklzc3VlQ29tbWVudDM3NDQyMDQzMw==","user":{"login":"andyb-elastic","id":29205940,"node_id":"MDQ6VXNlcjI5MjA1OTQw","avatar_url":"https://avatars2.githubusercontent.com/u/29205940?v=4","gravatar_id":"","url":"https://api.github.com/users/andyb-elastic","html_url":"https://github.com/andyb-elastic","followers_url":"https://api.github.com/users/andyb-elastic/followers","following_url":"https://api.github.com/users/andyb-elastic/following{/other_user}","gists_url":"https://api.github.com/users/andyb-elastic/gists{/gist_id}","starred_url":"https://api.github.com/users/andyb-elastic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andyb-elastic/subscriptions","organizations_url":"https://api.github.com/users/andyb-elastic/orgs","repos_url":"https://api.github.com/users/andyb-elastic/repos","events_url":"https://api.github.com/users/andyb-elastic/events{/privacy}","received_events_url":"https://api.github.com/users/andyb-elastic/received_events","type":"User","site_admin":false},"created_at":"2018-03-19T23:28:25Z","updated_at":"2018-03-19T23:28:25Z","author_association":"CONTRIBUTOR","body":"@elastic/es-search-aggs ","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/427821691","html_url":"https://github.com/elastic/elasticsearch/issues/23594#issuecomment-427821691","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23594","id":427821691,"node_id":"MDEyOklzc3VlQ29tbWVudDQyNzgyMTY5MQ==","user":{"login":"galichavishal","id":43958329,"node_id":"MDQ6VXNlcjQzOTU4MzI5","avatar_url":"https://avatars1.githubusercontent.com/u/43958329?v=4","gravatar_id":"","url":"https://api.github.com/users/galichavishal","html_url":"https://github.com/galichavishal","followers_url":"https://api.github.com/users/galichavishal/followers","following_url":"https://api.github.com/users/galichavishal/following{/other_user}","gists_url":"https://api.github.com/users/galichavishal/gists{/gist_id}","starred_url":"https://api.github.com/users/galichavishal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/galichavishal/subscriptions","organizations_url":"https://api.github.com/users/galichavishal/orgs","repos_url":"https://api.github.com/users/galichavishal/repos","events_url":"https://api.github.com/users/galichavishal/events{/privacy}","received_events_url":"https://api.github.com/users/galichavishal/received_events","type":"User","site_admin":false},"created_at":"2018-10-08T12:57:01Z","updated_at":"2018-10-08T12:57:01Z","author_association":"NONE","body":"Query: How to apply fuzziness on every token produced by shingles filter?\r\n\r\nBelow is my created mapping:\r\n{\r\n  \"settings\":{\r\n    \"index\":{\r\n    \"number_of_shards\" : 1, \r\n     \"number_of_replicas\" : 0 ,\r\n      \"analysis\":{\r\n       \"filter\": {\r\n        \"my_synonym_filter\": {\r\n          \"type\": \"synonym\",\r\n          \"tokenizer\" : \"standard\",\r\n          \"synonyms\":[\r\n                            \"nwm,northwestern mutual wealth management=> northwestern mutual wealth management\" \r\n                        ]\r\n        },\r\n        \"filter_shingle\":{\r\n                  \"type\":\"shingle\",\r\n                  \"tokenizer\" : \"standard\",\r\n                  \"max_shingle_size\":10,\r\n                  \"min_shingle_size\":2,\r\n                  \"output_unigrams\":\"true\"\r\n               }\r\n      },\r\n        \"analyzer\":{\r\n          \"analyzer_case_insensitive\":{\r\n        \t\"tokenizer\": \"keyword\",\r\n            \"filter\":[ \"lowercase\",\"my_synonym_filter\"]\r\n          },\r\n          \"analyzer_shingle\":{\r\n        \t\"tokenizer\": \"standard\",\r\n            \"filter\":[ \"lowercase\",\"my_synonym_filter\",\"filter_shingle\"]\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"index.mapping.total_fields.limit\": 9000000000000000000\r\n  },\r\n    \"mappings\" : {\r\n      \"docs\" : {\r\n        \"properties\" : {\r\n          \"aliases\" : {\r\n            \"type\" : \"text\",\r\n            \"analyzer\":\"analyzer_case_insensitive\",\r\n            \"search_analyzer\":\"analyzer_shingle\",\r\n            \"fields\" : {\r\n              \"text\" : {\r\n                \"type\" : \"keyword\",\r\n                \"ignore_above\" : 256\r\n              }\r\n            }\r\n          },\r\n         {\r\n          \"not_recognized\" : {\r\n            \"type\" : \"text\",\r\n            \"fields\" : {\r\n              \"keyword\" : {\r\n                \"type\" : \"keyword\",\r\n                \"ignore_above\" : 256\r\n              }\r\n            }\r\n          },\r\n          \"tagName\" : {\r\n            \"type\" : \"text\",\r\n            \"fields\" : {\r\n              \"keyword\" : {\r\n                \"type\" : \"keyword\",\r\n                \"ignore_above\" : 256\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n   }\r\n}\r\n\r\n\r\nBelow is my query:\r\n{\r\n    \"query\": {\r\n        \"bool\": {\r\n            \"should\": [\r\n            {\r\n          \"bool\": {\r\n            \"should\": [\r\n              {\r\n                \"match\": {\r\n                \"aliases\":\r\n                \t{\r\n                \t\t\"query\": \"nwm sals\",\r\n                                \"fuzziness\": 2\r\n                \t}\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n        ]}\r\n        }}\r\n\r\nso from above query shingles filter produces combination of words from the statement \"northwestern mutual wealth management sals\"\r\n\r\nso i am expecting to apply fuzziness on each token produced by shingles filter and display the results according.\r\nhere from my query fuzziness is not getting applied on any token ..am i missing something?\r\n\r\nPlease let me know about this as i am stuck into it.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/429005747","html_url":"https://github.com/elastic/elasticsearch/issues/23594#issuecomment-429005747","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/23594","id":429005747,"node_id":"MDEyOklzc3VlQ29tbWVudDQyOTAwNTc0Nw==","user":{"login":"michivi","id":8192869,"node_id":"MDQ6VXNlcjgxOTI4Njk=","avatar_url":"https://avatars1.githubusercontent.com/u/8192869?v=4","gravatar_id":"","url":"https://api.github.com/users/michivi","html_url":"https://github.com/michivi","followers_url":"https://api.github.com/users/michivi/followers","following_url":"https://api.github.com/users/michivi/following{/other_user}","gists_url":"https://api.github.com/users/michivi/gists{/gist_id}","starred_url":"https://api.github.com/users/michivi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/michivi/subscriptions","organizations_url":"https://api.github.com/users/michivi/orgs","repos_url":"https://api.github.com/users/michivi/repos","events_url":"https://api.github.com/users/michivi/events{/privacy}","received_events_url":"https://api.github.com/users/michivi/received_events","type":"User","site_admin":false},"created_at":"2018-10-11T15:43:28Z","updated_at":"2018-10-11T15:43:28Z","author_association":"NONE","body":"Hello @galichavishal \r\n\r\nFrom what I see, your `aliases` field uses two analyzers: `analyzer_case_insensitive` and `analyzer_shingle`. The first one is using the `keyword` tokenizer, so its content will be treated as a whole single token. The latter is using the `standard` tokenizer, creating a new token for every word, shingling them as you've configured. This makes it very unlikely that your queries will match the document content. It might sometimes, like when your text query is exactly the (short) document text content. You should probably use different analyzers.\r\n\r\nIn any case, your problem does not correspond directly to this issue (which is about performance on fuzzy query with the shingle filter).\r\n\r\nI think you probably should use the Elastic forum to discuss your issue. I'd be happy (along with all the members there :-) ) to help you further on this there.\r\n\r\nHope it helps","performed_via_github_app":null}]