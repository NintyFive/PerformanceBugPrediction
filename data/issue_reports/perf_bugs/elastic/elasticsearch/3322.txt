{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/3322","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3322/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3322/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/3322/events","html_url":"https://github.com/elastic/elasticsearch/issues/3322","id":16693085,"node_id":"MDU6SXNzdWUxNjY5MzA4NQ==","number":3322,"title":"Search performance degrades after processing a large response","user":{"login":"derekcicerone","id":1081904,"node_id":"MDQ6VXNlcjEwODE5MDQ=","avatar_url":"https://avatars2.githubusercontent.com/u/1081904?v=4","gravatar_id":"","url":"https://api.github.com/users/derekcicerone","html_url":"https://github.com/derekcicerone","followers_url":"https://api.github.com/users/derekcicerone/followers","following_url":"https://api.github.com/users/derekcicerone/following{/other_user}","gists_url":"https://api.github.com/users/derekcicerone/gists{/gist_id}","starred_url":"https://api.github.com/users/derekcicerone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/derekcicerone/subscriptions","organizations_url":"https://api.github.com/users/derekcicerone/orgs","repos_url":"https://api.github.com/users/derekcicerone/repos","events_url":"https://api.github.com/users/derekcicerone/events{/privacy}","received_events_url":"https://api.github.com/users/derekcicerone/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"assignees":[{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2013-07-12T17:35:33Z","updated_at":"2013-09-14T22:43:55Z","closed_at":"2013-09-14T21:58:55Z","author_association":"NONE","active_lock_reason":null,"body":"In our testing we've found that search performance can degrade quite a bit after processing a large search response.  We've tracked this down to the usage of TIntObjectHashMap in HandlesStreamInput.  We found that after processing a large search response, the capacity of these maps increased dramatically.  Even though clear() is called on the maps in the reset() methods, the capacities of the maps stay high and adversely impact the performance of subsequent clear() calls (since clear() must iterate over the entire capacity of each map).\n\nIn local testing we've found that this performance issue can be fixed by re-creating the hash maps in the reset() methods if the capacity exceeds a certain limit (say 10k).  We also believe that this could be fixed by calling compact() on the maps after clear()  (since that will also reduce their capacity and thus make operations fast again).\n\nPlease let me know if you'd like any additional information about this issue or the proposed fix.\n","closed_by":{"login":"kimchy","id":41300,"node_id":"MDQ6VXNlcjQxMzAw","avatar_url":"https://avatars1.githubusercontent.com/u/41300?v=4","gravatar_id":"","url":"https://api.github.com/users/kimchy","html_url":"https://github.com/kimchy","followers_url":"https://api.github.com/users/kimchy/followers","following_url":"https://api.github.com/users/kimchy/following{/other_user}","gists_url":"https://api.github.com/users/kimchy/gists{/gist_id}","starred_url":"https://api.github.com/users/kimchy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimchy/subscriptions","organizations_url":"https://api.github.com/users/kimchy/orgs","repos_url":"https://api.github.com/users/kimchy/repos","events_url":"https://api.github.com/users/kimchy/events{/privacy}","received_events_url":"https://api.github.com/users/kimchy/received_events","type":"User","site_admin":false},"performed_via_github_app":null}