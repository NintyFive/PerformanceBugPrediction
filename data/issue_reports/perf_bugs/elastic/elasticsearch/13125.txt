{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/13125","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13125/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13125/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/13125/events","html_url":"https://github.com/elastic/elasticsearch/issues/13125","id":103321166,"node_id":"MDU6SXNzdWUxMDMzMjExNjY=","number":13125,"title":"search Request performance drops significantly when setting size to Integer.MAX_VALUE","user":{"login":"falkorichter","id":50506,"node_id":"MDQ6VXNlcjUwNTA2","avatar_url":"https://avatars2.githubusercontent.com/u/50506?v=4","gravatar_id":"","url":"https://api.github.com/users/falkorichter","html_url":"https://github.com/falkorichter","followers_url":"https://api.github.com/users/falkorichter/followers","following_url":"https://api.github.com/users/falkorichter/following{/other_user}","gists_url":"https://api.github.com/users/falkorichter/gists{/gist_id}","starred_url":"https://api.github.com/users/falkorichter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/falkorichter/subscriptions","organizations_url":"https://api.github.com/users/falkorichter/orgs","repos_url":"https://api.github.com/users/falkorichter/repos","events_url":"https://api.github.com/users/falkorichter/events{/privacy}","received_events_url":"https://api.github.com/users/falkorichter/received_events","type":"User","site_admin":false},"labels":[{"id":146832564,"node_id":"MDU6TGFiZWwxNDY4MzI1NjQ=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Search/Search","name":":Search/Search","color":"0e8a16","default":false,"description":"Search-related issues that do not fall into other categories"},{"id":111624690,"node_id":"MDU6TGFiZWwxMTE2MjQ2OTA=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/feedback_needed","name":"feedback_needed","color":"d4c5f9","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2015-08-26T17:04:28Z","updated_at":"2018-09-04T07:19:36Z","closed_at":"2015-08-26T18:38:00Z","author_association":"NONE","active_lock_reason":null,"body":"We are updating some data in our els store. The data has a creation timestamp so we fetch buckets of 1 hour length from the database. Therefore we need to fetch all items from this date bucket. Since we don´t know how many items could be in the bucket, we se the size of search to Integer.MAX_VALUE. \n\nWe´re seeing a dramatic drop in performance when setting the hit size that high. When we set the size closer to the actual size, the performance of the request is again expectably fast.\n\n**Scroll to my [comment](https://github.com/elastic/elasticsearch/issues/13125#issuecomment-136964243) for a solution using the scroll API**\n\nwe tried to reproduce the problem as well using the REST API directly:\nWith Integer.MAX_VALUE (POST {{elastic_search_host}}/resolve_log_v1/entry/_search?pretty)\n\n```\n{\n    \"size\" : 2147483647,\n    \"query\" : {\n        \"bool\" : {\n            \"must\" : [\n                { \"range\" : { \"trigger.timestamp\" : { \"gte\": \"2015-07-26T16:00:00.000Z\", \"lte\" : \"2015-07-26T17:00:00.000Z\" } } }\n            ]\n        }\n    }\n}\n```\n\nResult:\n\n```\n{\n  \"took\": 22856,\n  \"timed_out\": false,\n  \"_shards\": {\n    \"total\": 5,\n    \"successful\": 5,\n    \"failed\": 0\n  },\n  \"hits\": {\n    \"total\": 21,\n    \"max_score\": 1,\n    \"hits\": [\n```\n\n same request with size set to 21\n\n```\n{\n  \"took\": 16,\n  \"timed_out\": false,\n  \"_shards\": {\n    \"total\": 5,\n    \"successful\": 5,\n    \"failed\": 0\n  },\n  \"hits\": {\n    \"total\": 21,\n    \"max_score\": 1,\n    \"hits\": [\n      {\n        \"_index\": \"resolve_log_v1\",\n        \"_type\": \"entry\",\n        \"_id\": \"4851a61c-3a17-494d-b72e-9bce172d45e6\",\n```\n\n when setting the size to 0 we still get a quick response.\n\nThe total count of entry objects (:\n\n```\ncurl -X POST -H \"Content-Type: application/json\" -d '{    \"size\" : 0 }' 'http://localhost:9222/resolve_log_v1/entry/_search?pretty':\n{\n  \"took\": 26,\n  \"timed_out\": false,\n  \"_shards\": {\n    \"total\": 5,\n    \"successful\": 5,\n    \"failed\": 0\n  },\n  \"hits\": {\n    \"total\": 1022824,\n    \"max_score\": 0,\n    \"hits\": []\n  }\n}\n```\n\nTo optimize, we now do two queries, 1 count, one to geht the hits:\n\n```\nBoolQueryBuilder queryBuilder = QueryBuilders.boolQuery().must(rangeQuery(\"trigger.timestamp\").gte(fromJoda.toString()).lte(toJoda.toString()));\nSearchResponse sizeResponse = client.prepareSearch(SearchProvider.INDEX)\n                    .setTypes(TYPE)\n                    .setSearchType(SearchType.COUNT)\n                    .setQuery(queryBuilder)\n                    .execute()\n                    .actionGet();\n\nSearchResponse response = client.prepareSearch(SearchProvider.INDEX)\n                    .setTypes(TYPE)\n                    .setQuery(queryBuilder)\n                    .setSize((int) sizeResponse.getHits().getTotalHits())\n                    .execute()\n                    .actionGet();\n```\n\nthis is not ideal, as the bucket theoretically could change.\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}