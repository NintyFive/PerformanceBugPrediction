{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/31875","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31875/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31875/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/31875/events","html_url":"https://github.com/elastic/elasticsearch/issues/31875","id":339042989,"node_id":"MDU6SXNzdWUzMzkwNDI5ODk=","number":31875,"title":"geo_shape indexing write-performance/query-accuracy - add a Geo Post Filtering step before returning the query/search results","user":{"login":"hanoch","id":1561905,"node_id":"MDQ6VXNlcjE1NjE5MDU=","avatar_url":"https://avatars0.githubusercontent.com/u/1561905?v=4","gravatar_id":"","url":"https://api.github.com/users/hanoch","html_url":"https://github.com/hanoch","followers_url":"https://api.github.com/users/hanoch/followers","following_url":"https://api.github.com/users/hanoch/following{/other_user}","gists_url":"https://api.github.com/users/hanoch/gists{/gist_id}","starred_url":"https://api.github.com/users/hanoch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanoch/subscriptions","organizations_url":"https://api.github.com/users/hanoch/orgs","repos_url":"https://api.github.com/users/hanoch/repos","events_url":"https://api.github.com/users/hanoch/events{/privacy}","received_events_url":"https://api.github.com/users/hanoch/received_events","type":"User","site_admin":false},"labels":[{"id":141079527,"node_id":"MDU6TGFiZWwxNDEwNzk1Mjc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Analytics/Geo","name":":Analytics/Geo","color":"0e8a16","default":false,"description":"Indexing, search aggregations of geo points and shapes"},{"id":23174,"node_id":"MDU6TGFiZWwyMzE3NA==","url":"https://api.github.com/repos/elastic/elasticsearch/labels/%3Eenhancement","name":">enhancement","color":"4a4ea8","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-07-06T19:06:04Z","updated_at":"2018-08-01T20:48:53Z","closed_at":"2018-08-01T20:48:53Z","author_association":"NONE","active_lock_reason":null,"body":"This issue is with regards to writing and indexing `geo_shape` values in a performant way, and then being able to query them correctly with a bounding box, without getting false positive results.\r\n\r\nWe currently need to store and index `geo_shape` values, using a quadtree with (the default) precision of `50m` precision, in order for to be able to query/search them (their documents) with a bounding box without getting false positive results. When using the `50m` quadtree precision (tree depth) we are noticing a big performance hit trying to write `geo_shape` values (e.g. polygons, polylines, etc.), resulting in needing to wait long minutes, between 20 minutes to an hour or more, until the write (and index) is done. That said, when using a `50m` precision, when issuing queries with a bounding box on the index, we are getting back the correct results, (almost) without any false positive results.\r\n\r\nWhen writing the geo_shape values with a quadtree index of `50km` (rather than `50m`) precision, the write time is much improved and is useable, but when running queries with a bounding box, we are getting too many false positive results.\r\n\r\nWe discussed this issue with the support team, @nknize and other elastic PMs, using the support site/app, over phone calls, and during meetings we had in the last two Elastic{ON} conferences - Elastic{ON} 17 and Elastic{ON} 18. We discussed multiple different workaround approaches needed to be done client side, both when writing/indexing as well as when querying/searching, and we explained why these workarounds can't work for our use cases, since we need to render a portion of the index using a specific bounding box, after running an external analytic, and storing the analytic results in an Elasticsearch index. Having the write time take long minutes to an hour is a showstopper for our use cases.\r\n\r\nIn our last meeting with @nknize, @zuketo, and others during Elastic{ON} 18 we came to a conclusion that this issue will be addressed by Elastic in three phases:\r\n1. Phase One - implement a Geo Post Filtering on the ES (DB) side, having the ES queries always return correct results with no false positives. This will be done by using new Lucene v7.4 capabilities. That will allow us to use any precision with the quadtree index, including `50km` which is performant enough for most of our use cases, but will ensure that queries with bounding boxes will always return correct results. Possibly also add a `post_filtering=true` parameter to the query parameters with a default value (true/false) TBD.\r\n2. Phase Two - `geo_shape` BKD tree support phase 1 of 2 - implement BKD tree based `geo_shape` indexing. This index will still rasterize the `geo_shape` geometry value into multiple raster LODs, but will use the BKD tree approach which is supposed to be somewhat more performing than the existing quadtree indexing approach.\r\n3. Phase Three - `geo_shape` BKD tree support phase 2 of 2 - switch to use some vector based indexing rather than rasterizing the `geo_shape` geometry value.\r\n\r\nThis GitHub issue is about implementing `Phase One` - Add the missing Geo post filtering ES (DB) side to the query/search implementation, using Lucene v7.4? capabilities, returning correct results when querying/searching with a bounding box, for any quadtree precision.","closed_by":{"login":"zuketo","id":1163707,"node_id":"MDQ6VXNlcjExNjM3MDc=","avatar_url":"https://avatars2.githubusercontent.com/u/1163707?v=4","gravatar_id":"","url":"https://api.github.com/users/zuketo","html_url":"https://github.com/zuketo","followers_url":"https://api.github.com/users/zuketo/followers","following_url":"https://api.github.com/users/zuketo/following{/other_user}","gists_url":"https://api.github.com/users/zuketo/gists{/gist_id}","starred_url":"https://api.github.com/users/zuketo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zuketo/subscriptions","organizations_url":"https://api.github.com/users/zuketo/orgs","repos_url":"https://api.github.com/users/zuketo/repos","events_url":"https://api.github.com/users/zuketo/events{/privacy}","received_events_url":"https://api.github.com/users/zuketo/received_events","type":"User","site_admin":false},"performed_via_github_app":null}