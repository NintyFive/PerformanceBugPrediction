[{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172761318","html_url":"https://github.com/elastic/elasticsearch/issues/16074#issuecomment-172761318","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16074","id":172761318,"node_id":"MDEyOklzc3VlQ29tbWVudDE3Mjc2MTMxOA==","user":{"login":"adhamelia","id":1576538,"node_id":"MDQ6VXNlcjE1NzY1Mzg=","avatar_url":"https://avatars1.githubusercontent.com/u/1576538?v=4","gravatar_id":"","url":"https://api.github.com/users/adhamelia","html_url":"https://github.com/adhamelia","followers_url":"https://api.github.com/users/adhamelia/followers","following_url":"https://api.github.com/users/adhamelia/following{/other_user}","gists_url":"https://api.github.com/users/adhamelia/gists{/gist_id}","starred_url":"https://api.github.com/users/adhamelia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adhamelia/subscriptions","organizations_url":"https://api.github.com/users/adhamelia/orgs","repos_url":"https://api.github.com/users/adhamelia/repos","events_url":"https://api.github.com/users/adhamelia/events{/privacy}","received_events_url":"https://api.github.com/users/adhamelia/received_events","type":"User","site_admin":false},"created_at":"2016-01-19T07:14:08Z","updated_at":"2016-01-19T07:14:08Z","author_association":"NONE","body":"we are using 1.7.3 ES having Linux and Windows OS\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172764572","html_url":"https://github.com/elastic/elasticsearch/issues/16074#issuecomment-172764572","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16074","id":172764572,"node_id":"MDEyOklzc3VlQ29tbWVudDE3Mjc2NDU3Mg==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-01-19T07:35:08Z","updated_at":"2016-01-19T07:35:42Z","author_association":"MEMBER","body":"Hi Alpesh,\n\ncan you describe your situation in more detail? Some questions to ponder:\n- Are you using the Java client or do you use another language client?\n- How do you perform bulk operations? I see you are using the 1.7 line. Starting with 2.0 we provide a helper class, called `BulkProcessor` (see [docs](https://www.elastic.co/guide/en/elasticsearch/client/java-api/master/java-docs-bulk-processor.html)) in the Java API. I'd be best to upgrade to the 2.x line of Elasticsearch anyway but if this is not an option you can base your implementation on our `BulkProcessor` class. Then there is no need to manage those low level details by yourself.\n\nIf all of this does not help you, can you please provide an isolated example project that demonstrates the problem?\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172814847","html_url":"https://github.com/elastic/elasticsearch/issues/16074#issuecomment-172814847","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16074","id":172814847,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjgxNDg0Nw==","user":{"login":"adhamelia","id":1576538,"node_id":"MDQ6VXNlcjE1NzY1Mzg=","avatar_url":"https://avatars1.githubusercontent.com/u/1576538?v=4","gravatar_id":"","url":"https://api.github.com/users/adhamelia","html_url":"https://github.com/adhamelia","followers_url":"https://api.github.com/users/adhamelia/followers","following_url":"https://api.github.com/users/adhamelia/following{/other_user}","gists_url":"https://api.github.com/users/adhamelia/gists{/gist_id}","starred_url":"https://api.github.com/users/adhamelia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adhamelia/subscriptions","organizations_url":"https://api.github.com/users/adhamelia/orgs","repos_url":"https://api.github.com/users/adhamelia/repos","events_url":"https://api.github.com/users/adhamelia/events{/privacy}","received_events_url":"https://api.github.com/users/adhamelia/received_events","type":"User","site_admin":false},"created_at":"2016-01-19T10:45:20Z","updated_at":"2016-01-19T10:45:20Z","author_association":"NONE","body":"Thanks Daniel for your prompt response.\n\nwe are using java api [Node Client] with following bulk processor settings.\n\n .setBulkSize(new ByteSizeValue(TraceOrgServerConstants.ES_BULK_REQUEST_FLUSH_SIZE_IN_MB, ByteSizeUnit.MB))\n                        .setFlushInterval(TimeValue.timeValueSeconds(TraceOrgServerConstants.ES_BULK_REQUEST_FLUSH_TIME_IN_SECOND))\n                        .setConcurrentRequests(1)\n                        .build();\n\nES_BULK_REQUEST_FLUSH_SIZE_IN_MB =100\n\nES_BULK_REQUEST_FLUSH_TIME_IN_SECOND =30\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172815736","html_url":"https://github.com/elastic/elasticsearch/issues/16074#issuecomment-172815736","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16074","id":172815736,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjgxNTczNg==","user":{"login":"adhamelia","id":1576538,"node_id":"MDQ6VXNlcjE1NzY1Mzg=","avatar_url":"https://avatars1.githubusercontent.com/u/1576538?v=4","gravatar_id":"","url":"https://api.github.com/users/adhamelia","html_url":"https://github.com/adhamelia","followers_url":"https://api.github.com/users/adhamelia/followers","following_url":"https://api.github.com/users/adhamelia/following{/other_user}","gists_url":"https://api.github.com/users/adhamelia/gists{/gist_id}","starred_url":"https://api.github.com/users/adhamelia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adhamelia/subscriptions","organizations_url":"https://api.github.com/users/adhamelia/orgs","repos_url":"https://api.github.com/users/adhamelia/repos","events_url":"https://api.github.com/users/adhamelia/events{/privacy}","received_events_url":"https://api.github.com/users/adhamelia/received_events","type":"User","site_admin":false},"created_at":"2016-01-19T10:49:45Z","updated_at":"2016-01-19T10:49:45Z","author_association":"NONE","body":"Our  Testing System Conf\n\n1 DATA NODE [8 GB RAM/6 CORE CPU] [VIRTUAL MACHINE] [CENT OS 6.6]\n\n1 SHARD\n\n0 REPLICATION \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172818289","html_url":"https://github.com/elastic/elasticsearch/issues/16074#issuecomment-172818289","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16074","id":172818289,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjgxODI4OQ==","user":{"login":"adhamelia","id":1576538,"node_id":"MDQ6VXNlcjE1NzY1Mzg=","avatar_url":"https://avatars1.githubusercontent.com/u/1576538?v=4","gravatar_id":"","url":"https://api.github.com/users/adhamelia","html_url":"https://github.com/adhamelia","followers_url":"https://api.github.com/users/adhamelia/followers","following_url":"https://api.github.com/users/adhamelia/following{/other_user}","gists_url":"https://api.github.com/users/adhamelia/gists{/gist_id}","starred_url":"https://api.github.com/users/adhamelia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adhamelia/subscriptions","organizations_url":"https://api.github.com/users/adhamelia/orgs","repos_url":"https://api.github.com/users/adhamelia/repos","events_url":"https://api.github.com/users/adhamelia/events{/privacy}","received_events_url":"https://api.github.com/users/adhamelia/received_events","type":"User","site_admin":false},"created_at":"2016-01-19T11:01:57Z","updated_at":"2016-01-19T11:01:57Z","author_association":"NONE","body":"if we migrate from 1.x to 2.x then will require so much time and resources :(\n\nthere is an huge api changes in 2.x \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172820927","html_url":"https://github.com/elastic/elasticsearch/issues/16074#issuecomment-172820927","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16074","id":172820927,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjgyMDkyNw==","user":{"login":"s1monw","id":973334,"node_id":"MDQ6VXNlcjk3MzMzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/973334?v=4","gravatar_id":"","url":"https://api.github.com/users/s1monw","html_url":"https://github.com/s1monw","followers_url":"https://api.github.com/users/s1monw/followers","following_url":"https://api.github.com/users/s1monw/following{/other_user}","gists_url":"https://api.github.com/users/s1monw/gists{/gist_id}","starred_url":"https://api.github.com/users/s1monw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s1monw/subscriptions","organizations_url":"https://api.github.com/users/s1monw/orgs","repos_url":"https://api.github.com/users/s1monw/repos","events_url":"https://api.github.com/users/s1monw/events{/privacy}","received_events_url":"https://api.github.com/users/s1monw/received_events","type":"User","site_admin":false},"created_at":"2016-01-19T11:17:17Z","updated_at":"2016-01-19T11:17:17Z","author_association":"CONTRIBUTOR","body":"> there is an huge api changes in 2.x\n\nI do apologize for this but that's the right time to add breaking improvements. I highly recommend you to go to 2.x asap.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172835324","html_url":"https://github.com/elastic/elasticsearch/issues/16074#issuecomment-172835324","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16074","id":172835324,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MjgzNTMyNA==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-01-19T12:19:35Z","updated_at":"2016-01-19T12:20:25Z","author_association":"MEMBER","body":"How did you arrive at a bulk index size of 100MB? You can have a look at the section [Using and Sizing Bulk Requests](https://www.elastic.co/guide/en/elasticsearch/guide/current/indexing-performance.html#_using_and_sizing_bulk_requests) in the docs. A few thoughts:\n- You should look where the bottleneck is: network, CPU usage, I/O\n- You could benefit from a smaller bulk size\n- You may also increase the number of concurrent requests (depending on the outcome of your investigation of the bottleneck)\n\nFor future reference, we have a [discussion forum](https://discuss.elastic.co/) for such questions.\n\nAnd as Simon said, it also makes sense to upgrade to 2.x soon. There are a ton of improvements in there.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172858210","html_url":"https://github.com/elastic/elasticsearch/issues/16074#issuecomment-172858210","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16074","id":172858210,"node_id":"MDEyOklzc3VlQ29tbWVudDE3Mjg1ODIxMA==","user":{"login":"adhamelia","id":1576538,"node_id":"MDQ6VXNlcjE1NzY1Mzg=","avatar_url":"https://avatars1.githubusercontent.com/u/1576538?v=4","gravatar_id":"","url":"https://api.github.com/users/adhamelia","html_url":"https://github.com/adhamelia","followers_url":"https://api.github.com/users/adhamelia/followers","following_url":"https://api.github.com/users/adhamelia/following{/other_user}","gists_url":"https://api.github.com/users/adhamelia/gists{/gist_id}","starred_url":"https://api.github.com/users/adhamelia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adhamelia/subscriptions","organizations_url":"https://api.github.com/users/adhamelia/orgs","repos_url":"https://api.github.com/users/adhamelia/repos","events_url":"https://api.github.com/users/adhamelia/events{/privacy}","received_events_url":"https://api.github.com/users/adhamelia/received_events","type":"User","site_admin":false},"created_at":"2016-01-19T13:45:12Z","updated_at":"2016-01-19T13:45:12Z","author_association":"NONE","body":"Thanks guys !!!\n\nya, I know 100 MB is too large. in past,we tried on 10-15 MB bulk size but still it did not work.\n\nfor concurrency, if  we increase it,  ES behaves strange.\n\nright now we are using  concurrent request = 1 and it works for  a while but if load gets increased then bulk index eats our all threads.\n\nwe are definitely thinking about 2.x but right now, we are looking for a cheaper alternative by tweaking some ES conf. \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/172860420","html_url":"https://github.com/elastic/elasticsearch/issues/16074#issuecomment-172860420","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16074","id":172860420,"node_id":"MDEyOklzc3VlQ29tbWVudDE3Mjg2MDQyMA==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-01-19T13:55:04Z","updated_at":"2016-01-19T13:55:16Z","author_association":"MEMBER","body":"> ya, I know 100 MB is too large. in past,we tried on 10-15 MB bulk size but still it did not work.\n\nWhat happened, when you used a smaller bulk size?\n\n> for concurrency, if  we increase it,  ES behaves strange.\n\nCan you describe what type of strangeness you experience then?\n\n> right now we are using  concurrent request = 1 and it works for  a while but if load gets increased then bulk index eats our all threads.\n\nHave you looked at resource usage? There must be something causing blocked threads. I suggest you go through these guides:\n- [Indexing Performance Tips](https://www.elastic.co/guide/en/elasticsearch/guide/current/indexing-performance.html)\n- [Performance Considerations for Elasticsearch Indexing](https://www.elastic.co/blog/performance-considerations-elasticsearch-indexing)\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/173565421","html_url":"https://github.com/elastic/elasticsearch/issues/16074#issuecomment-173565421","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16074","id":173565421,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzU2NTQyMQ==","user":{"login":"adhamelia","id":1576538,"node_id":"MDQ6VXNlcjE1NzY1Mzg=","avatar_url":"https://avatars1.githubusercontent.com/u/1576538?v=4","gravatar_id":"","url":"https://api.github.com/users/adhamelia","html_url":"https://github.com/adhamelia","followers_url":"https://api.github.com/users/adhamelia/followers","following_url":"https://api.github.com/users/adhamelia/following{/other_user}","gists_url":"https://api.github.com/users/adhamelia/gists{/gist_id}","starred_url":"https://api.github.com/users/adhamelia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adhamelia/subscriptions","organizations_url":"https://api.github.com/users/adhamelia/orgs","repos_url":"https://api.github.com/users/adhamelia/repos","events_url":"https://api.github.com/users/adhamelia/events{/privacy}","received_events_url":"https://api.github.com/users/adhamelia/received_events","type":"User","site_admin":false},"created_at":"2016-01-21T13:17:27Z","updated_at":"2016-01-21T13:17:27Z","author_association":"NONE","body":"thanks guys ... finally the issue has been fixed... :)\n\nwe stopped sharing bulk processor instance across threads. now,each thread has own copy of bulk processor \n\n5k docs/sec achieved !!!\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/173834529","html_url":"https://github.com/elastic/elasticsearch/issues/16074#issuecomment-173834529","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16074","id":173834529,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzgzNDUyOQ==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-01-22T07:35:00Z","updated_at":"2016-01-22T07:35:00Z","author_association":"MEMBER","body":"Hi, Alpesh,\n\ngood to hear that you've resolved your problem. Nevertheless, this sounds to me that you have (or had?) a problem elsewhere in your code. You should also get decent throughput if you have just one bulk processor instance so you might want to take a second look at your code. Did you lock on the bulk processor instance previously, i.e. did you have something like this in your code?\n\n``` java\nsynchronized (bulkProcessor) {\n  // ... do something here\n}\n```\n\nThis shouldn't be necessary and would explain why you had problems with throughput previously.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/173873460","html_url":"https://github.com/elastic/elasticsearch/issues/16074#issuecomment-173873460","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16074","id":173873460,"node_id":"MDEyOklzc3VlQ29tbWVudDE3Mzg3MzQ2MA==","user":{"login":"adhamelia","id":1576538,"node_id":"MDQ6VXNlcjE1NzY1Mzg=","avatar_url":"https://avatars1.githubusercontent.com/u/1576538?v=4","gravatar_id":"","url":"https://api.github.com/users/adhamelia","html_url":"https://github.com/adhamelia","followers_url":"https://api.github.com/users/adhamelia/followers","following_url":"https://api.github.com/users/adhamelia/following{/other_user}","gists_url":"https://api.github.com/users/adhamelia/gists{/gist_id}","starred_url":"https://api.github.com/users/adhamelia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adhamelia/subscriptions","organizations_url":"https://api.github.com/users/adhamelia/orgs","repos_url":"https://api.github.com/users/adhamelia/repos","events_url":"https://api.github.com/users/adhamelia/events{/privacy}","received_events_url":"https://api.github.com/users/adhamelia/received_events","type":"User","site_admin":false},"created_at":"2016-01-22T10:34:24Z","updated_at":"2016-01-22T10:34:24Z","author_association":"NONE","body":"no we did not do that.. we never block our akka actor ...\n\neven i am surprised when came to know that threads were blocking on bulk processor method \n\nprivate synchronized void internalAdd(ActionRequest request, @Nullable Object payload) {\n        bulkRequest.add(request, payload);\n       executeIfNeeded();\n   } \n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/173913338","html_url":"https://github.com/elastic/elasticsearch/issues/16074#issuecomment-173913338","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16074","id":173913338,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzkxMzMzOA==","user":{"login":"danielmitterdorfer","id":1699576,"node_id":"MDQ6VXNlcjE2OTk1NzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1699576?v=4","gravatar_id":"","url":"https://api.github.com/users/danielmitterdorfer","html_url":"https://github.com/danielmitterdorfer","followers_url":"https://api.github.com/users/danielmitterdorfer/followers","following_url":"https://api.github.com/users/danielmitterdorfer/following{/other_user}","gists_url":"https://api.github.com/users/danielmitterdorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/danielmitterdorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielmitterdorfer/subscriptions","organizations_url":"https://api.github.com/users/danielmitterdorfer/orgs","repos_url":"https://api.github.com/users/danielmitterdorfer/repos","events_url":"https://api.github.com/users/danielmitterdorfer/events{/privacy}","received_events_url":"https://api.github.com/users/danielmitterdorfer/received_events","type":"User","site_admin":false},"created_at":"2016-01-22T12:55:23Z","updated_at":"2016-01-22T12:55:23Z","author_association":"MEMBER","body":"Well, it seems we have found your contention point. Yes, bulk processor is blocking, so your other actors will not be able to make progress in case the bulk request limit is hit (if you share the bulk processor instance). The usage model for bulk processor is just not a good fit for actors.\n\nWith your solution you have eliminated this contention point. Another idea you could try is to create a dedicated actor that owns the sole bulk processor instance and just send messages to this actor. To me this feels more natural than giving each actor its own bulk processor instance and I think it's also easier to test.\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/comments/173964549","html_url":"https://github.com/elastic/elasticsearch/issues/16074#issuecomment-173964549","issue_url":"https://api.github.com/repos/elastic/elasticsearch/issues/16074","id":173964549,"node_id":"MDEyOklzc3VlQ29tbWVudDE3Mzk2NDU0OQ==","user":{"login":"bleskes","id":1006375,"node_id":"MDQ6VXNlcjEwMDYzNzU=","avatar_url":"https://avatars1.githubusercontent.com/u/1006375?v=4","gravatar_id":"","url":"https://api.github.com/users/bleskes","html_url":"https://github.com/bleskes","followers_url":"https://api.github.com/users/bleskes/followers","following_url":"https://api.github.com/users/bleskes/following{/other_user}","gists_url":"https://api.github.com/users/bleskes/gists{/gist_id}","starred_url":"https://api.github.com/users/bleskes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bleskes/subscriptions","organizations_url":"https://api.github.com/users/bleskes/orgs","repos_url":"https://api.github.com/users/bleskes/repos","events_url":"https://api.github.com/users/bleskes/events{/privacy}","received_events_url":"https://api.github.com/users/bleskes/received_events","type":"User","site_admin":false},"created_at":"2016-01-22T16:12:29Z","updated_at":"2016-01-22T16:12:29Z","author_association":"MEMBER","body":"> The usage model for bulk processor is just not a good fit for actors.\n\nJust a note that the bulk processor still gives you nice retry properties and back pressure logic from ES. You can use async handling and set the semaphore limiting concurrent requests to something that's high enough to fit your need. Also, having one processor means that data will be sent faster to ES as messages from all actors count towards the quota to send a bulk\n","performed_via_github_app":null}]