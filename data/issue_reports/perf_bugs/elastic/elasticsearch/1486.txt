{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/1486","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1486/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1486/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/1486/events","html_url":"https://github.com/elastic/elasticsearch/issues/1486","id":2318482,"node_id":"MDU6SXNzdWUyMzE4NDgy","number":1486,"title":"Geo_Polygon Performance Issues","user":{"login":"geodawg","id":891756,"node_id":"MDQ6VXNlcjg5MTc1Ng==","avatar_url":"https://avatars3.githubusercontent.com/u/891756?v=4","gravatar_id":"","url":"https://api.github.com/users/geodawg","html_url":"https://github.com/geodawg","followers_url":"https://api.github.com/users/geodawg/followers","following_url":"https://api.github.com/users/geodawg/following{/other_user}","gists_url":"https://api.github.com/users/geodawg/gists{/gist_id}","starred_url":"https://api.github.com/users/geodawg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geodawg/subscriptions","organizations_url":"https://api.github.com/users/geodawg/orgs","repos_url":"https://api.github.com/users/geodawg/repos","events_url":"https://api.github.com/users/geodawg/events{/privacy}","received_events_url":"https://api.github.com/users/geodawg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2011-11-22T14:42:47Z","updated_at":"2013-04-05T16:04:11Z","closed_at":"2013-04-05T16:04:11Z","author_association":"NONE","active_lock_reason":null,"body":"I have been doing some rigorous testing to see if I can make ElasticSearch perform better than a relational database. In particular, I would like to be able to run a query that ultimately returns all the points within a complex polygon. To compare the two, I loaded the entire geonames allcountries.txt file in to Postgresql 9.0 (with latest PostGIS) on my Macbook Pro. I am also using the latest release version of ES on the same machine.\n\nThere are 7,836,496 point geometries in the geonames data set. Here are my stats from 3 different queries and note that the times are slower as expected but the number of returned results are much different which concerns me. The countries were chosen based on their size from small => medium => large.\n\nBahrain: PG\nTime:   19      12      18      16ms\n# 's :   210     210     210     210\n\nBahrain: ES\nTime:   5923    1302    1186    1138ms\n# 's :   219     219     219     219\n\nEgypt: PG\nTime:   5339    2812    3024    3312ms\n# 's :   23203   23203   23203   23203\n\nEgypt: ES\nTime:   14754   14353   14380   14399ms\n# 's :   10759   10759   10759   10759\n\nChina: PG\nTime:   57617   57520   61826   58494\n# 's :   252723  252723  252723  252723\n\nChina: ES\nTime:   90999   170864  282611  289245ms\n# 's :   150230  150230  150230  150230\n\nThe query I used in ES can be found here. https://gist.github.com/1385785 Due to size limitations in gist, I had to cut off the polygon so the full polygon data can be found here https://ogr2elasticsearch.googlecode.com/files/polygons.zip \n\nThe postgresql query can be found here. https://gist.github.com/1385796 if someone else would like to try and replicate the test. I also noticed that ES is returning data from neighboring countries as well which means that it is not honoring the same \"within\" conditions that postgis uses.\n\nAdam\n","closed_by":{"login":"clintongormley","id":56599,"node_id":"MDQ6VXNlcjU2NTk5","avatar_url":"https://avatars0.githubusercontent.com/u/56599?v=4","gravatar_id":"","url":"https://api.github.com/users/clintongormley","html_url":"https://github.com/clintongormley","followers_url":"https://api.github.com/users/clintongormley/followers","following_url":"https://api.github.com/users/clintongormley/following{/other_user}","gists_url":"https://api.github.com/users/clintongormley/gists{/gist_id}","starred_url":"https://api.github.com/users/clintongormley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintongormley/subscriptions","organizations_url":"https://api.github.com/users/clintongormley/orgs","repos_url":"https://api.github.com/users/clintongormley/repos","events_url":"https://api.github.com/users/clintongormley/events{/privacy}","received_events_url":"https://api.github.com/users/clintongormley/received_events","type":"User","site_admin":false},"performed_via_github_app":null}