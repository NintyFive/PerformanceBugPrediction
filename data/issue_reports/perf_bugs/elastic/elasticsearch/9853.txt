{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/9853","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9853/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9853/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/9853/events","html_url":"https://github.com/elastic/elasticsearch/issues/9853","id":58773771,"node_id":"MDU6SXNzdWU1ODc3Mzc3MQ==","number":9853,"title":"For a given list of indices - consecutively iterating thru and setting index.routing.allocation.require gets progressively slower","user":{"login":"petecheslock","id":511733,"node_id":"MDQ6VXNlcjUxMTczMw==","avatar_url":"https://avatars2.githubusercontent.com/u/511733?v=4","gravatar_id":"","url":"https://api.github.com/users/petecheslock","html_url":"https://github.com/petecheslock","followers_url":"https://api.github.com/users/petecheslock/followers","following_url":"https://api.github.com/users/petecheslock/following{/other_user}","gists_url":"https://api.github.com/users/petecheslock/gists{/gist_id}","starred_url":"https://api.github.com/users/petecheslock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/petecheslock/subscriptions","organizations_url":"https://api.github.com/users/petecheslock/orgs","repos_url":"https://api.github.com/users/petecheslock/repos","events_url":"https://api.github.com/users/petecheslock/events{/privacy}","received_events_url":"https://api.github.com/users/petecheslock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"assignees":[{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2015-02-24T17:38:21Z","updated_at":"2015-03-15T15:34:48Z","closed_at":"2015-03-14T22:00:58Z","author_association":"NONE","active_lock_reason":null,"body":"Using the curator tool (or a bash like `for i in list of indices`;do blah;done) rolling thru 1000 indexes the api calls get progressively slower and slower.\n\nThe scenario is to set all the indexes to a certain class as we move towards a tiered storage strategy.\nwe set `class:ssd`\n\nI don't have 1st run logs - but on a 2nd run it looks like\n\n```\ncurator allocation --older-than 0 --prefix globallogs. --timestring '%Y%m%d' --rule class=ssd\n2015-02-24 15:54:29,318 INFO      Job starting...\n2015-02-24 15:54:29,320 INFO      Applying allocation/routing tags to indices...\n2015-02-24 15:54:29,394 INFO      Updating index setting index.routing.allocation.require.class=ssd\n2015-02-24 15:54:33,407 INFO      apply_allocation_rule operation succeeded on globallogs.20110812\n2015-02-24 15:54:33,409 INFO      Updating index setting index.routing.allocation.require.class=ssd\n2015-02-24 15:54:37,430 INFO      apply_allocation_rule operation succeeded on globallogs.20110813\n\n<snip>\n\n2015-02-24 17:30:46,229 INFO      apply_allocation_rule operation succeeded on globallogs.20141104\n2015-02-24 17:30:46,231 INFO      Updating index setting index.routing.allocation.require.class=ssd\n2015-02-24 17:30:55,402 INFO      apply_allocation_rule operation succeeded on globallogs.20141105\n2015-02-24 17:30:55,403 INFO      Updating index setting index.routing.allocation.require.class=ssd\n```\n\nI've tried to do a single shard like `curl -XPUT localhost:9200/globallogs.20150223/_settings -d '{\"index.routing.allocation.require.class\" : \"ssd\"}'` and it took the same amount of time to respond.\n\nQuerying Hot threads from /_nodes/hot_threads - gives https://gist.github.com/petecheslock/9d27dba1afe6fe0578e4\n\nWe are running v1.4.3\n","closed_by":{"login":"dakrone","id":19060,"node_id":"MDQ6VXNlcjE5MDYw","avatar_url":"https://avatars3.githubusercontent.com/u/19060?v=4","gravatar_id":"","url":"https://api.github.com/users/dakrone","html_url":"https://github.com/dakrone","followers_url":"https://api.github.com/users/dakrone/followers","following_url":"https://api.github.com/users/dakrone/following{/other_user}","gists_url":"https://api.github.com/users/dakrone/gists{/gist_id}","starred_url":"https://api.github.com/users/dakrone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dakrone/subscriptions","organizations_url":"https://api.github.com/users/dakrone/orgs","repos_url":"https://api.github.com/users/dakrone/repos","events_url":"https://api.github.com/users/dakrone/events{/privacy}","received_events_url":"https://api.github.com/users/dakrone/received_events","type":"User","site_admin":false},"performed_via_github_app":null}