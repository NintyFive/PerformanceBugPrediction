{"url":"https://api.github.com/repos/elastic/elasticsearch/issues/41406","repository_url":"https://api.github.com/repos/elastic/elasticsearch","labels_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41406/labels{/name}","comments_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41406/comments","events_url":"https://api.github.com/repos/elastic/elasticsearch/issues/41406/events","html_url":"https://github.com/elastic/elasticsearch/issues/41406","id":435686261,"node_id":"MDU6SXNzdWU0MzU2ODYyNjE=","number":41406,"title":"Improve TaskBatcher performance in case of a datacenter failure","user":{"login":"incubos","id":665821,"node_id":"MDQ6VXNlcjY2NTgyMQ==","avatar_url":"https://avatars2.githubusercontent.com/u/665821?v=4","gravatar_id":"","url":"https://api.github.com/users/incubos","html_url":"https://github.com/incubos","followers_url":"https://api.github.com/users/incubos/followers","following_url":"https://api.github.com/users/incubos/following{/other_user}","gists_url":"https://api.github.com/users/incubos/gists{/gist_id}","starred_url":"https://api.github.com/users/incubos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/incubos/subscriptions","organizations_url":"https://api.github.com/users/incubos/orgs","repos_url":"https://api.github.com/users/incubos/repos","events_url":"https://api.github.com/users/incubos/events{/privacy}","received_events_url":"https://api.github.com/users/incubos/received_events","type":"User","site_admin":false},"labels":[{"id":836504707,"node_id":"MDU6TGFiZWw4MzY1MDQ3MDc=","url":"https://api.github.com/repos/elastic/elasticsearch/labels/:Distributed/Distributed","name":":Distributed/Distributed","color":"0e8a16","default":false,"description":"A catch all label for anything in the Distributed Area. If you aren't sure, use this one."},{"id":1967496670,"node_id":"MDU6TGFiZWwxOTY3NDk2Njcw","url":"https://api.github.com/repos/elastic/elasticsearch/labels/Team:Distributed","name":"Team:Distributed","color":"fef2c0","default":false,"description":"Meta label for distributed team"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-04-22T10:49:03Z","updated_at":"2020-05-27T12:01:11Z","closed_at":"2020-05-27T12:01:11Z","author_association":"NONE","active_lock_reason":null,"body":"We have a production cluster containing several hundred shards distributed between several datacenters. In case of a datacenter failure it takes **10-15 min** for the cluster to converge and resume normal functioning, which is not quite acceptable.\r\nStack trace analysis shows that all `transport_server_worker.default` threads are **blocked** on `TaskBatcher.submitTasks()` during that downtime interval:\r\n```java\r\n\"elasticsearch[XXX][[transport_server_worker.default]][T#72]\" - Thread t@251\r\n   java.lang.Thread.State: BLOCKED\r\n        at org.elasticsearch.cluster.service.TaskBatcher.submitTasks(TaskBatcher.java:70)\r\n        - waiting to lock <7d67b8b6> (a java.util.HashMap) owned by \"elasticsearch[XXX][[transport_server_worker.default]][T#91]\" t@270\r\n        at org.elasticsearch.cluster.service.ClusterService.submitStateUpdateTasks(ClusterService.java:476)\r\n        at org.elasticsearch.cluster.service.ClusterService.submitStateUpdateTask(ClusterService.java:450)\r\n        at org.elasticsearch.cluster.action.shard.ShardStateAction$ShardFailedTransportHandler.messageReceived(ShardStateAction.java:211)\r\n        at org.elasticsearch.cluster.action.shard.ShardStateAction$ShardFailedTransportHandler.messageReceived(ShardStateAction.java:197)\r\n        at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)\r\n        at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69)\r\n        at org.elasticsearch.transport.TcpTransport$RequestHandler.doRun(TcpTransport.java:1556)\r\n        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\r\n        at org.elasticsearch.common.util.concurrent.EsExecutors$1.execute(EsExecutors.java:110)\r\n        at org.elasticsearch.transport.TcpTransport.handleRequest(TcpTransport.java:1513)\r\n        at org.elasticsearch.transport.TcpTransport.messageReceived(TcpTransport.java:1396)\r\n        at org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:75)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:297)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:413)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:544)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n```\r\nAt the same time `TaskBatcher` queue contains tens of thousands tasks.\r\nThere are two major causes for the bottleneck:\r\n\r\n1. `TaskBatcher` effectively serializes attempts to submit state update tasks due to use of `serialized(tasksPerBatchingKey)`\r\n2. `TaskBatcher` compares each added task to all the existing tasks in `O(n)` to ensure no duplicate exists\r\n\r\nThe problem can be easily reproduced using `v5.6.11` release. `TaskBatcher` remains unchanged in `master`.","closed_by":{"login":"ywelsch","id":3718355,"node_id":"MDQ6VXNlcjM3MTgzNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/3718355?v=4","gravatar_id":"","url":"https://api.github.com/users/ywelsch","html_url":"https://github.com/ywelsch","followers_url":"https://api.github.com/users/ywelsch/followers","following_url":"https://api.github.com/users/ywelsch/following{/other_user}","gists_url":"https://api.github.com/users/ywelsch/gists{/gist_id}","starred_url":"https://api.github.com/users/ywelsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywelsch/subscriptions","organizations_url":"https://api.github.com/users/ywelsch/orgs","repos_url":"https://api.github.com/users/ywelsch/repos","events_url":"https://api.github.com/users/ywelsch/events{/privacy}","received_events_url":"https://api.github.com/users/ywelsch/received_events","type":"User","site_admin":false},"performed_via_github_app":null}